{"version":3,"sources":["panels/stations/edit-diag/name-list-items.tsx","panels/stations/edit-diag/num-list-item.tsx","panels/stations/edit-diag/name-tab.tsx"],"names":["useStyles","makeStyles","createStyles","listItemIcon","width","fontSize","textAlign","NameListItems","props","t","useTranslation","classes","React","className","style","variant","label","onChange","onUpdate","value","name","helperText","toString","NumListItem","ParamContext","param","dispatch","e","type","stnId","num","target","stn_list","NameTab","stnInfo","index","event","map","val","i","window","urlParams","get"],"mappings":"gIAAA,yBAKMA,EAAYC,sBAAW,kBACzBC,uBAAa,CACTC,aAAc,CACVC,MAAO,MACPC,SAAU,SACVC,UAAW,eAiDRC,IAvCO,SAACC,GAAkB,IAC7BC,EAAMC,2BAAND,EACFE,EAAUX,IAEhB,OAAOY,WACH,kBACI,gCACI,gBAAC,WAAD,KACI,gBAAC,eAAD,KACI,wBAAMC,UAAWF,EAAQR,cAAzB,WAEJ,gBAAC,YAAD,CACIW,MAAO,CAAEV,MAAO,QAChBW,QAAQ,WACRC,MAAOP,EAAE,6BACTQ,SAAUT,EAAMU,SAAS,GACzBC,MAAOX,EAAMY,KAAK,MAG1B,gBAAC,WAAD,KACI,gBAAC,eAAD,KACI,wBAAMP,UAAWF,EAAQR,cAAzB,MAEJ,gBAAC,YAAD,CACIW,MAAO,CAAEV,MAAO,QAChBW,QAAQ,WACRC,MAAOP,EAAE,6BACTQ,SAAUT,EAAMU,SAAS,GACzBC,MAAOX,EAAMY,KAAK,GAClBC,WAAYZ,EAAE,yCAM9B,CAACD,EAAMY,KAAKE,e,+EChBLC,EA9BK,SAACf,GAAkB,IAC3BC,EAAMC,2BAAND,EAD0B,EAENG,aAAiBY,KAArCC,EAF0B,EAE1BA,MAAOC,EAFmB,EAEnBA,SAEf,OAAOd,WACH,kBACI,gBAAC,WAAD,KACI,gBAAC,eAAD,KACI,gBAAC,OAAD,mBAEJ,gBAAC,YAAD,CACIE,MAAO,CAAEV,MAAO,QAChBW,QAAQ,WACRC,MAAOP,EAAE,0BACTQ,SAAU,SAAAU,GAAC,OACPD,EAAS,CACLE,KAAM,qBACNC,MAAOrB,EAAMqB,MACbC,IAAKH,EAAEI,OAAOZ,SAGtBA,MAAOM,EAAMO,SAASxB,EAAMqB,OAAOC,SAK/C,CAACtB,EAAMqB,MAAOJ,EAAMO,SAASxB,EAAMqB,OAAOC,OCFnCG,UApBC,SAACzB,GAAkB,IAAD,EACFI,aAAiBY,KAArCC,EADsB,EACtBA,MAAOC,EADe,EACfA,SACTQ,EAAUT,EAAMO,SAASxB,EAAMqB,OAUrC,OACI,gBAAC,OAAD,KACI,gBAAC,IAAD,CAAeT,KAAMc,EAAQd,KAAMF,SAVtB,SAACiB,GAAD,OAAmB,SAACC,GACrCV,EAAS,CACLE,KAAM,sBACNC,MAAOrB,EAAMqB,MACbT,KAAMc,EAAQd,KAAKiB,KAAI,SAACC,EAAKC,GAAN,OAAYJ,IAAQI,EAAIH,EAAML,OAAOZ,MAAQmB,WAOjC,UAAlCE,OAAOC,UAAUC,IAAI,UAAwB,gBAAC,EAAD,CAAab,MAAOrB,EAAMqB","file":"static/js/panelStationsName.8a38b2b7.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ListItem, ListItemIcon, TextField, makeStyles, createStyles } from '@material-ui/core';\nimport { Name } from '../../../types';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        listItemIcon: {\n            width: '1em',\n            fontSize: '1.5rem',\n            textAlign: 'center',\n        },\n    })\n);\n\ninterface Props {\n    onUpdate: (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => void;\n    name: Name;\n}\n\nconst NameListItems = (props: Props) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    return React.useMemo(\n        () => (\n            <>\n                <ListItem>\n                    <ListItemIcon>\n                        <span className={classes.listItemIcon}>æ¼¢</span>\n                    </ListItemIcon>\n                    <TextField\n                        style={{ width: '100%' }}\n                        variant=\"outlined\"\n                        label={t('stations.edit.name.nameZH')}\n                        onChange={props.onUpdate(0)}\n                        value={props.name[0]}\n                    />\n                </ListItem>\n                <ListItem>\n                    <ListItemIcon>\n                        <span className={classes.listItemIcon}>A</span>\n                    </ListItemIcon>\n                    <TextField\n                        style={{ width: '100%' }}\n                        variant=\"outlined\"\n                        label={t('stations.edit.name.nameEN')}\n                        onChange={props.onUpdate(1)}\n                        value={props.name[1]}\n                        helperText={t('stations.edit.name.nameENHelper')}\n                    />\n                </ListItem>\n            </>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.name.toString()]\n    );\n};\n\nexport default NameListItems;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ListItem, ListItemIcon, Icon, TextField } from '@material-ui/core';\nimport { ParamContext } from '../../../context';\n\ninterface Props {\n    stnId: string;\n}\n\nconst NumListItem = (props: Props) => {\n    const { t } = useTranslation();\n    const { param, dispatch } = React.useContext(ParamContext);\n\n    return React.useMemo(\n        () => (\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>looks_one</Icon>\n                </ListItemIcon>\n                <TextField\n                    style={{ width: '100%' }}\n                    variant=\"outlined\"\n                    label={t('stations.edit.name.num')}\n                    onChange={e =>\n                        dispatch({\n                            type: 'UPDATE_STATION_NUM',\n                            stnId: props.stnId,\n                            num: e.target.value,\n                        })\n                    }\n                    value={param.stn_list[props.stnId].num}\n                />\n            </ListItem>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.stnId, param.stn_list[props.stnId].num]\n    );\n};\n\nexport default NumListItem;\n","import * as React from 'react';\n\nimport { List } from '@material-ui/core';\nimport { Name } from '../../../types';\n\nimport NameListItems from './name-list-items';\nimport NumListItem from './num-list-item';\nimport { ParamContext } from '../../../context';\n\ninterface Props {\n    stnId: string;\n}\n\nconst NameTab = (props: Props) => {\n    const { param, dispatch } = React.useContext(ParamContext);\n    const stnInfo = param.stn_list[props.stnId];\n\n    const handleUpdate = (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch({\n            type: 'UPDATE_STATION_NAME', \n            stnId: props.stnId, \n            name: stnInfo.name.map((val, i) => index===i ? event.target.value : val) as Name,\n        });\n    };\n\n    return (\n        <List>\n            <NameListItems name={stnInfo.name} onUpdate={handleUpdate} />\n            {window.urlParams.get('style') === 'gzmtr' && <NumListItem stnId={props.stnId} />}\n        </List>\n    );\n};\n\nexport default NameTab;"],"sourceRoot":""}