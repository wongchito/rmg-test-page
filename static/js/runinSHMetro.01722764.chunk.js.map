{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","svgs/runin/runin-shmetro.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","RunInSHMetro","useContext","ParamContext","param","routes","dh","svg_height","prevStnIds","useMemo","filter","route","includes","current_stn_idx","map","direction","reduce","acc","cur","concat","toString","nextStnIds","DefsSHMetro","transform","TerminalStation","stnIds","OriginStation","GeneralStation","memo","id","viewBox","refY","d","fill","props","stroke","strokeWidth","svgWidth","runin","textAnchor","CurrentText","PrevStn","markerEnd","NextStn","middle","name","stn_list","className","fontSize","dy","replace","NextText","nextName","others","dx"],"mappings":"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","file":"static/js/runinSHMetro.01722764.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { useContext, useMemo, memo } from 'react';\nimport { ParamContext } from '../../context';\n\nconst RunInSHMetro = () => {\n    const { param, routes } = useContext(ParamContext);\n\n    // get the height\n    const dh = param.svg_height - 300;\n\n    const prevStnIds = useMemo(\n        () => {\n            // reduce from https://stackoverflow.com/questions/43773999/remove-duplicates-from-arrays-using-reduce\n            // and https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\n            return (\n                routes\n                    .filter(route => route.includes(param.current_stn_idx))\n                    .map(route => route[route.indexOf(param.current_stn_idx) + (param.direction === 'l' ? 1 : -1)])\n                    // .flat()\n                    // remove duplicate\n                    .reduce((acc, cur) => (acc.includes(cur) ? acc : acc.concat(cur)), [] as string[])\n            );\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [routes.toString(), param.current_stn_idx, param.direction]\n    );\n\n    const nextStnIds = useMemo(\n        () =>\n            routes\n                .filter(route => route.includes(param.current_stn_idx))\n                .map(route => route[route.indexOf(param.current_stn_idx) + (param.direction === 'l' ? -1 : 1)])\n                // .flat()\n                // remove duplicate\n                .reduce((acc, cur) => (acc.includes(cur) ? acc : acc.concat(cur)), [] as string[]),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [routes.toString(), param.current_stn_idx, param.direction]\n    );\n\n    return (\n        <>\n            <DefsSHMetro />\n            <g transform={`translate(0,${dh})`}>\n                {nextStnIds.length === 1 && ['linestart', 'lineend'].includes(nextStnIds[0]) ? (\n                    <TerminalStation stnIds={prevStnIds} />\n                ) : prevStnIds.length === 1 && ['linestart', 'lineend'].includes(prevStnIds[0]) ? (\n                    <OriginStation stnIds={nextStnIds} />\n                ) : (\n                    <GeneralStation prevStnIds={prevStnIds} nextStnIds={nextStnIds} />\n                )}\n            </g>\n        </>\n    );\n};\n\nexport default RunInSHMetro;\n\nconst DefsSHMetro = memo(() => (\n    <defs>\n        {/* An extension of the line/path. Remember to minus the stroke-width.  */}\n        <marker id=\"slope\" viewBox=\"-1.5 0 3 1.5\" refY={0.5}>\n            <path d=\"M0,0L1,1H-1z\" fill=\"var(--rmg-theme-colour)\" />\n        </marker>\n    </defs>\n));\n\nconst TerminalStation = (props: { stnIds: string[] }) => {\n    const { param } = useContext(ParamContext);\n\n    return (\n        <>\n            <path\n                transform=\"translate(0,220)\"\n                stroke=\"gray\"\n                strokeWidth={12}\n                d={`M24,16 H ${param.svgWidth.runin - 24}`}\n            />\n            <g\n                transform={`translate(${param.direction === 'l' ? 36 : param.svgWidth.runin - 36},160)`}\n                textAnchor={param.direction === 'l' ? 'start' : 'end'}\n            >\n                <CurrentText />\n            </g>\n            <PrevStn {...props} />\n        </>\n    );\n};\n\nconst OriginStation = (props: { stnIds: string[] }) => {\n    const { param } = useContext(ParamContext);\n\n    return (\n        <>\n            <path\n                transform=\"translate(0,220)\"\n                stroke=\"var(--rmg-theme-colour)\"\n                strokeWidth={12}\n                d={\n                    param.direction === 'l'\n                        ? `M ${param.svgWidth.runin - 24},16 H 36`\n                        : `M24,16 H ${param.svgWidth.runin - 36}`\n                }\n                markerEnd=\"url(#slope)\"\n            />\n            <g\n                transform={`translate(${param.direction === 'l' ? param.svgWidth.runin - 36 : 36},160)`}\n                textAnchor={param.direction === 'l' ? 'end' : 'start'}\n            >\n                <CurrentText />\n            </g>\n            <NextStn {...props} />\n        </>\n    );\n};\n\ninterface RunInGeneralProps {\n    prevStnIds: string[];\n    nextStnIds: string[];\n}\n\nconst GeneralStation = (props: RunInGeneralProps) => {\n    const { param } = useContext(ParamContext);\n    const middle = param.svgWidth.runin / 2;\n\n    return (\n        <>\n            <g transform=\"translate(0,220)\" strokeWidth={12}>\n                <path\n                    stroke=\"var(--rmg-theme-colour)\"\n                    d={`M ${middle},16 H ${param.direction === 'l' ? 36 : param.svgWidth.runin - 36}`}\n                    markerEnd=\"url(#slope)\"\n                />\n                <path\n                    stroke=\"gray\"\n                    d={`M ${middle},16 H ${param.direction === 'l' ? param.svgWidth.runin - 24 : 24} `}\n                />\n            </g>\n            <g transform=\"translate(0,110)\" strokeWidth={12} fill=\"none\">\n                {props.nextStnIds.length > 1 && (\n                    <path\n                        stroke=\"var(--rmg-theme-colour)\"\n                        d={\n                            param.direction === 'l'\n                                ? `M${param.svgWidth.runin / 3},125 L${param.svgWidth.runin / 6},10 H36`\n                                : `M${(param.svgWidth.runin / 3) * 2},125 L${(param.svgWidth.runin / 6) * 5},10 H${\n                                      param.svgWidth.runin - 36\n                                  }`\n                        }\n                        markerEnd=\"url(#slope)\"\n                    />\n                )}\n                {props.prevStnIds.length > 1 && (\n                    <path\n                        stroke=\"gray\"\n                        d={\n                            param.direction === 'l'\n                                ? `M${(param.svgWidth.runin / 3) * 2},125 L${(param.svgWidth.runin / 6) * 5},10 H${\n                                      param.svgWidth.runin - 24\n                                  }`\n                                : `M${param.svgWidth.runin / 3},125 L${param.svgWidth.runin / 6},10 H24`\n                        }\n                    />\n                )}\n            </g>\n            <g transform={`translate(${param.svgWidth.runin / 2},160)`} textAnchor=\"middle\">\n                <CurrentText />\n            </g>\n            <NextStn stnIds={props.nextStnIds} />\n            <PrevStn stnIds={props.prevStnIds} />\n        </>\n    );\n};\n\nconst CurrentText = () => {\n    const { param } = useContext(ParamContext);\n    const { name } = param.stn_list[param.current_stn_idx];\n    return useMemo(\n        () => (\n            <>\n                <text className=\"rmg-name__zh\" fontSize={112}>\n                    {name[0]}\n                </text>\n                <text className=\"rmg-name__en\" fontSize={36} dy={50}>\n                    {name[1].replace('\\\\', ' ')}\n                </text>\n            </>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [...name]\n    );\n};\n\nconst NextText = (props: { nextName: Name } & React.SVGProps<SVGGElement>) => {\n    const { nextName, ...others } = props;\n    return (\n        <g {...others}>\n            {useMemo(\n                () => (\n                    <>\n                        <text className=\"rmg-name__zh\" fontSize={48}>\n                            {nextName[0]}\n                        </text>\n                        <text className=\"rmg-name__en\" fontSize={24} dy={28}>\n                            {nextName[1].replace('\\\\', ' ')}\n                        </text>\n                    </>\n                ),\n                // eslint-disable-next-line react-hooks/exhaustive-deps\n                [...nextName]\n            )}\n        </g>\n    );\n};\n\nconst PrevStn = (props: { stnIds: string[] }) => {\n    const { param } = useContext(ParamContext);\n\n    return (\n        <g\n            fill=\"gray\"\n            textAnchor={param.direction === 'l' ? 'end' : 'start'}\n            transform={`translate(${param.direction === 'l' ? param.svgWidth.runin - 36 : 36},0)`}\n        >\n            <NextText nextName={param.stn_list[props.stnIds[0]].name} transform=\"translate(0,183)\" />\n            {props.stnIds.length > 1 && (\n                <NextText nextName={param.stn_list[props.stnIds[1]].name} transform=\"translate(0,70)\" />\n            )}\n            <g transform={`translate(0, ${-(props.stnIds.length > 1 ? 110 : 0) + 125})`}>\n                <text className=\"rmg-name__zh\" fontSize={22}>\n                    上一站\n                </text>\n                <text className=\"rmg-name__en\" fontSize={12} dx={param.direction === 'l' ? -70 : 70}>\n                    Past Stop\n                </text>\n            </g>\n        </g>\n    );\n};\n\nconst NextStn = (props: { stnIds: string[] }) => {\n    const { param } = useContext(ParamContext);\n\n    return (\n        <g\n            textAnchor={param.direction === 'l' ? 'start' : 'end'}\n            transform={`translate(${param.direction === 'l' ? 36 : param.svgWidth.runin - 36},0)`}\n        >\n            <NextText nextName={param.stn_list[props.stnIds[0]].name} transform=\"translate(0,183)\" />\n            {props.stnIds.length > 1 && (\n                <NextText nextName={param.stn_list[props.stnIds[1]].name} transform=\"translate(0,70)\" />\n            )}\n            <g transform={`translate(0, ${-(props.stnIds.length > 1 ? 110 : 0) + 125})`}>\n                <text className=\"rmg-name__zh\" fontSize={22}>\n                    下一站\n                </text>\n                <text className=\"rmg-name__en\" fontSize={12} dx={param.direction === 'l' ? 70 : -70}>\n                    Next Stop\n                </text>\n            </g>\n        </g>\n    );\n};\n"],"sourceRoot":""}