{"version":3,"sources":["panels/design/list-common.tsx","panels/design/panel.tsx","panels/design/index.ts","panels/colour-diag/colours lazy /^/.//.*$/ groupOptions: {} namespace object","panels/colour-diag/data.ts","panels/colour-diag/theme-items.tsx","panels/colour-diag/dialog.tsx","panels/colour-diag/index.ts"],"names":["useStyles","makeStyles","theme","createStyles","dividerVertical","margin","spacing","DesignList","t","useTranslation","React","ParamContext","param","dispatch","isCDiagOpen","setIsCDiagOpen","button","onClick","primary","secondary","style","backgroundColor","color","padding","Object","values","line_name","join","open","lineName","onUpdate","key","value","type","name","onClose","DirectionLi","classes","direction","orientation","flexItem","className","variant","PlatformNumLi","platform_num","onChange","e","platform","target","DesignMTR","lazy","DesignGZMTR","DesignPanel","rmgStyle","useContext","CanvasContext","container","justify","alignItems","item","xs","sm","md","lg","component","disablePadding","Suspense","fallback","Panel","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","code","ids","id","keys","module","exports","cityList","country","en","zh","ga","pt","ko","ja","cityItem","display","flexDirection","menuItemSpan","borderRadius","height","width","minWidth","marginRight","border","inputColour","position","left","top","buttonContainer","flexShrink","memo","props","i18n","useState","hexTemp","setHexTemp","lineList","list","setList","listPromise","default","useEffect","data","l","i","colour","fg","toString","useLineList","length","filter","newTheme","event","val","idx","select","label","line","disabled","getTransText2","languages","rgb","htmlFor","title","aria-label","borderColor","error","match","hex","toUpperCase","prevProps","nextProps","CitySelect","items","useMemo","c","CountryFlag","useEmojiStyles","img","codePoints","split","char","codePointAt","concat","includes","language","navigator","indexOf","src","process","alt","String","fromCodePoint","cp","parseInt","paperRoot","listItemPaper","justifyContent","iconRoot","palette","action","active","inputBaseRoot","inputBaseInputZH","textAlign","fontSize","paddingTop","inputBaseInputEN","paddingBottom","ColourDialog","nameChange","index","newName","handleClose","dividers","root","input","autoFocus"],"mappings":"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,CACjB,GACA,EACA,GAED,WAAY,CACX,GACA,EACA,GAED,cAAe,CACd,GACA,EACA,GAED,YAAa,CACZ,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,cAAe,CACd,GACA,EACA,GAED,iBAAkB,CACjB,GACA,EACA,GAED,aAAc,CACb,GACA,EACA,GAED,gBAAiB,CAChB,GACA,EACA,GAED,aAAc,CACb,GACA,EACA,GAED,gBAAiB,CAChB,GACA,EACA,GAED,cAAe,CACd,GACA,EACA,GAED,iBAAkB,CACjB,GACA,EACA,GAED,WAAY,CACX,GACA,EACA,GAED,cAAe,CACd,GACA,EACA,GAED,UAAW,CACV,GACA,EACA,IAED,aAAc,CACb,GACA,EACA,IAED,YAAa,CACZ,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,cAAe,CACd,GACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,aAAc,CACb,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,aAAc,CACb,GACA,EACA,IAED,YAAa,CACZ,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,IAED,oBAAqB,CACpB,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,aAAc,CACb,GACA,EACA,IAED,aAAc,CACb,GACA,EACA,IAED,gBAAiB,CAChB,GACA,EACA,IAED,aAAc,CACb,GACA,EACA,IAED,gBAAiB,CAChB,GACA,EACA,IAED,WAAY,CACX,GACA,EACA,IAED,cAAe,CACd,GACA,EACA,IAED,YAAa,CACZ,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,aAAc,CACb,GACA,EACA,IAED,YAAa,CACZ,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,aAAc,CACb,GACA,EACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GA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","file":"static/js/panelDesign.5bf56812.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    ListItem,\n    ListItemIcon,\n    Icon,\n    ListItemText,\n    TextField,\n    Divider,\n    makeStyles,\n    createStyles,\n    Button,\n} from '@material-ui/core';\nimport ColourDialog from '../colour-diag';\nimport { ParamContext } from '../../context';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        dividerVertical: {\n            margin: theme.spacing(0, 2),\n        },\n    })\n);\n\nconst DesignList = () => {\n    const { t } = useTranslation();\n    const { param, dispatch } = React.useContext(ParamContext);\n\n    const [isCDiagOpen, setIsCDiagOpen] = React.useState(false);\n\n    const nameDialogUpdate = (key: string, value: any) => {\n        if (key === 'name') {\n            dispatch({ type: 'SET_LINE_NAME', name: Object.values(value) as Name });\n        }\n        if (key === 'theme') {\n            dispatch({ type: 'SET_THEME', theme: value });\n        }\n    };\n\n    return (\n        <>\n            <ListItem button onClick={() => setIsCDiagOpen(true)}>\n                <ListItemIcon>\n                    <Icon>color_lens</Icon>\n                </ListItemIcon>\n                <ListItemText\n                    primary={t('design.theme')}\n                    secondary={\n                        <span\n                            style={{\n                                backgroundColor: param.theme[2],\n                                color: param.theme[3],\n                                padding: '.1rem .3rem',\n                            }}\n                        >\n                            {Object.values(param.line_name).join()}\n                        </span>\n                    }\n                />\n                <Icon color=\"action\">arrow_right</Icon>\n            </ListItem>\n            <ColourDialog\n                open={isCDiagOpen}\n                theme={param.theme}\n                lineName={param.line_name}\n                onUpdate={nameDialogUpdate}\n                onClose={() => setIsCDiagOpen(false)}\n            />\n            <Divider />\n            <DirectionLi />\n            <Divider />\n            <PlatformNumLi />\n        </>\n    );\n};\n\nexport default DesignList;\n\nconst DirectionLi = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const { param, dispatch } = React.useContext(ParamContext);\n\n    return React.useMemo(\n        () => (\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>directions</Icon>\n                </ListItemIcon>\n                <ListItemText\n                    primary={t('design.direction.button')}\n                    secondary={t('design.direction.' + param.direction)}\n                />\n                <Divider orientation=\"vertical\" flexItem className={classes.dividerVertical} />\n                <Button variant=\"outlined\" color=\"primary\" onClick={() => dispatch({ type: 'SET_DIRECTION' })}>\n                    {t('design.direction.switch')}\n                </Button>\n            </ListItem>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [classes.dividerVertical, param.direction]\n    );\n};\n\nconst PlatformNumLi = () => {\n    const { t } = useTranslation();\n    const { param, dispatch } = React.useContext(ParamContext);\n\n    return React.useMemo(\n        () => (\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>looks_one</Icon>\n                </ListItemIcon>\n                <ListItemText primary={t('design.platform')} />\n                <TextField\n                    value={param.platform_num}\n                    onChange={e => dispatch({ type: 'SET_PLATFORM', platform: e.target.value })}\n                />\n            </ListItem>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [param.platform_num]\n    );\n};\n","import React, { useContext } from 'react';\n\nimport { Grid, Paper, List, Divider, LinearProgress } from '@material-ui/core';\n\nimport DesignCommon from './list-common';\nimport { CanvasContext } from '../../context';\nconst DesignMTR = React.lazy(() => import(/* webpackChunkName: \"panelDesignMTR\" */ './list-mtr'));\nconst DesignGZMTR = React.lazy(() => import(/* webpackChunkName: \"panelDesignGZMTR\" */ './list-gzmtr'));\n\nconst DesignPanel = () => {\n    const { rmgStyle } = useContext(CanvasContext);\n    return (\n        <Grid container spacing={3} justify=\"center\" alignItems=\"flex-start\">\n            <Grid item xs={12} sm={10} md={7} lg={5}>\n                <Paper>\n                    <List component=\"div\" disablePadding>\n                        <DesignCommon />\n                        {rmgStyle === 'mtr' && (\n                            <React.Suspense fallback={<LinearProgress />}>\n                                <Divider />\n                                <DesignMTR />\n                            </React.Suspense>\n                        )}\n                        {rmgStyle === 'gzmtr' && (\n                            <React.Suspense fallback={<LinearProgress />}>\n                                <Divider />\n                                <DesignGZMTR />\n                            </React.Suspense>\n                        )}\n                    </List>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default DesignPanel;\n","import Panel from './panel';\n\nexport default Panel;\n","var map = {\n\t\"./README.md\": [\n\t\t61,\n\t\t7,\n\t\t53\n\t],\n\t\"./beijing\": [\n\t\t25,\n\t\t9,\n\t\t1\n\t],\n\t\"./beijing.ts\": [\n\t\t25,\n\t\t9,\n\t\t1\n\t],\n\t\"./changsha\": [\n\t\t26,\n\t\t9,\n\t\t12\n\t],\n\t\"./changsha.ts\": [\n\t\t26,\n\t\t9,\n\t\t12\n\t],\n\t\"./chengdu\": [\n\t\t27,\n\t\t9,\n\t\t23\n\t],\n\t\"./chengdu.ts\": [\n\t\t27,\n\t\t9,\n\t\t23\n\t],\n\t\"./chongqing\": [\n\t\t28,\n\t\t9,\n\t\t27\n\t],\n\t\"./chongqing.ts\": [\n\t\t28,\n\t\t9,\n\t\t27\n\t],\n\t\"./dongguan\": [\n\t\t29,\n\t\t9,\n\t\t28\n\t],\n\t\"./dongguan.ts\": [\n\t\t29,\n\t\t9,\n\t\t28\n\t],\n\t\"./edinburgh\": [\n\t\t30,\n\t\t9,\n\t\t2\n\t],\n\t\"./edinburgh.ts\": [\n\t\t30,\n\t\t9,\n\t\t2\n\t],\n\t\"./foshan\": [\n\t\t31,\n\t\t9,\n\t\t3\n\t],\n\t\"./foshan.ts\": [\n\t\t31,\n\t\t9,\n\t\t3\n\t],\n\t\"./glasgow\": [\n\t\t32,\n\t\t9,\n\t\t4\n\t],\n\t\"./glasgow.ts\": [\n\t\t32,\n\t\t9,\n\t\t4\n\t],\n\t\"./guangzhou\": [\n\t\t33,\n\t\t9,\n\t\t5\n\t],\n\t\"./guangzhou.ts\": [\n\t\t33,\n\t\t9,\n\t\t5\n\t],\n\t\"./hangzhou\": [\n\t\t34,\n\t\t9,\n\t\t6\n\t],\n\t\"./hangzhou.ts\": [\n\t\t34,\n\t\t9,\n\t\t6\n\t],\n\t\"./hongkong\": [\n\t\t35,\n\t\t9,\n\t\t7\n\t],\n\t\"./hongkong.ts\": [\n\t\t35,\n\t\t9,\n\t\t7\n\t],\n\t\"./kaohsiung\": [\n\t\t36,\n\t\t9,\n\t\t8\n\t],\n\t\"./kaohsiung.ts\": [\n\t\t36,\n\t\t9,\n\t\t8\n\t],\n\t\"./london\": [\n\t\t37,\n\t\t9,\n\t\t9\n\t],\n\t\"./london.ts\": [\n\t\t37,\n\t\t9,\n\t\t9\n\t],\n\t\"./macao\": [\n\t\t38,\n\t\t9,\n\t\t10\n\t],\n\t\"./macao.ts\": [\n\t\t38,\n\t\t9,\n\t\t10\n\t],\n\t\"./nanjing\": [\n\t\t39,\n\t\t9,\n\t\t11\n\t],\n\t\"./nanjing.ts\": [\n\t\t39,\n\t\t9,\n\t\t11\n\t],\n\t\"./newtaipei\": [\n\t\t40,\n\t\t9,\n\t\t13\n\t],\n\t\"./newtaipei.ts\": [\n\t\t40,\n\t\t9,\n\t\t13\n\t],\n\t\"./other\": [\n\t\t41,\n\t\t9,\n\t\t14\n\t],\n\t\"./other.ts\": [\n\t\t41,\n\t\t9,\n\t\t14\n\t],\n\t\"./paris\": [\n\t\t42,\n\t\t9,\n\t\t15\n\t],\n\t\"./paris.ts\": [\n\t\t42,\n\t\t9,\n\t\t15\n\t],\n\t\"./qingdao\": [\n\t\t43,\n\t\t9,\n\t\t16\n\t],\n\t\"./qingdao.ts\": [\n\t\t43,\n\t\t9,\n\t\t16\n\t],\n\t\"./sanfrancisco\": [\n\t\t44,\n\t\t9,\n\t\t17\n\t],\n\t\"./sanfrancisco.ts\": [\n\t\t44,\n\t\t9,\n\t\t17\n\t],\n\t\"./seoul\": [\n\t\t45,\n\t\t9,\n\t\t18\n\t],\n\t\"./seoul.ts\": [\n\t\t45,\n\t\t9,\n\t\t18\n\t],\n\t\"./shanghai\": [\n\t\t46,\n\t\t9,\n\t\t19\n\t],\n\t\"./shanghai.ts\": [\n\t\t46,\n\t\t9,\n\t\t19\n\t],\n\t\"./shenzhen\": [\n\t\t47,\n\t\t9,\n\t\t20\n\t],\n\t\"./shenzhen.ts\": [\n\t\t47,\n\t\t9,\n\t\t20\n\t],\n\t\"./taipei\": [\n\t\t48,\n\t\t9,\n\t\t21\n\t],\n\t\"./taipei.ts\": [\n\t\t48,\n\t\t9,\n\t\t21\n\t],\n\t\"./tianjin\": [\n\t\t49,\n\t\t9,\n\t\t22\n\t],\n\t\"./tianjin.ts\": [\n\t\t49,\n\t\t9,\n\t\t22\n\t],\n\t\"./tokyo\": [\n\t\t50,\n\t\t9,\n\t\t24\n\t],\n\t\"./tokyo.ts\": [\n\t\t50,\n\t\t9,\n\t\t24\n\t],\n\t\"./toronto\": [\n\t\t51,\n\t\t9,\n\t\t25\n\t],\n\t\"./toronto.ts\": [\n\t\t51,\n\t\t9,\n\t\t25\n\t],\n\t\"./xi'an\": [\n\t\t52,\n\t\t9,\n\t\t26\n\t],\n\t\"./xi'an.ts\": [\n\t\t52,\n\t\t9,\n\t\t26\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[2]).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 56;\nmodule.exports = webpackAsyncContext;","export const cityList: CityEntry[] = [\n    {\n        id: 'beijing',\n        country: 'CN',\n        name: {\n            en: 'Beijing',\n            zh: '北京',\n        },\n    },\n    {\n        id: 'changsha',\n        country: 'CN',\n        name: {\n            en: 'Changsha',\n            'zh-Hans': '长沙',\n            'zh-Hant': '長沙',\n        },\n    },\n    {\n        id: 'chengdu',\n        country: 'CN',\n        name: {\n            en: 'Chengdu',\n            zh: '成都',\n        },\n    },\n    {\n        id: 'chongqing',\n        country: 'CN',\n        name: {\n            en: 'Chongqing',\n            'zh-Hans': '重庆',\n            'zh-Hant': '重慶',\n        },\n    },\n    {\n        id: 'dongguan',\n        country: 'CN',\n        name: {\n            en: 'Dongguan',\n            'zh-Hans': '东莞',\n            'zh-Hant': '東莞',\n        },\n    },\n    {\n        id: 'edinburgh',\n        country: 'GBSCT',\n        name: {\n            en: 'Edinburgh',\n            ga: 'Dùn Èideann',\n            'zh-Hans': '爱丁堡',\n            'zh-Hant': '愛丁堡',\n        },\n    },\n    {\n        id: 'foshan',\n        country: 'CN',\n        name: {\n            en: 'Foshan',\n            zh: '佛山',\n        },\n    },\n    {\n        id: 'glasgow',\n        country: 'GBSCT',\n        name: {\n            en: 'Glasgow',\n            ga: 'Glaschu',\n            zh: '格拉斯哥',\n        },\n    },\n    {\n        id: 'guangzhou',\n        country: 'CN',\n        name: {\n            en: 'Guangzhou',\n            'zh-Hans': '广州',\n            'zh-Hant': '廣州',\n        },\n    },\n    {\n        id: 'hangzhou',\n        country: 'CN',\n        name: {\n            en: 'Hangzhou',\n            zh: '杭州',\n        },\n    },\n    {\n        id: 'hongkong',\n        country: 'HK',\n        name: {\n            en: 'Hong Kong',\n            zh: '香港',\n        },\n    },\n    {\n        id: 'kaohsiung',\n        country: 'TW',\n        name: {\n            en: 'Kaohsiung',\n            zh: '高雄',\n        },\n    },\n    {\n        id: 'london',\n        country: 'GBENG',\n        name: {\n            en: 'London',\n            'zh-Hans': '伦敦',\n            'zh-Hant': '倫敦',\n        },\n    },\n    {\n        id: 'macao',\n        country: 'MO',\n        name: {\n            en: 'Macao',\n            pt: 'Macau',\n            'zh-Hans': '澳门',\n            'zh-Hant': '澳門',\n        },\n    },\n    {\n        id: 'nanjing',\n        country: 'CN',\n        name: {\n            en: 'Nanjing',\n            zh: '南京',\n        },\n    },\n    {\n        id: 'newtaipei',\n        country: 'TW',\n        name: {\n            en: 'New Taipei',\n            zh: '新北',\n        },\n    },\n    {\n        id: 'paris',\n        country: 'FR',\n        name: {\n            en: 'Paris',\n            zh: '巴黎',\n        },\n    },\n    {\n        id: 'qingdao',\n        country: 'CN',\n        name: {\n            en: 'Qingdao',\n            'zh-Hans': '青岛',\n            'zh-Hant': '青島',\n        },\n    },\n    {\n        id: 'sanfrancisco',\n        country: 'US',\n        name: {\n            en: 'San Francisco',\n            'zh-Hans': '旧金山',\n            'zh-HK': '三藩市',\n            'zh-TW': '舊金山',\n        },\n    },\n    {\n        id: 'seoul',\n        country: 'KR',\n        name: {\n            en: 'Seoul (Metropolitan Area)',\n            ko: '서울(수도권)',\n            'zh-Hans': '首尔（首都圈）',\n            'zh-Hant': '首爾（首都圈）',\n        },\n    },\n    {\n        id: 'shanghai',\n        country: 'CN',\n        name: {\n            en: 'Shanghai',\n            zh: '上海',\n        },\n    },\n    {\n        id: 'shenzhen',\n        country: 'CN',\n        name: {\n            en: 'Shenzhen',\n            zh: '深圳',\n        },\n    },\n    {\n        id: 'taipei',\n        country: 'TW',\n        name: {\n            en: 'Taipei',\n            zh: '台北',\n        },\n    },\n    {\n        id: 'tianjin',\n        country: 'CN',\n        name: {\n            en: 'Tianjin',\n            zh: '天津',\n        },\n    },\n    {\n        id: 'tokyo',\n        country: 'JP',\n        name: {\n            en: 'Tokyo (Greater Tokyo Area)',\n            ja: '東京（首都圏）',\n            'zh-Hans': '东京（首都圈）',\n            'zh-Hant': '東京（首都圈）',\n        },\n    },\n    {\n        id: 'toronto',\n        country: 'CA',\n        name: {\n            en: 'Toronto',\n            'zh-Hans': '多伦多',\n            'zh-Hant': '多倫多',\n        },\n    },\n    {\n        id: 'xian',\n        country: 'CN',\n        name: {\n            en: \"Xi'an\",\n            zh: '西安',\n        },\n    },\n    {\n        id: 'other',\n        country: 'UN',\n        name: {\n            en: 'Customise (Beta)',\n            'zh-Hans': '自定义 (Beta)',\n            'zh-Hant': '自訂 (Beta)',\n        },\n    },\n];\n","import React, { useEffect, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    ListItem,\n    ListItemIcon,\n    Icon,\n    TextField,\n    MenuItem,\n    Button,\n    makeStyles,\n    createStyles,\n    Tooltip,\n} from '@material-ui/core';\nimport { getTransText2 } from '../../utils';\nimport { cityList } from './data';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        cityItem: {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n        },\n        menuItemSpan: {\n            padding: '0 .3rem',\n        },\n        button: {\n            borderRadius: '50%',\n            height: 28,\n            width: 28,\n            minWidth: 0,\n            marginRight: 8,\n            border: 'solid',\n            padding: 0,\n        },\n        inputColour: {\n            position: 'absolute',\n            width: 0,\n            height: 0,\n            left: 27,\n            top: 32,\n        },\n        buttonContainer: {\n            display: 'flex',\n            flexShrink: 1,\n        },\n    })\n);\n\nconst useLineList = (theme: Theme) => {\n    const [list, setList] = React.useState([] as LineEntry[]);\n\n    const listPromise = theme[0]\n        ? import(/* webpackChunkName: \"colours\" */ `./colours/${theme[0]}`).then(\n              module => module.default as LineEntry[]\n          )\n        : Promise.resolve([] as LineEntry[]);\n\n    useEffect(\n        () => {\n            if (typeof theme[0] === 'undefined') {\n                return;\n            } else if (theme[0] === 'other') {\n                // mutate original list\n                listPromise.then(data => {\n                    setList(\n                        data.map((l, i) => (i === 0 ? { ...l, colour: theme[2], fg: theme[3] || '#fff' } : { ...l }))\n                    );\n                });\n            } else {\n                listPromise.then(data => setList(data));\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [theme.toString()]\n    );\n\n    return list;\n};\n\ninterface ColourDialogProps {\n    theme: [string, string, string, '#000' | '#fff'];\n    onUpdate: (key: string, value: any) => void;\n}\n\nexport default React.memo(\n    function ThemeItems(props: ColourDialogProps) {\n        // console.log('rerender');\n        const classes = useStyles();\n        const { t, i18n } = useTranslation();\n\n        const [hexTemp, setHexTemp] = React.useState(props.theme[2]);\n\n        const cityChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n            let newTheme = props.theme.map((val, idx) => (idx === 0 ? event.target.value : val));\n            props.onUpdate('theme', newTheme);\n        };\n\n        // Hook for fetching line list of current city\n        const lineList = useLineList(props.theme);\n\n        // Hook for updating props.theme when lineList changed\n        useEffect(\n            () => {\n                if (lineList.length === 0) return; // initialising, ignore\n                if (lineList.filter(l => l.id === props.theme[1]).length) return; // current city, ignore\n                let newTheme = [props.theme[0], lineList[0].id, lineList[0].colour, lineList[0].fg || '#fff'];\n                props.onUpdate('theme', newTheme);\n            },\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            [lineList]\n        );\n\n        const lineChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n            let line = event.target.value;\n            let newTheme = [\n                props.theme[0],\n                line,\n                lineList.filter(l => l.id === line)[0].colour,\n                lineList.filter(l => l.id === line)[0].fg || '#fff',\n            ];\n            props.onUpdate('theme', newTheme);\n        };\n\n        // Hook for updating hexTemp when props.hex changed\n        // which means valid hex has been updated to props\n        useEffect(\n            () => {\n                setHexTemp(props.theme[2]);\n            },\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            [props.theme[2]]\n        );\n\n        const colourChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n            let rgb = event.target.value;\n            setHexTemp(rgb);\n\n            if (props.theme[0] !== 'other') {\n                // if hex valid, modify theme city and props.hex\n                let newTheme = ['other', props.theme[1], rgb, props.theme[3]];\n                props.onUpdate('theme', newTheme);\n                // then lineList will be updated by hook (along with selection)\n                // then line will be updated by hook\n            } else {\n                // if hex valid, modify props.hex\n                let newTheme = props.theme.map((val, idx) => (idx === 2 ? rgb : val));\n                props.onUpdate('theme', newTheme);\n                // then lineList will be updated by hook (actually only hex is changed)\n            }\n        };\n\n        const hexChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n            let hex = event.target.value;\n            if (hex.match(/^#[0-9a-fA-f]{0,6}$/) === null) return;\n            setHexTemp(hex);\n\n            if (props.theme[0] !== 'other') {\n                if (hex.match(/^#[0-9a-fA-f]{6}$/) !== null) {\n                    // if hex valid, modify theme city and props.hex\n                    let newTheme = ['other', props.theme[1], hex, props.theme[3]];\n                    props.onUpdate('theme', newTheme);\n                    // then lineList will be updated by hook (along with selection)\n                    // then line will be updated by hook\n                } else {\n                    // if hex not valid, modify theme city only\n                    let newTheme = ['other', props.theme[1], props.theme[2], props.theme[3]];\n                    props.onUpdate('theme', newTheme);\n                    // then lineList will be updated by hook (along with selection)\n                    // then line will be updated by hook\n                }\n            } else {\n                if (hex.match(/^#[0-9a-fA-f]{6}$/) !== null) {\n                    // if hex valid, modify props.hex\n                    let newTheme = props.theme.map((val, idx) => (idx === 2 ? hex : val));\n                    props.onUpdate('theme', newTheme);\n                    // then lineList will be updated by hook (actually only hex is changed)\n                } else {\n                    // if hex not valid, do nothing\n                }\n            }\n        };\n\n        const fgChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n            let newTheme = ['other', 'other', props.theme[2], event.target.value];\n            props.onUpdate('theme', newTheme);\n        };\n\n        return (\n            <>\n                <ListItem>\n                    <ListItemIcon>\n                        <Icon>location_city</Icon>\n                    </ListItemIcon>\n                    <CitySelect value={props.theme[0]} onChange={cityChange} />\n                </ListItem>\n                <ListItem>\n                    <ListItemIcon>\n                        <Icon>subway</Icon>\n                    </ListItemIcon>\n                    <TextField\n                        select\n                        style={{ width: '100%' }}\n                        variant=\"outlined\"\n                        label={t('colour.line')}\n                        onChange={lineChange}\n                        value={props.theme[1]}\n                        disabled={props.theme[0] === 'other'}\n                    >\n                        {lineList.map(l => (\n                            <MenuItem key={l.id} value={l.id}>\n                                <span\n                                    className={classes.menuItemSpan}\n                                    style={{\n                                        backgroundColor: l.colour,\n                                        color: l.fg || '#fff',\n                                    }}\n                                >\n                                    {getTransText2(l.name, i18n.languages)}\n                                </span>\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </ListItem>\n                <ListItem>\n                    <div className={classes.buttonContainer}>\n                        <input\n                            type=\"color\"\n                            id=\"input-color\"\n                            value={props.theme[2]}\n                            onChange={colourChange}\n                            className={classes.inputColour}\n                        />\n                        <label htmlFor=\"input-color\">\n                            <Tooltip title={t('colour.tooltip')} aria-label=\"colour picker\">\n                                <Button\n                                    className={classes.button}\n                                    style={{\n                                        backgroundColor: props.theme[2],\n                                        borderColor: props.theme[3] || '#fff',\n                                    }}\n                                    variant=\"contained\"\n                                    component=\"span\"\n                                >\n                                    {' '}\n                                </Button>\n                            </Tooltip>\n                        </label>\n                    </div>\n                    <TextField\n                        error={!hexTemp?.match(/^#[0-9a-fA-f]{6}$/g)}\n                        style={{ width: '100%', marginRight: 5 }}\n                        variant=\"outlined\"\n                        label={t('colour.colour')}\n                        onChange={hexChange}\n                        value={hexTemp?.toUpperCase()}\n                    ></TextField>\n                    <TextField\n                        select\n                        style={{ width: '100%' }}\n                        variant=\"outlined\"\n                        label={t('colour.fg')}\n                        onChange={fgChange}\n                        value={props.theme[3] || '#fff'}\n                    >\n                        <MenuItem key=\"#fff\" value=\"#fff\">\n                            {t('colour.fgWhite')}\n                        </MenuItem>\n                        <MenuItem key=\"#000\" value=\"#000\">\n                            {t('colour.fgBlack')}\n                        </MenuItem>\n                    </TextField>\n                </ListItem>\n            </>\n        );\n    },\n    (prevProps, nextProps) => prevProps.theme.toString() === nextProps.theme.toString()\n);\n\nconst CitySelect = (props: { value: string; onChange: (event: React.ChangeEvent<HTMLInputElement>) => void }) => {\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n\n    const items = useMemo(\n        () =>\n            cityList.map(c => (\n                <MenuItem key={c.id} value={c.id}>\n                    <span className={classes.cityItem}>\n                        <CountryFlag code={c.country} />\n                        <span>{getTransText2(c.name, i18n.languages)}</span>\n                    </span>\n                </MenuItem>\n            )),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n    return (\n        <TextField\n            select\n            style={{ width: '100%' }}\n            variant=\"outlined\"\n            label={t('colour.city')}\n            value={props.value}\n            onChange={props.onChange}\n        >\n            {items}\n        </TextField>\n    );\n};\n\nconst useEmojiStyles = makeStyles(() =>\n    createStyles({\n        img: {\n            height: 20,\n            marginRight: '0.2rem',\n        },\n    })\n);\n\n/**\n * Convert ISO 3166 alpha-2 country code (followed by BS 6879 UK subdivision code, if applicable) to flag Emoji. For Windows platform, an `img` element with image source from OpenMoji is returned.\n */\nfunction CountryFlag(props: { code: string }) {\n    const { i18n } = useTranslation();\n    const classes = useEmojiStyles();\n\n    let codePoints = [] as string[];\n\n    if (props.code.length === 2) {\n        codePoints = props.code\n            .toUpperCase()\n            .split('')\n            .map(char => ((char.codePointAt(0) || 0) + 127397).toString(16).toUpperCase());\n    } else {\n        codePoints = ['1F3F4'].concat(\n            props.code\n                .toUpperCase()\n                .split('')\n                .map(char => ((char.codePointAt(0) || 0) + 917536).toString(16).toUpperCase()),\n            'E007F'\n        );\n    }\n\n    // special case for simplified Chinese\n    if (['zh-CN', 'zh-Hans'].includes(i18n.language) && props.code === 'TW') codePoints = ['1F3F4'];\n\n    return navigator.platform.indexOf('Win32') !== -1 || navigator.platform.indexOf('Win64') !== -1 ? (\n        <img\n            src={process.env.PUBLIC_URL + `/images/flags/${codePoints.join('-')}.svg`}\n            className={classes.img}\n            alt={`Flag of ${props.code}`}\n        />\n    ) : (\n        // <img src={process.env.PUBLIC_URL + `/images/flags/${codePoints.join('-')}.svg`} className={classes.img} />\n        <span>{String.fromCodePoint(...codePoints.map(cp => parseInt(cp, 16)))}</span>\n    );\n}\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    List,\n    ListItem,\n    Paper,\n    Icon,\n    InputBase,\n    makeStyles,\n    DialogActions,\n    Button,\n    createStyles,\n} from '@material-ui/core';\n\nimport ThemeListItems from './theme-items';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        paperRoot: {\n            width: 250,\n        },\n        listItemPaper: {\n            justifyContent: 'center',\n        },\n        iconRoot: {\n            position: 'absolute',\n            color: theme.palette.action.active,\n        },\n        inputBaseRoot: {\n            display: 'block',\n        },\n        inputBaseInputZH: {\n            textAlign: 'center',\n            fontSize: 36,\n            padding: 0,\n            paddingTop: 6,\n            height: 45,\n        },\n        inputBaseInputEN: {\n            textAlign: 'center',\n            fontSize: 18,\n            padding: 0,\n            paddingBottom: 6,\n            height: 'auto',\n        },\n    })\n);\n\ninterface ColourDialogProps {\n    open: boolean;\n    theme: [string, string, string, '#000' | '#fff'];\n    lineName: Name;\n    onUpdate: (key: string, value: any) => void;\n    onClose: () => void;\n}\n\nconst ColourDialog = React.memo(\n    (props: ColourDialogProps) => {\n        const classes = useStyles();\n        const { t } = useTranslation();\n\n        const nameChange = (value: string, index: number) => {\n            let newName = props.lineName.map((val, idx) => (idx === index ? value : val));\n            props.onUpdate('name', newName);\n            // props.onUpdate('all', [...props.theme, ...newName]);\n        };\n\n        const handleClose = () => {\n            props.onClose();\n        };\n\n        return (\n            <Dialog onClose={handleClose} open={props.open}>\n                <DialogTitle>{t('colour.title')}</DialogTitle>\n                <DialogContent dividers>\n                    <List>\n                        <ListItem className={classes.listItemPaper}>\n                            <Paper className={classes.paperRoot} style={{ backgroundColor: props.theme[2] }}>\n                                <Icon className={classes.iconRoot}>edit</Icon>\n                                <InputBase\n                                    value={props.lineName[0]}\n                                    classes={{\n                                        root: classes.inputBaseRoot,\n                                        input: classes.inputBaseInputZH,\n                                    }}\n                                    style={{ color: props.theme[3] || '#fff' }}\n                                    onChange={e => nameChange(e.target.value, 0)}\n                                    autoFocus\n                                />\n                                <InputBase\n                                    value={props.lineName[1]}\n                                    classes={{\n                                        root: classes.inputBaseRoot,\n                                        input: classes.inputBaseInputEN,\n                                    }}\n                                    style={{ color: props.theme[3] || '#fff' }}\n                                    onChange={e => nameChange(e.target.value, 1)}\n                                />\n                            </Paper>\n                        </ListItem>\n                        <ThemeListItems theme={props.theme} onUpdate={props.onUpdate} />\n                    </List>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        {t('dialog.done')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    },\n    (prevProps, nextProps) =>\n        prevProps.open === nextProps.open &&\n        prevProps.lineName.toString() === nextProps.lineName.toString() &&\n        prevProps.theme.toString() === nextProps.theme.toString()\n);\n\nexport default ColourDialog;\n","import ColourDialog from './dialog';\n\nexport default ColourDialog;"],"sourceRoot":""}