{"version":3,"sources":["svgs/destination/destination-shmetro.tsx"],"names":["memo","InfoSHMetro","useContext","ParamContext","param","routes","destTextEl","React","createRef","useState","width","flagLength","dh","svg_height","isLeft","direction","arrowX","svgWidth","destination","arrowRotate","validDests","Array","from","Set","filter","route","includes","current_stn_idx","map","res","stnId","reverse","isLineNumber","Boolean","line_name","match","transform","fill","d","ref","textAnchor","className","fontSize","id","stn_list","name","join","dy","replace","LineNameBoxNumber","LineNameBoxText","boxX","useMemo","x","height","toString","lineNumber","lineNameRes","dominantBaseline","letterSpacing"],"mappings":"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","file":"static/js/destinationSHMetro.7836b4aa.chunk.js","sourcesContent":["import React, { memo, useContext, useMemo } from 'react';\nimport { ParamContext } from '../../context';\n\nexport default memo(function DestinationSHMetro() {\n    return (\n        <>\n            {/* <DefsSHMetro /> */}\n            <InfoSHMetro />\n        </>\n    );\n});\n\nconst InfoSHMetro = () => {\n    const { param, routes } = useContext(ParamContext);\n\n    const destTextEl = React.createRef<SVGGElement>();\n    const [bcr] = React.useState({ width: 0 } as DOMRect);\n    // Chito: bcr.width = 0 or based on dest_text?\n    // React.useEffect(() => setBcr(destTextEl.current.getBoundingClientRect()), []);\n    const flagLength = 160 + 150 + bcr.width + 45 + 50;\n\n    // get the height\n    const dh = param.svg_height - 300;\n\n    // arrow\n    const isLeft = param.direction === 'l' ? 1 : -1;\n    let arrowX = (param.svgWidth.destination - isLeft * flagLength) / 20;\n    arrowX = param.direction === 'l' ? arrowX : param.svgWidth.destination - 20;\n    const arrowRotate = 90 * (1 - isLeft);\n\n    // not in use now\n    // const platformNumX = arrowX + isLeft * (160 + 50 + 75);\n\n    // for each left valid destinations, get the name from id\n    const validDests = Array.from(\n        new Set(\n            routes\n                .filter((route) => route.includes(param.current_stn_idx))\n                .map((route) => {\n                    let res = route.filter((stnId) => !['linestart', 'lineend'].includes(stnId));\n                    return param.direction === 'l' ? res[0] : res.reverse()[0];\n                })\n        )\n    );\n\n    const isLineNumber = Boolean(param.line_name[0].match(/^[\\w\\d]+/));\n\n    // the platform screen doors flash light\n    // #20\n    // $('g#station_info_shmetro > rect').attr({ transform: `translate(${this._svgDestWidth / 2},${250 + dh})` })\n\n    return (\n        <g transform={`translate(0,${dh})`}>\n            <path\n                fill=\"var(--rmg-theme-colour)\"\n                d={\n                    param.direction === 'l'\n                        ? `M36,10 H ${param.svgWidth.destination - 24} l 0,12 H 24 Z`\n                        : `M24,10 H ${param.svgWidth.destination - 36} l 12,12 H 24 Z`\n                }\n                transform=\"translate(0,220)\"\n            />\n            <path\n                d=\"M60,60L0,0L60-60H100L55-15H160V15H55L100,60z\"\n                fill=\"black\"\n                transform={`translate(${arrowX},135)rotate(${arrowRotate})`}\n            />\n\n            {/* <!-- Todo: fix this absolute position --> */}\n            {/* Todo: fix svgWidth.destination*0.8, this has only been tested on 1000 width */}\n            <g\n                ref={destTextEl}\n                textAnchor={param.direction === 'l' ? 'start' : 'end'}\n                transform={`translate(${param.svgWidth.destination * (param.direction === 'l' ? 0.2 : 0.8)},135)`}\n            >\n                <text className=\"rmg-name__zh\" fontSize=\"400%\">\n                    {'往' + validDests.map((id) => param.stn_list[id].name[0]).join('，')}\n                </text>\n                <text className=\"rmg-name__en\" fontSize=\"150%\" dy={40}>\n                    {'To ' +\n                        validDests\n                            .map((id) => param.stn_list[id].name[1])\n                            .join(', ')\n                            .replace('\\\\', ' ')}\n                </text>\n            </g>\n            {isLineNumber ? <LineNameBoxNumber /> : <LineNameBoxText />}\n        </g>\n    );\n};\n\nconst LineNameBoxText = () => {\n    const { param } = useContext(ParamContext);\n\n    const boxX = param.direction === 'l' ? param.svgWidth.destination - 24 - 130 : 24 + 130;\n\n    return useMemo(\n        () => (\n            <g transform={`translate(${boxX},60)`}>\n                <rect fill=\"var(--rmg-theme-colour)\" x={-130} width={260} height={150} />\n                <g textAnchor=\"middle\" transform=\"translate(0,75)\" fill=\"var(--rmg-theme-fg)\">\n                    <text className=\"rmg-name__zh\" fontSize={80}>\n                        {param.line_name[0]}\n                    </text>\n                    <text className=\"rmg-name__en\" fontSize={32} dy={60}>\n                        {param.line_name[1]}\n                    </text>\n                </g>\n            </g>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [boxX, param.line_name.toString()]\n    );\n};\n\nconst LineNameBoxNumber = () => {\n    const { param } = useContext(ParamContext);\n\n    const [lineNumber, lineNameRes] = param.line_name[0].match(/^[\\w\\d]+|.+/g);\n\n    // Number width: 135\n    // Text width: 160\n    // Gap: 20\n    // Left: 135/2 + 20 + 160 = 247.5\n    // Right: 135/2 =\n    const boxX = param.direction === 'l' ? param.svgWidth.destination - 24 - 247.5 : 24 + 67.5;\n\n    return useMemo(\n        () => (\n            <g transform={`translate(${boxX},60)`}>\n                <rect fill=\"var(--rmg-theme-colour)\" x={-67.5} width={135} height={150} />\n                <text\n                    className=\"rmg-name__zh\"\n                    fill=\"var(--rmg-theme-fg)\"\n                    fontSize={112}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    transform=\"translate(0,75)\"\n                    letterSpacing={-5}\n                >\n                    {lineNumber}\n                </text>\n                <g textAnchor=\"start\" transform=\"translate(87.5,75)\">\n                    <text className=\"rmg-name__zh\" fontSize={80}>\n                        {lineNameRes}\n                    </text>\n                    <text className=\"rmg-name__en\" fontSize={32} dy={60}>\n                        {param.line_name[1]}\n                    </text>\n                </g>\n            </g>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [boxX, param.line_name.toString()]\n    );\n};\n"],"sourceRoot":""}