{"version":3,"sources":["panels/stations/edit-diag/more-tab.tsx"],"names":["allFacilities","airport","hsr","disney","allServices","local","express","FacilityDialog","props","t","useTranslation","open","onClose","dividers","name","value","facility","onChange","e","target","Object","keys","map","f","key","control","label","onClick","color","autoFocus","MoreTab","dispatch","React","useContext","ParamContext","useState","facilityDialogOpen","setFacilityDialogOpen","window","urlParams","get","button","primary","secondary","row","s","checked","services","has","service","event","type","stnId","serviceId","isChecked","disabled","secondaryTypographyProps","action"],"mappings":"8LAqBMA,EAAgB,CAClB,GAAI,OACJC,QAAS,UACTC,IAAK,kBACLC,OAAQ,qBAGNC,EAAc,CAChBC,MAAO,WACPC,QAAS,WAkGb,SAASC,EAAeC,GAA6B,IACzCC,EAAMC,2BAAND,EACR,OACI,kBAAC,SAAD,CAAQE,KAAMH,EAAMG,KAAMC,QAAS,kBAAMJ,EAAMI,QAAQ,WACnD,kBAAC,cAAD,KAAcH,EAAE,sCAChB,kBAAC,gBAAD,CAAeI,UAAQ,GACnB,kBAAC,aAAD,CACIC,KAAK,WACLC,MAAOP,EAAMQ,SACbC,SAAU,SAAAC,GAAC,OAAIV,EAAMI,QAAQM,EAAEC,OAAOJ,SAErCK,OAAOC,KAAKrB,GAAesB,KAAI,SAAAC,GAAC,OAC7B,kBAAC,mBAAD,CACIR,MAAOQ,EACPC,IAAKD,EACLE,QAAS,kBAAC,QAAD,MACTC,MAAOjB,EAAE,gCAAwC,KAANc,EAAW,OAASA,WAK/E,kBAAC,gBAAD,KACI,kBAAC,SAAD,CAAQI,QAAS,kBAAMnB,EAAMI,QAAQ,UAAUgB,MAAM,UAAUC,WAAS,GACnEpB,EAAE,kBA/BRqB,UAhFC,SAACtB,GAAoC,IACzCC,EAAMC,2BAAND,EAEAsB,EAAaC,IAAMC,WAAWC,KAA9BH,SAHwC,EAKIC,IAAMG,UAAS,GALnB,mBAKzCC,EALyC,KAKrBC,EALqB,KA0BhD,OACI,6BACI,kBAAC,OAAD,KACuC,QAAlCC,OAAOC,UAAUC,IAAI,UAClB,kBAAC,WAAD,CAAUC,QAAM,EAACd,QAAS,kBAAMU,GAAsB,KAClD,kBAAC,eAAD,KACI,kBAAC,OAAD,eAEJ,kBAAC,eAAD,CACIK,QAASjC,EAAE,sCACXkC,UAAWlC,EACP,gCAAqD,KAAnBD,EAAMQ,SAAkB,OAASR,EAAMQ,cAKtD,UAAlCsB,OAAOC,UAAUC,IAAI,UAClB,kBAAC,WAAD,KACI,kBAAC,eAAD,KACI,kBAAC,OAAD,eAEJ,kBAAC,eAAD,CACIE,QAASjC,EAAE,sCACXkC,UACI,kBAAC,YAAD,CAAWC,KAAG,GACRxB,OAAOC,KAAKjB,GAA8CkB,KAAI,SAAAuB,GAAC,OAC7D,kBAAC,mBAAD,CACIpB,QACI,kBAAC,WAAD,CACIqB,QAAStC,EAAMuC,SAASC,IAAIH,GAC5B9B,MAAO8B,EACP5B,UA1CxBgC,EA0CiDJ,EA1ChB,SAACK,GACtC,UAAZD,GAEJlB,EAAS,CACLoB,KAAM,0BACNC,MAAO5C,EAAM4C,MACbC,UAAWJ,EACXK,UAAWJ,EAAM/B,OAAO2B,YAoCgBS,SAAgB,UAANV,IAGlBnB,MAAOjB,EAAE,+BAAiCoC,GAC1CrB,IAAKqB,IA/CtB,IAACI,MAoDAO,yBAAwB,eAAK,YAAqB,WAM/B,QAAlClB,OAAOC,UAAUC,IAAI,UAClB,kBAACjC,EAAD,CAAgBI,KAAMyB,EAAoBxB,QAnE1B,SAAC6C,GACV,UAAXA,GAEA1B,EAAS,CAAEoB,KAAM,0BAA2BC,MAAO5C,EAAM4C,MAAOpC,SAAUyC,IAE9EpB,GAAsB,IA8D0DrB,SAAUR,EAAMQ","file":"static/js/panelStationsMore.cd679974.chunk.js","sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Icon,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n    DialogActions,\n    Button,\n    FormGroup,\n    Checkbox,\n} from '@material-ui/core';\nimport { ParamContext } from '../../../context';\n\nconst allFacilities = {\n    '': 'None',\n    airport: 'Airport',\n    hsr: 'High Speed Rail',\n    disney: 'Disneyland Resort',\n};\n\nconst allServices = {\n    local: 'Stopping',\n    express: 'Express',\n};\n\ninterface StationEditMoreTabProps {\n    onUpdate: (value: any, field: string) => void;\n    facility: keyof typeof allFacilities;\n    services: Set<keyof typeof allServices>;\n    stnId: string;\n}\n\nconst MoreTab = (props: StationEditMoreTabProps) => {\n    const { t } = useTranslation();\n\n    const { dispatch } = React.useContext(ParamContext);\n\n    const [facilityDialogOpen, setFacilityDialogOpen] = React.useState(false);\n\n    const facilityDialogClose = (action: 'close' | '' | 'airport' | 'hsr' | 'disney') => {\n        if (action !== 'close') {\n            // props.onUpdate(action, 'facility');\n            dispatch({ type: 'UPDATE_STATION_FACILITY', stnId: props.stnId, facility: action });\n        }\n        setFacilityDialogOpen(false);\n    };\n\n    const servicesChange = (service: 'local' | 'express') => (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (service === 'local') return;\n        // props.onUpdate({ chipId: service, selected: event.target.checked }, 'services');\n        dispatch({\n            type: 'UPDATE_STATION_SERVICES',\n            stnId: props.stnId,\n            serviceId: service,\n            isChecked: event.target.checked,\n        });\n    };\n\n    return (\n        <div>\n            <List>\n                {window.urlParams.get('style') === 'mtr' && (\n                    <ListItem button onClick={() => setFacilityDialogOpen(true)}>\n                        <ListItemIcon>\n                            <Icon>place</Icon>\n                        </ListItemIcon>\n                        <ListItemText\n                            primary={t('stations.edit.more.facility.button')}\n                            secondary={t(\n                                'stations.edit.more.facility.' + (props.facility === '' ? 'none' : props.facility)\n                            )}\n                        />\n                    </ListItem>\n                )}\n                {window.urlParams.get('style') === 'gzmtr' && (\n                    <ListItem>\n                        <ListItemIcon>\n                            <Icon>train</Icon>\n                        </ListItemIcon>\n                        <ListItemText\n                            primary={t('stations.edit.more.services.button')}\n                            secondary={\n                                <FormGroup row>\n                                    {(Object.keys(allServices) as (keyof typeof allServices)[]).map(s => (\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    checked={props.services.has(s)}\n                                                    value={s}\n                                                    onChange={servicesChange(s)}\n                                                    disabled={s === 'local'}\n                                                />\n                                            }\n                                            label={t('stations.edit.more.services.' + s)}\n                                            key={s}\n                                        />\n                                    ))}\n                                </FormGroup>\n                            }\n                            secondaryTypographyProps={{ ['component' as any]: 'div' }}\n                        />\n                    </ListItem>\n                )}\n            </List>\n\n            {window.urlParams.get('style') === 'mtr' && (\n                <FacilityDialog open={facilityDialogOpen} onClose={facilityDialogClose} facility={props.facility} />\n            )}\n        </div>\n    );\n};\n\nexport default MoreTab;\n\ninterface FacilityDialogProps {\n    open: boolean;\n    onClose: (action: 'close' | '' | 'airport' | 'hsr' | 'disney') => void;\n    facility: keyof typeof allFacilities;\n}\n\nfunction FacilityDialog(props: FacilityDialogProps) {\n    const { t } = useTranslation();\n    return (\n        <Dialog open={props.open} onClose={() => props.onClose('close')}>\n            <DialogTitle>{t('stations.edit.more.facility.title')}</DialogTitle>\n            <DialogContent dividers>\n                <RadioGroup\n                    name=\"facility\"\n                    value={props.facility}\n                    onChange={e => props.onClose(e.target.value as 'close' | '' | 'airport' | 'hsr' | 'disney')}\n                >\n                    {Object.keys(allFacilities).map(f => (\n                        <FormControlLabel\n                            value={f}\n                            key={f}\n                            control={<Radio />}\n                            label={t('stations.edit.more.facility.' + (f === '' ? 'none' : f))}\n                        />\n                    ))}\n                </RadioGroup>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => props.onClose('close')} color=\"primary\" autoFocus>\n                    {t('dialog.done')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n"],"sourceRoot":""}