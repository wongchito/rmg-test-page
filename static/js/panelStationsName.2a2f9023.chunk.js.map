{"version":3,"sources":["panels/stations/edit-diag/num-list-item.tsx","panels/stations/edit-diag/name-tab.tsx","panels/stations/edit-diag/name-list-items.tsx"],"names":["NumListItem","props","t","useTranslation","React","ParamContext","param","dispatch","style","width","variant","label","onChange","e","type","stnId","num","target","value","stn_list","NameTab","rmgStyle","useContext","CanvasContext","stnInfo","name","onUpdate","index","event","map","val","i","useStyles","makeStyles","createStyles","listItemIcon","fontSize","textAlign","NameListItems","classes","className","helperText","toString"],"mappings":"0LAuCeA,EA9BK,SAACC,GAAkB,IAC3BC,EAAMC,2BAAND,EAD0B,EAENE,aAAiBC,KAArCC,EAF0B,EAE1BA,MAAOC,EAFmB,EAEnBA,SAEf,OAAOH,WACH,kBACI,gBAAC,WAAD,KACI,gBAAC,eAAD,KACI,gBAAC,OAAD,mBAEJ,gBAAC,YAAD,CACII,MAAO,CAAEC,MAAO,QAChBC,QAAQ,WACRC,MAAOT,EAAE,0BACTU,SAAU,SAAAC,GAAC,OACPN,EAAS,CACLO,KAAM,qBACNC,MAAOd,EAAMc,MACbC,IAAKH,EAAEI,OAAOC,SAGtBA,MAAOZ,EAAMa,SAASlB,EAAMc,OAAOC,SAK/C,CAACf,EAAMc,MAAOT,EAAMa,SAASlB,EAAMc,OAAOC,OCFnCI,UArBC,SAACnB,GAAkB,IACvBoB,EAAaC,qBAAWC,KAAxBF,SADsB,EAEFC,qBAAWjB,KAA/BC,EAFsB,EAEtBA,MAAOC,EAFe,EAEfA,SACTiB,EAAUlB,EAAMa,SAASlB,EAAMc,OAUrC,OACI,kBAAC,OAAD,KACI,kBAAC,IAAD,CAAeU,KAAMD,EAAQC,KAAMC,SAVtB,SAACC,GAAD,OAAmB,SAACC,GACrCrB,EAAS,CACLO,KAAM,sBACNC,MAAOd,EAAMc,MACbU,KAAMD,EAAQC,KAAKI,KAAI,SAACC,EAAKC,GAAN,OAAaJ,IAAUI,EAAIH,EAAMX,OAAOC,MAAQY,WAOzD,UAAbT,GAAwB,kBAAC,EAAD,CAAaN,MAAOd,EAAMc,W,gCC5B/D,0BAIMiB,EAAYC,sBAAW,kBACzBC,uBAAa,CACTC,aAAc,CACV1B,MAAO,MACP2B,SAAU,SACVC,UAAW,eAiDRC,IAvCO,SAACrC,GAAkB,IAC7BC,EAAMC,2BAAND,EACFqC,EAAUP,IAEhB,OAAO5B,WACH,kBACI,gCACI,gBAAC,WAAD,KACI,gBAAC,eAAD,KACI,wBAAMoC,UAAWD,EAAQJ,cAAzB,WAEJ,gBAAC,YAAD,CACI3B,MAAO,CAAEC,MAAO,QAChBC,QAAQ,WACRC,MAAOT,EAAE,6BACTU,SAAUX,EAAMyB,SAAS,GACzBR,MAAOjB,EAAMwB,KAAK,MAG1B,gBAAC,WAAD,KACI,gBAAC,eAAD,KACI,wBAAMe,UAAWD,EAAQJ,cAAzB,MAEJ,gBAAC,YAAD,CACI3B,MAAO,CAAEC,MAAO,QAChBC,QAAQ,WACRC,MAAOT,EAAE,6BACTU,SAAUX,EAAMyB,SAAS,GACzBR,MAAOjB,EAAMwB,KAAK,GAClBgB,WAAYvC,EAAE,yCAM9B,CAACD,EAAMwB,KAAKiB","file":"static/js/panelStationsName.2a2f9023.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ListItem, ListItemIcon, Icon, TextField } from '@material-ui/core';\nimport { ParamContext } from '../../../context';\n\ninterface Props {\n    stnId: string;\n}\n\nconst NumListItem = (props: Props) => {\n    const { t } = useTranslation();\n    const { param, dispatch } = React.useContext(ParamContext);\n\n    return React.useMemo(\n        () => (\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>looks_one</Icon>\n                </ListItemIcon>\n                <TextField\n                    style={{ width: '100%' }}\n                    variant=\"outlined\"\n                    label={t('stations.edit.name.num')}\n                    onChange={e =>\n                        dispatch({\n                            type: 'UPDATE_STATION_NUM',\n                            stnId: props.stnId,\n                            num: e.target.value,\n                        })\n                    }\n                    value={param.stn_list[props.stnId].num}\n                />\n            </ListItem>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.stnId, param.stn_list[props.stnId].num]\n    );\n};\n\nexport default NumListItem;\n","import React, { useContext } from 'react';\n\nimport { List } from '@material-ui/core';\n\nimport NameListItems from './name-list-items';\nimport NumListItem from './num-list-item';\nimport { ParamContext, CanvasContext } from '../../../context';\n\ninterface Props {\n    stnId: string;\n}\n\nconst NameTab = (props: Props) => {\n    const { rmgStyle } = useContext(CanvasContext);\n    const { param, dispatch } = useContext(ParamContext);\n    const stnInfo = param.stn_list[props.stnId];\n\n    const handleUpdate = (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch({\n            type: 'UPDATE_STATION_NAME',\n            stnId: props.stnId,\n            name: stnInfo.name.map((val, i) => (index === i ? event.target.value : val)) as Name,\n        });\n    };\n\n    return (\n        <List>\n            <NameListItems name={stnInfo.name} onUpdate={handleUpdate} />\n            {rmgStyle === 'gzmtr' && <NumListItem stnId={props.stnId} />}\n        </List>\n    );\n};\n\nexport default NameTab;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ListItem, ListItemIcon, TextField, makeStyles, createStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        listItemIcon: {\n            width: '1em',\n            fontSize: '1.5rem',\n            textAlign: 'center',\n        },\n    })\n);\n\ninterface Props {\n    onUpdate: (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => void;\n    name: Name;\n}\n\nconst NameListItems = (props: Props) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    return React.useMemo(\n        () => (\n            <>\n                <ListItem>\n                    <ListItemIcon>\n                        <span className={classes.listItemIcon}>æ¼¢</span>\n                    </ListItemIcon>\n                    <TextField\n                        style={{ width: '100%' }}\n                        variant=\"outlined\"\n                        label={t('stations.edit.name.nameZH')}\n                        onChange={props.onUpdate(0)}\n                        value={props.name[0]}\n                    />\n                </ListItem>\n                <ListItem>\n                    <ListItemIcon>\n                        <span className={classes.listItemIcon}>A</span>\n                    </ListItemIcon>\n                    <TextField\n                        style={{ width: '100%' }}\n                        variant=\"outlined\"\n                        label={t('stations.edit.name.nameEN')}\n                        onChange={props.onUpdate(1)}\n                        value={props.name[1]}\n                        helperText={t('stations.edit.name.nameENHelper')}\n                    />\n                </ListItem>\n            </>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.name.toString()]\n    );\n};\n\nexport default NameListItems;\n"],"sourceRoot":""}