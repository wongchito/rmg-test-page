{"version":3,"sources":["panels/stations/edit-diag/name-list-items.tsx","panels/stations/edit-diag/interchange-tab.tsx","panels/colour-diag/colours lazy /^/.//.*$/ groupOptions: {} namespace object","panels/colour-diag/data.ts","panels/colour-diag/theme-items.tsx","panels/colour-diag/dialog.tsx","panels/colour-diag/index.ts"],"names":["useStyles","makeStyles","createStyles","listItemIcon","width","fontSize","textAlign","NameListItems","props","t","useTranslation","classes","React","className","style","variant","label","onChange","onUpdate","value","name","autoFocus","helperText","toString","intChipSetStyles","StationEditInterchangeTab","rmgStyle","useContext","CanvasContext","ParamContext","param","dispatch","stnTrans","stn_list","stnId","transfer","useState","osiNameDialogOpened","setOsiNameDialogOpened","addClick","index","newInfo","theme","type","setIdx","info","deleteClick","i","intIdx","margin","title","aria-label","onClick","setIndex","onDelete","includes","color","lineHeight","whiteSpace","marginRight","osi_names","join","OSINameDialog","open","osiName","onClose","intChip","borderRadius","height","intChipText","display","intChipTextZH","intChipTextEN","intChipLabel","paddingLeft","paddingRight","intChipDeleteIcon","marginLeft","InterchangeChipSet","intInfos","chipSelected","setChipSelected","nameDialogOpened","setNameDialogOpened","intChips","map","intInfo","key","deleteIcon","backgroundColor","undefined","lineName","concat","Array","memo","dividers","event","newOSIName","val","target","prevProps","nextProps","InterchangeMore","tickDirecChange","direction","useMemo","primary","native","tick_direc","d","edge","_","checked","isPaid","paid_area","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","cityList","country","en","zh","ga","pt","ko","ja","cityItem","flexDirection","alignItems","menuItemSpan","padding","button","minWidth","border","inputColour","position","left","top","buttonContainer","flexShrink","i18n","hexTemp","setHexTemp","lineList","list","setList","listPromise","default","useEffect","data","l","colour","fg","useLineList","length","filter","newTheme","idx","select","line","disabled","getTransText2","languages","rgb","opacity","htmlFor","borderColor","component","error","match","hex","toUpperCase","CitySelect","items","c","CountryFlag","useEmojiStyles","img","codePoints","split","char","codePointAt","language","navigator","platform","indexOf","src","process","alt","String","fromCodePoint","cp","parseInt","paperRoot","listItemPaper","justifyContent","iconRoot","palette","action","active","inputBaseRoot","inputBaseInputZH","paddingTop","inputBaseInputEN","paddingBottom","ColourDialog","nameChange","newName","handleClose","root","input"],"mappings":"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jG,EAAE,+CACzB,kBAAC,0BAAD,KACI,kBAAC,SAAD,CAAQkG,QAAM,EAACxF,MAAOa,EAAS4E,WAAY3F,SAAUsF,GAChD,CAAC,IAAK,KAAKlB,KAAI,SAAAwB,GAAC,OACb,4BAAQtB,IAAKsB,EAAG1F,MAAO0F,GAClBpG,EAAE,uCAAyCoG,UAMhE,kBAAC,WAAD,KACI,kBAAC,eAAD,KACI,kBAAC,OAAD,sBAEJ,kBAAC,eAAD,CAAcH,QAASjG,EAAE,wCACzB,kBAAC,0BAAD,KACI,kBAAC,SAAD,CACI+C,MAAM,UACNsD,KAAK,MACL7F,SAAU,SAAC8F,EAAGC,GAAJ,OACNjF,EAAS,CACLY,KAAM,2BACNT,MAAO1B,EAAM0B,MACb+E,OAAQD,KAGhBA,QAAShF,EAASkF,iBAOtC,CAAC1G,EAAM0B,MAAOF,EAAS4E,WAAY5E,EAASkF,c,mBCpVpD,IAAI7B,EAAM,CACT,cAAe,CACd,GACA,EACA,IAED,cAAe,CACd,GACA,EACA,GAED,iBAAkB,CACjB,GACA,EACA,GAED,YAAa,CACZ,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,aAAc,CACb,GACA,EACA,IAED,gBAAiB,CAChB,GACA,EACA,IAED,YAAa,CACZ,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,cAAe,CACd,GACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,IAED,aAAc,CACb,GACA,EACA,GAED,gBAAiB,CAChB,GACA,EACA,GAED,cAAe,CACd,GACA,EACA,GAED,iBAAkB,CACjB,GACA,EACA,GAED,WAAY,CACX,GACA,EACA,GAED,cAAe,CACd,GACA,EACA,GAED,YAAa,CACZ,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,cAAe,CACd,GACA,EACA,GAED,iBAAkB,CACjB,GACA,EACA,GAED,aAAc,CACb,GACA,EACA,GAED,gBAAiB,CAChB,GACA,EACA,GAED,aAAc,CACb,GACA,EACA,GAED,gBAAiB,CAChB,GACA,EACA,GAED,cAAe,CACd,GACA,EACA,GAED,iBAAkB,CACjB,GACA,EACA,GAED,WAAY,CACX,GACA,EACA,IAED,cAAe,CACd,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,aAAc,CACb,GACA,EACA,IAED,WAAY,CACX,GACA,EACA,IAED,cAAe,CACd,GACA,EACA,IAED,YAAa,CACZ,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,cAAe,CACd,GACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,IAED,SAAU,CACT,GACA,EACA,IAED,YAAa,CACZ,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,aAAc,CACb,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,aAAc,CACb,GACA,EACA,IAED,YAAa,CACZ,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,IAED,oBAAqB,CACpB,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,aAAc,CACb,GACA,EACA,IAED,aAAc,CACb,GACA,EACA,IAED,gBAAiB,CAChB,GACA,EACA,IAED,aAAc,CACb,GACA,EACA,IAED,gBAAiB,CAChB,GACA,EACA,IAED,cAAe,CACd,GACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,IAED,WAAY,CACX,GACA,EACA,IAED,cAAe,CACd,GACA,EACA,IAED,YAAa,CACZ,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,aAAc,CACb,GACA,EACA,IAED,YAAa,CACZ,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,gBAAiB,CAChB,GACA,EACA,IAED,mBAAoB,CACnB,GACA,EACA,IAED,SAAU,CACT,GACA,EACA,IAED,YAAa,CACZ,GACA,EACA,KAGF,SAAS8B,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEjC,EAAK+B,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAI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","file":"static/js/panelStationsInterchange.f23b0335.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ListItem, ListItemIcon, TextField, makeStyles, createStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        listItemIcon: {\n            width: '1em',\n            fontSize: '1.5rem',\n            textAlign: 'center',\n        },\n    })\n);\n\ninterface Props {\n    onUpdate: (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => void;\n    name: Name;\n}\n\nconst NameListItems = (props: Props) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    return React.useMemo(\n        () => (\n            <>\n                <ListItem>\n                    <ListItemIcon>\n                        <span className={classes.listItemIcon}>文</span>\n                    </ListItemIcon>\n                    <TextField\n                        style={{ width: '100%' }}\n                        variant=\"outlined\"\n                        label={t('stations.edit.name.nameZH')}\n                        onChange={props.onUpdate(0)}\n                        value={props.name[0]}\n                        autoFocus\n                    />\n                </ListItem>\n                <ListItem>\n                    <ListItemIcon>\n                        <span className={classes.listItemIcon}>A</span>\n                    </ListItemIcon>\n                    <TextField\n                        style={{ width: '100%' }}\n                        variant=\"outlined\"\n                        label={t('stations.edit.name.nameEN')}\n                        onChange={props.onUpdate(1)}\n                        value={props.name[1]}\n                        helperText={t('stations.edit.name.nameENHelper')}\n                    />\n                </ListItem>\n            </>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.name.toString()]\n    );\n};\n\nexport default NameListItems;\n","import React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    List,\n    ListItem,\n    ListItemText,\n    ListItemSecondaryAction,\n    IconButton,\n    Icon,\n    Divider,\n    Button,\n    ListItemIcon,\n    Switch,\n    Chip,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Tooltip,\n    makeStyles,\n    createStyles,\n    Select,\n} from '@material-ui/core';\nimport { ParamContext, CanvasContext } from '../../../context';\nimport ColourDialog from '../../colour-diag';\nimport NameListItems from './name-list-items';\n\nconst StationEditInterchangeTab = (props: { stnId: string }) => {\n    const { t } = useTranslation();\n\n    const { rmgStyle } = useContext(CanvasContext);\n    const { param, dispatch } = useContext(ParamContext);\n    const stnTrans = param.stn_list[props.stnId].transfer;\n\n    const [osiNameDialogOpened, setOsiNameDialogOpened] = React.useState(false);\n\n    const addClick = (index: number) => {\n        let newInfo = [...param.theme, '轉綫', 'Line'] as InterchangeInfo;\n        dispatch({\n            type: 'ADD_STATION_INTERCHANGE_INFO',\n            stnId: props.stnId,\n            setIdx: index,\n            info: newInfo,\n        });\n    };\n\n    const deleteClick = (index: number, i: number) => {\n        dispatch({\n            type: 'REMOVE_STATION_INTERCHANGE_INFO',\n            stnId: props.stnId,\n            setIdx: index,\n            intIdx: i,\n        });\n    };\n\n    return (\n        <List>\n            <ListItem>\n                <ListItemText>\n                    <h3 style={{ margin: 0 }}>{t('stations.edit.interchange.within')}</h3>\n                </ListItemText>\n                <ListItemSecondaryAction>\n                    <Tooltip title={t('stations.edit.interchange.add')} aria-label=\"add\">\n                        <IconButton onClick={() => addClick(0)}>\n                            <Icon>add_circle</Icon>\n                        </IconButton>\n                    </Tooltip>\n                </ListItemSecondaryAction>\n            </ListItem>\n            <ListItem>\n                <InterchangeChipSet stnId={props.stnId} setIndex={0} onDelete={i => deleteClick(0, i)} />\n            </ListItem>\n            {['mtr', 'shmetro'].includes(rmgStyle || '') && (\n                <>\n                    <Divider />\n                    <ListItem>\n                        <ListItemText>\n                            <h3 style={{ margin: 0 }}>{t('stations.edit.interchange.osi')}</h3>\n                        </ListItemText>\n                        <ListItemSecondaryAction>\n                            <Button\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                style={{ lineHeight: '1rem', whiteSpace: 'pre', marginRight: 5 }}\n                                onClick={() => setOsiNameDialogOpened(true)}\n                            >\n                                {stnTrans.osi_names[0] ? stnTrans.osi_names[0].join('\\r\\n') : '車站名\\r\\nStn Name'}\n                            </Button>\n                            <OSINameDialog\n                                open={osiNameDialogOpened}\n                                osiName={stnTrans.osi_names[0] || ['', '']}\n                                stnId={props.stnId}\n                                onClose={() => setOsiNameDialogOpened(false)}\n                            />\n                            <Tooltip title={t('stations.edit.interchange.add')} aria-label=\"add\">\n                                <IconButton onClick={() => addClick(1)}>\n                                    <Icon>add_circle</Icon>\n                                </IconButton>\n                            </Tooltip>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                    <ListItem>\n                        <InterchangeChipSet stnId={props.stnId} setIndex={1} onDelete={i => deleteClick(1, i)} />\n                    </ListItem>\n                    <ListItem>\n                        <span>{t('stations.edit.interchange.note')}</span>\n                    </ListItem>\n                </>\n            )}\n            {rmgStyle === 'mtr' && <InterchangeMore stnId={props.stnId} />}\n        </List>\n    );\n};\n\nexport default StationEditInterchangeTab;\n\nconst intChipSetStyles = makeStyles(() =>\n    createStyles({\n        intChip: {\n            borderRadius: 4.5,\n            height: 40,\n            lineHeight: '1rem',\n            margin: 2,\n        },\n        intChipText: {\n            display: 'block',\n            textAlign: 'center' as 'center',\n        },\n        intChipTextZH: {\n            fontSize: 18,\n            lineHeight: '1.2rem',\n        },\n        intChipTextEN: {\n            fontSize: '.75rem',\n            lineHeight: '.9rem',\n            whiteSpace: 'pre-wrap' as 'pre-wrap',\n        },\n        intChipLabel: {\n            paddingLeft: 6,\n            paddingRight: 6,\n        },\n        intChipDeleteIcon: {\n            marginLeft: -3,\n        },\n    })\n);\n\ninterface InterchangeChipSetProps {\n    stnId: string;\n    setIndex: number;\n    onDelete: (i: number) => void;\n}\n\nconst InterchangeChipSet = (props: InterchangeChipSetProps) => {\n    const classes = intChipSetStyles();\n\n    const { param, dispatch } = React.useContext(ParamContext);\n    const intInfos = param.stn_list[props.stnId].transfer.info[props.setIndex];\n\n    const [chipSelected, setChipSelected] = React.useState(-1);\n    const [nameDialogOpened, setNameDialogOpened] = React.useState(false);\n\n    const handleClick = (index: number) => {\n        setChipSelected(index);\n        setNameDialogOpened(true);\n    };\n\n    const nameDialogUpdate = (key: string, value: any) => {\n        if (key === 'theme') {\n            dispatch({\n                type: 'UPDATE_STATION_INTERCHANGE_INFO',\n                stnId: props.stnId,\n                setIdx: props.setIndex,\n                intIdx: chipSelected,\n                info: (value as string[]).concat(Array(2)) as InterchangeInfo,\n            });\n        }\n        if (key === 'name') {\n            dispatch({\n                type: 'UPDATE_STATION_INTERCHANGE_INFO',\n                stnId: props.stnId,\n                setIdx: props.setIndex,\n                intIdx: chipSelected,\n                info: Array(4).concat(value) as InterchangeInfo,\n            });\n        }\n    };\n\n    const intChips = intInfos?.map((intInfo, i) => {\n        let label = (\n            <span style={{ color: intInfo[3] }}>\n                <span className={`${classes.intChipText} ${classes.intChipTextZH}`}>{intInfo[4]}</span>\n                <span className={`${classes.intChipText} ${classes.intChipTextEN}`}>{intInfo[5]}</span>\n            </span>\n        );\n        return (\n            <Chip\n                key={i}\n                label={label}\n                className={classes.intChip}\n                classes={{\n                    label: classes.intChipLabel,\n                    deleteIcon: classes.intChipDeleteIcon,\n                }}\n                style={{ backgroundColor: intInfo[2] }}\n                onDelete={() => props.onDelete(i)}\n                onClick={() => handleClick(i)}\n            />\n        );\n    });\n\n    return (\n        <div>\n            {intChips}\n\n            <ColourDialog\n                open={nameDialogOpened}\n                theme={\n                    intInfos?.[chipSelected] === undefined\n                        ? (([] as any) as Theme)\n                        : [\n                              intInfos[chipSelected][0],\n                              intInfos[chipSelected][1],\n                              intInfos[chipSelected][2],\n                              intInfos[chipSelected][3] as '#fff' | '#000',\n                          ]\n                }\n                lineName={\n                    intInfos?.[chipSelected] === undefined\n                        ? ['', '']\n                        : [intInfos[chipSelected][4], intInfos[chipSelected][5]]\n                }\n                onUpdate={nameDialogUpdate}\n                onClose={() => setNameDialogOpened(false)}\n            />\n        </div>\n    );\n};\n\ninterface OSINameDialogProps {\n    open: boolean;\n    stnId: string;\n    osiName: Name;\n    onClose: () => void;\n}\n\nconst OSINameDialog = React.memo(\n    (props: OSINameDialogProps) => {\n        const { t } = useTranslation();\n\n        const { dispatch } = useContext(ParamContext);\n\n        const handleUpdate = (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n            let newOSIName = props.osiName.map((val, i) => (i === index ? event.target.value : val)) as Name;\n            dispatch({ type: 'UPDATE_STATION_OSI_NAME', stnId: props.stnId, name: newOSIName });\n        };\n\n        return (\n            <Dialog open={props.open} onClose={props.onClose}>\n                <DialogTitle>{t('stations.edit.interchange.osiName')}</DialogTitle>\n                <DialogContent dividers>\n                    <List>\n                        <NameListItems onUpdate={handleUpdate} name={props.osiName} />\n                    </List>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.onClose} color=\"primary\" autoFocus>\n                        {t('dialog.done')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    },\n    (prevProps, nextProps) =>\n        prevProps.open === nextProps.open && prevProps.osiName.toString() === nextProps.osiName.toString()\n);\n\nconst InterchangeMore = (props: { stnId: string }) => {\n    const { t } = useTranslation();\n\n    const { param, dispatch } = React.useContext(ParamContext);\n    const stnTrans = param.stn_list[props.stnId].transfer;\n\n    const tickDirecChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n        let direction = event.target.value;\n        if (direction === 'l' || direction === 'r')\n            dispatch({\n                type: 'UPDATE_STATION_TICK_DIREC',\n                stnId: props.stnId,\n                direction,\n            });\n    };\n\n    return React.useMemo(\n        () => (\n            <>\n                <Divider />\n                <ListItem>\n                    <ListItemText>\n                        <h3 style={{ margin: 0 }}>{t('stations.edit.interchange.settings')}</h3>\n                    </ListItemText>\n                </ListItem>\n                <ListItem>\n                    <ListItemIcon>\n                        <Icon>format_textdirection_l_to_r</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={t('stations.edit.interchange.tickDirec.label')} />\n                    <ListItemSecondaryAction>\n                        <Select native value={stnTrans.tick_direc} onChange={tickDirecChange}>\n                            {['l', 'r'].map(d => (\n                                <option key={d} value={d}>\n                                    {t('stations.edit.interchange.tickDirec.' + d)}\n                                </option>\n                            ))}\n                        </Select>\n                    </ListItemSecondaryAction>\n                </ListItem>\n                <ListItem>\n                    <ListItemIcon>\n                        <Icon>attach_money</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={t('stations.edit.interchange.paidArea')} />\n                    <ListItemSecondaryAction>\n                        <Switch\n                            color=\"primary\"\n                            edge=\"end\"\n                            onChange={(_, checked) =>\n                                dispatch({\n                                    type: 'UPDATE_STATION_PAID_AREA',\n                                    stnId: props.stnId,\n                                    isPaid: checked,\n                                })\n                            }\n                            checked={stnTrans.paid_area}\n                        />\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.stnId, stnTrans.tick_direc, stnTrans.paid_area]\n    );\n};\n","var map = {\n\t\"./README.md\": [\n\t\t66,\n\t\t7,\n\t\t58\n\t],\n\t\"./barcelona\": [\n\t\t25,\n\t\t9,\n\t\t1\n\t],\n\t\"./barcelona.ts\": [\n\t\t25,\n\t\t9,\n\t\t1\n\t],\n\t\"./beijing\": [\n\t\t26,\n\t\t9,\n\t\t12\n\t],\n\t\"./beijing.ts\": [\n\t\t26,\n\t\t9,\n\t\t12\n\t],\n\t\"./changsha\": [\n\t\t27,\n\t\t9,\n\t\t23\n\t],\n\t\"./changsha.ts\": [\n\t\t27,\n\t\t9,\n\t\t23\n\t],\n\t\"./chengdu\": [\n\t\t28,\n\t\t9,\n\t\t32\n\t],\n\t\"./chengdu.ts\": [\n\t\t28,\n\t\t9,\n\t\t32\n\t],\n\t\"./chongqing\": [\n\t\t29,\n\t\t9,\n\t\t33\n\t],\n\t\"./chongqing.ts\": [\n\t\t29,\n\t\t9,\n\t\t33\n\t],\n\t\"./dongguan\": [\n\t\t30,\n\t\t9,\n\t\t2\n\t],\n\t\"./dongguan.ts\": [\n\t\t30,\n\t\t9,\n\t\t2\n\t],\n\t\"./edinburgh\": [\n\t\t31,\n\t\t9,\n\t\t3\n\t],\n\t\"./edinburgh.ts\": [\n\t\t31,\n\t\t9,\n\t\t3\n\t],\n\t\"./foshan\": [\n\t\t32,\n\t\t9,\n\t\t4\n\t],\n\t\"./foshan.ts\": [\n\t\t32,\n\t\t9,\n\t\t4\n\t],\n\t\"./glasgow\": [\n\t\t33,\n\t\t9,\n\t\t5\n\t],\n\t\"./glasgow.ts\": [\n\t\t33,\n\t\t9,\n\t\t5\n\t],\n\t\"./guangzhou\": [\n\t\t34,\n\t\t9,\n\t\t6\n\t],\n\t\"./guangzhou.ts\": [\n\t\t34,\n\t\t9,\n\t\t6\n\t],\n\t\"./hangzhou\": [\n\t\t35,\n\t\t9,\n\t\t7\n\t],\n\t\"./hangzhou.ts\": [\n\t\t35,\n\t\t9,\n\t\t7\n\t],\n\t\"./hongkong\": [\n\t\t36,\n\t\t9,\n\t\t8\n\t],\n\t\"./hongkong.ts\": [\n\t\t36,\n\t\t9,\n\t\t8\n\t],\n\t\"./kaohsiung\": [\n\t\t37,\n\t\t9,\n\t\t9\n\t],\n\t\"./kaohsiung.ts\": [\n\t\t37,\n\t\t9,\n\t\t9\n\t],\n\t\"./london\": [\n\t\t38,\n\t\t9,\n\t\t10\n\t],\n\t\"./london.ts\": [\n\t\t38,\n\t\t9,\n\t\t10\n\t],\n\t\"./macao\": [\n\t\t39,\n\t\t9,\n\t\t11\n\t],\n\t\"./macao.ts\": [\n\t\t39,\n\t\t9,\n\t\t11\n\t],\n\t\"./madrid\": [\n\t\t40,\n\t\t9,\n\t\t13\n\t],\n\t\"./madrid.ts\": [\n\t\t40,\n\t\t9,\n\t\t13\n\t],\n\t\"./nanjing\": [\n\t\t41,\n\t\t9,\n\t\t14\n\t],\n\t\"./nanjing.ts\": [\n\t\t41,\n\t\t9,\n\t\t14\n\t],\n\t\"./newtaipei\": [\n\t\t42,\n\t\t9,\n\t\t15\n\t],\n\t\"./newtaipei.ts\": [\n\t\t42,\n\t\t9,\n\t\t15\n\t],\n\t\"./oslo\": [\n\t\t43,\n\t\t9,\n\t\t16\n\t],\n\t\"./oslo.ts\": [\n\t\t43,\n\t\t9,\n\t\t16\n\t],\n\t\"./other\": [\n\t\t44,\n\t\t9,\n\t\t17\n\t],\n\t\"./other.ts\": [\n\t\t44,\n\t\t9,\n\t\t17\n\t],\n\t\"./paris\": [\n\t\t45,\n\t\t9,\n\t\t18\n\t],\n\t\"./paris.ts\": [\n\t\t45,\n\t\t9,\n\t\t18\n\t],\n\t\"./qingdao\": [\n\t\t46,\n\t\t9,\n\t\t19\n\t],\n\t\"./qingdao.ts\": [\n\t\t46,\n\t\t9,\n\t\t19\n\t],\n\t\"./sanfrancisco\": [\n\t\t47,\n\t\t9,\n\t\t20\n\t],\n\t\"./sanfrancisco.ts\": [\n\t\t47,\n\t\t9,\n\t\t20\n\t],\n\t\"./seoul\": [\n\t\t48,\n\t\t9,\n\t\t21\n\t],\n\t\"./seoul.ts\": [\n\t\t48,\n\t\t9,\n\t\t21\n\t],\n\t\"./shanghai\": [\n\t\t49,\n\t\t9,\n\t\t22\n\t],\n\t\"./shanghai.ts\": [\n\t\t49,\n\t\t9,\n\t\t22\n\t],\n\t\"./shenzhen\": [\n\t\t50,\n\t\t9,\n\t\t24\n\t],\n\t\"./shenzhen.ts\": [\n\t\t50,\n\t\t9,\n\t\t24\n\t],\n\t\"./stockholm\": [\n\t\t51,\n\t\t9,\n\t\t25\n\t],\n\t\"./stockholm.ts\": [\n\t\t51,\n\t\t9,\n\t\t25\n\t],\n\t\"./taipei\": [\n\t\t52,\n\t\t9,\n\t\t26\n\t],\n\t\"./taipei.ts\": [\n\t\t52,\n\t\t9,\n\t\t26\n\t],\n\t\"./tianjin\": [\n\t\t53,\n\t\t9,\n\t\t27\n\t],\n\t\"./tianjin.ts\": [\n\t\t53,\n\t\t9,\n\t\t27\n\t],\n\t\"./tokyo\": [\n\t\t54,\n\t\t9,\n\t\t28\n\t],\n\t\"./tokyo.ts\": [\n\t\t54,\n\t\t9,\n\t\t28\n\t],\n\t\"./toronto\": [\n\t\t55,\n\t\t9,\n\t\t29\n\t],\n\t\"./toronto.ts\": [\n\t\t55,\n\t\t9,\n\t\t29\n\t],\n\t\"./tyneandwear\": [\n\t\t56,\n\t\t9,\n\t\t30\n\t],\n\t\"./tyneandwear.ts\": [\n\t\t56,\n\t\t9,\n\t\t30\n\t],\n\t\"./xian\": [\n\t\t57,\n\t\t9,\n\t\t31\n\t],\n\t\"./xian.ts\": [\n\t\t57,\n\t\t9,\n\t\t31\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[2]).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 61;\nmodule.exports = webpackAsyncContext;","export const cityList: CityEntry[] = [\n    {\n        id: 'barcelona',\n        country: 'ES',\n        name: {\n            en: 'Barcelona',\n            'zh-Hans': '巴塞罗那',\n            'zh-HK': '巴塞隆拿',\n            'zh-TW': '巴塞隆納',\n        },\n    },\n    {\n        id: 'beijing',\n        country: 'CN',\n        name: {\n            en: 'Beijing',\n            zh: '北京',\n        },\n    },\n    {\n        id: 'changsha',\n        country: 'CN',\n        name: {\n            en: 'Changsha',\n            'zh-Hans': '长沙',\n            'zh-Hant': '長沙',\n        },\n    },\n    {\n        id: 'chengdu',\n        country: 'CN',\n        name: {\n            en: 'Chengdu',\n            zh: '成都',\n        },\n    },\n    {\n        id: 'chongqing',\n        country: 'CN',\n        name: {\n            en: 'Chongqing',\n            'zh-Hans': '重庆',\n            'zh-Hant': '重慶',\n        },\n    },\n    {\n        id: 'dongguan',\n        country: 'CN',\n        name: {\n            en: 'Dongguan',\n            'zh-Hans': '东莞',\n            'zh-Hant': '東莞',\n        },\n    },\n    {\n        id: 'edinburgh',\n        country: 'GBSCT',\n        name: {\n            en: 'Edinburgh',\n            ga: 'Dùn Èideann',\n            'zh-Hans': '爱丁堡',\n            'zh-Hant': '愛丁堡',\n        },\n    },\n    {\n        id: 'foshan',\n        country: 'CN',\n        name: {\n            en: 'Foshan',\n            zh: '佛山',\n        },\n    },\n    {\n        id: 'glasgow',\n        country: 'GBSCT',\n        name: {\n            en: 'Glasgow',\n            ga: 'Glaschu',\n            zh: '格拉斯哥',\n        },\n    },\n    {\n        id: 'guangzhou',\n        country: 'CN',\n        name: {\n            en: 'Guangzhou',\n            'zh-Hans': '广州',\n            'zh-Hant': '廣州',\n        },\n    },\n    {\n        id: 'hangzhou',\n        country: 'CN',\n        name: {\n            en: 'Hangzhou',\n            zh: '杭州',\n        },\n    },\n    {\n        id: 'hongkong',\n        country: 'HK',\n        name: {\n            en: 'Hong Kong',\n            zh: '香港',\n        },\n    },\n    {\n        id: 'kaohsiung',\n        country: 'TW',\n        name: {\n            en: 'Kaohsiung',\n            zh: '高雄',\n        },\n    },\n    {\n        id: 'london',\n        country: 'GBENG',\n        name: {\n            en: 'London',\n            'zh-Hans': '伦敦',\n            'zh-Hant': '倫敦',\n        },\n    },\n    {\n        id: 'macao',\n        country: 'MO',\n        name: {\n            en: 'Macao',\n            pt: 'Macau',\n            'zh-Hans': '澳门',\n            'zh-Hant': '澳門',\n        },\n    },\n    {\n        id: 'madrid',\n        country: 'ES',\n        name: {\n            en: 'Madrid',\n            'zh-Hans': '马德里',\n            'zh-Hant': '馬德里',\n        },\n    },\n    {\n        id: 'nanjing',\n        country: 'CN',\n        name: {\n            en: 'Nanjing',\n            zh: '南京',\n        },\n    },\n    {\n        id: 'newtaipei',\n        country: 'TW',\n        name: {\n            en: 'New Taipei',\n            zh: '新北',\n        },\n    },\n    {\n        id: 'oslo',\n        country: 'NO',\n        name: {\n            en: 'Oslo',\n            'zh-Hans': '奥斯陆',\n            'zh-Hant': '奧斯陸',\n        },\n    },\n    {\n        id: 'paris',\n        country: 'FR',\n        name: {\n            en: 'Paris',\n            zh: '巴黎',\n        },\n    },\n    {\n        id: 'qingdao',\n        country: 'CN',\n        name: {\n            en: 'Qingdao',\n            'zh-Hans': '青岛',\n            'zh-Hant': '青島',\n        },\n    },\n    {\n        id: 'sanfrancisco',\n        country: 'US',\n        name: {\n            en: 'San Francisco',\n            'zh-Hans': '旧金山',\n            'zh-HK': '三藩市',\n            'zh-TW': '舊金山',\n        },\n    },\n    {\n        id: 'seoul',\n        country: 'KR',\n        name: {\n            en: 'Seoul (Metropolitan Area)',\n            ko: '서울(수도권)',\n            'zh-Hans': '首尔（首都圈）',\n            'zh-Hant': '首爾（首都圈）',\n        },\n    },\n    {\n        id: 'shanghai',\n        country: 'CN',\n        name: {\n            en: 'Shanghai',\n            zh: '上海',\n        },\n    },\n    {\n        id: 'shenzhen',\n        country: 'CN',\n        name: {\n            en: 'Shenzhen',\n            zh: '深圳',\n        },\n    },\n    {\n        id: 'stockholm',\n        country: 'SE',\n        name: {\n            en: 'Stockholm',\n            'zh-Hans': '斯德哥尔摩',\n            'zh-Hant': '斯德哥爾摩',\n        },\n    },\n    {\n        id: 'taipei',\n        country: 'TW',\n        name: {\n            en: 'Taipei',\n            zh: '台北',\n        },\n    },\n    {\n        id: 'tianjin',\n        country: 'CN',\n        name: {\n            en: 'Tianjin',\n            zh: '天津',\n        },\n    },\n    {\n        id: 'tokyo',\n        country: 'JP',\n        name: {\n            en: 'Tokyo (Greater Tokyo Area)',\n            ja: '東京（首都圏）',\n            'zh-Hans': '东京（首都圈）',\n            'zh-Hant': '東京（首都圈）',\n        },\n    },\n    {\n        id: 'toronto',\n        country: 'CA',\n        name: {\n            en: 'Toronto',\n            'zh-Hans': '多伦多',\n            'zh-Hant': '多倫多',\n        },\n    },\n    {\n        id: 'tyneandwear',\n        country: 'GBENG',\n        name: {\n            en: 'Tyne and Wear',\n            'zh-Hans': '泰恩-威尔',\n            'zh-HK': '泰威',\n            'zh-TW': '泰恩-威爾',\n        },\n    },\n    {\n        id: 'xian',\n        country: 'CN',\n        name: {\n            en: \"Xi'an\",\n            zh: '西安',\n        },\n    },\n    {\n        id: 'other',\n        country: 'UN',\n        name: {\n            en: 'Customise',\n            'zh-Hans': '自定义',\n            'zh-Hant': '自訂',\n        },\n    },\n];\n","import React, { useEffect, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    ListItem,\n    ListItemIcon,\n    Icon,\n    TextField,\n    MenuItem,\n    Button,\n    makeStyles,\n    createStyles,\n    Tooltip,\n} from '@material-ui/core';\nimport { getTransText2 } from '../../utils';\nimport { cityList } from './data';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        cityItem: {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n        },\n        menuItemSpan: {\n            padding: '0 .3rem',\n        },\n        button: {\n            borderRadius: '50%',\n            height: 28,\n            width: 28,\n            minWidth: 0,\n            marginRight: 8,\n            border: 'solid',\n            padding: 0,\n        },\n        inputColour: {\n            position: 'absolute',\n            width: 0,\n            height: 0,\n            left: 27,\n            top: 32,\n        },\n        buttonContainer: {\n            display: 'flex',\n            flexShrink: 1,\n        },\n    })\n);\n\nconst useLineList = (theme: Theme) => {\n    const [list, setList] = React.useState([] as LineEntry[]);\n\n    const listPromise = theme[0]\n        ? import(/* webpackChunkName: \"colours\" */ `./colours/${theme[0]}`).then(\n              module => module.default as LineEntry[]\n          )\n        : Promise.resolve([] as LineEntry[]);\n\n    useEffect(\n        () => {\n            if (typeof theme[0] === 'undefined') {\n                return;\n            } else if (theme[0] === 'other') {\n                // mutate original list\n                listPromise.then(data => {\n                    setList(\n                        data.map((l, i) => (i === 0 ? { ...l, colour: theme[2], fg: theme[3] || '#fff' } : { ...l }))\n                    );\n                });\n            } else {\n                listPromise.then(data => setList(data));\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [theme.toString()]\n    );\n\n    return list;\n};\n\ninterface ColourDialogProps {\n    theme: [string, string, string, '#000' | '#fff'];\n    onUpdate: (key: string, value: any) => void;\n}\n\nexport default React.memo(\n    function ThemeItems(props: ColourDialogProps) {\n        // console.log('rerender');\n        const classes = useStyles();\n        const { t, i18n } = useTranslation();\n\n        const [hexTemp, setHexTemp] = React.useState(props.theme[2]);\n\n        const cityChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n            let newTheme = props.theme.map((val, idx) => (idx === 0 ? event.target.value : val));\n            props.onUpdate('theme', newTheme);\n        };\n\n        // Hook for fetching line list of current city\n        const lineList = useLineList(props.theme);\n\n        // Hook for updating props.theme when lineList changed\n        useEffect(\n            () => {\n                if (lineList.length === 0) return; // initialising, ignore\n                if (lineList.filter(l => l.id === props.theme[1]).length) return; // current city, ignore\n                let newTheme = [props.theme[0], lineList[0].id, lineList[0].colour, lineList[0].fg || '#fff'];\n                props.onUpdate('theme', newTheme);\n            },\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            [lineList]\n        );\n\n        const lineChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n            let line = event.target.value;\n            let newTheme = [\n                props.theme[0],\n                line,\n                lineList.filter(l => l.id === line)[0].colour,\n                lineList.filter(l => l.id === line)[0].fg || '#fff',\n            ];\n            props.onUpdate('theme', newTheme);\n        };\n\n        // Hook for updating hexTemp when props.hex changed\n        // which means valid hex has been updated to props\n        useEffect(\n            () => {\n                setHexTemp(props.theme[2]);\n            },\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            [props.theme[2]]\n        );\n\n        const colourChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n            let rgb = event.target.value;\n            setHexTemp(rgb);\n\n            if (props.theme[0] !== 'other') {\n                // if hex valid, modify theme city and props.hex\n                let newTheme = ['other', props.theme[1], rgb, props.theme[3]];\n                props.onUpdate('theme', newTheme);\n                // then lineList will be updated by hook (along with selection)\n                // then line will be updated by hook\n            } else {\n                // if hex valid, modify props.hex\n                let newTheme = props.theme.map((val, idx) => (idx === 2 ? rgb : val));\n                props.onUpdate('theme', newTheme);\n                // then lineList will be updated by hook (actually only hex is changed)\n            }\n        };\n\n        const hexChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n            let hex = event.target.value;\n            if (hex.match(/^#[0-9a-fA-f]{0,6}$/) === null) return;\n            setHexTemp(hex);\n\n            if (props.theme[0] !== 'other') {\n                if (hex.match(/^#[0-9a-fA-f]{6}$/) !== null) {\n                    // if hex valid, modify theme city and props.hex\n                    let newTheme = ['other', props.theme[1], hex, props.theme[3]];\n                    props.onUpdate('theme', newTheme);\n                    // then lineList will be updated by hook (along with selection)\n                    // then line will be updated by hook\n                } else {\n                    // if hex not valid, modify theme city only\n                    let newTheme = ['other', props.theme[1], props.theme[2], props.theme[3]];\n                    props.onUpdate('theme', newTheme);\n                    // then lineList will be updated by hook (along with selection)\n                    // then line will be updated by hook\n                }\n            } else {\n                if (hex.match(/^#[0-9a-fA-f]{6}$/) !== null) {\n                    // if hex valid, modify props.hex\n                    let newTheme = props.theme.map((val, idx) => (idx === 2 ? hex : val));\n                    props.onUpdate('theme', newTheme);\n                    // then lineList will be updated by hook (actually only hex is changed)\n                } else {\n                    // if hex not valid, do nothing\n                }\n            }\n        };\n\n        const fgChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n            let newTheme = ['other', 'other', props.theme[2], event.target.value];\n            props.onUpdate('theme', newTheme);\n        };\n\n        return (\n            <>\n                <ListItem>\n                    <ListItemIcon>\n                        <Icon>location_city</Icon>\n                    </ListItemIcon>\n                    <CitySelect value={props.theme[0]} onChange={cityChange} />\n                </ListItem>\n                <ListItem>\n                    <ListItemIcon>\n                        <Icon>subway</Icon>\n                    </ListItemIcon>\n                    <TextField\n                        select\n                        style={{ width: '100%' }}\n                        variant=\"outlined\"\n                        label={t('colour.line')}\n                        onChange={lineChange}\n                        value={props.theme[1]}\n                        disabled={props.theme[0] === 'other'}\n                    >\n                        {lineList.map(l => (\n                            <MenuItem key={l.id} value={l.id}>\n                                <span\n                                    className={classes.menuItemSpan}\n                                    style={{\n                                        backgroundColor: l.colour,\n                                        color: l.fg || '#fff',\n                                    }}\n                                >\n                                    {getTransText2(l.name, i18n.languages)}\n                                </span>\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </ListItem>\n                <ListItem>\n                    <div className={classes.buttonContainer}>\n                        <input\n                            type=\"color\"\n                            id=\"input-color\"\n                            value={props.theme[2]}\n                            onChange={colourChange}\n                            className={classes.inputColour}\n                            style={{ opacity: 0 }}\n                        />\n                        <label htmlFor=\"input-color\">\n                            <Tooltip title={t('colour.tooltip')} aria-label=\"colour picker\">\n                                <Button\n                                    className={classes.button}\n                                    style={{\n                                        backgroundColor: props.theme[2],\n                                        borderColor: props.theme[3] || '#fff',\n                                    }}\n                                    variant=\"contained\"\n                                    component=\"span\"\n                                >\n                                    {' '}\n                                </Button>\n                            </Tooltip>\n                        </label>\n                    </div>\n                    <TextField\n                        error={!hexTemp?.match(/^#[0-9a-fA-f]{6}$/g)}\n                        style={{ width: '100%', marginRight: 5 }}\n                        variant=\"outlined\"\n                        label={t('colour.colour')}\n                        onChange={hexChange}\n                        value={hexTemp?.toUpperCase()}\n                    ></TextField>\n                    <TextField\n                        select\n                        style={{ width: '100%' }}\n                        variant=\"outlined\"\n                        label={t('colour.fg')}\n                        onChange={fgChange}\n                        value={props.theme[3] || '#fff'}\n                    >\n                        <MenuItem key=\"#fff\" value=\"#fff\">\n                            {t('colour.fgWhite')}\n                        </MenuItem>\n                        <MenuItem key=\"#000\" value=\"#000\">\n                            {t('colour.fgBlack')}\n                        </MenuItem>\n                    </TextField>\n                </ListItem>\n            </>\n        );\n    },\n    (prevProps, nextProps) => prevProps.theme.toString() === nextProps.theme.toString()\n);\n\nconst CitySelect = (props: { value: string; onChange: (event: React.ChangeEvent<HTMLInputElement>) => void }) => {\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n\n    const items = useMemo(\n        () =>\n            cityList.map(c => (\n                <MenuItem key={c.id} value={c.id}>\n                    <span className={classes.cityItem}>\n                        <CountryFlag code={c.country} />\n                        <span>{getTransText2(c.name, i18n.languages)}</span>\n                    </span>\n                </MenuItem>\n            )),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n    return (\n        <TextField\n            select\n            style={{ width: '100%' }}\n            variant=\"outlined\"\n            label={t('colour.city')}\n            value={props.value}\n            onChange={props.onChange}\n        >\n            {items}\n        </TextField>\n    );\n};\n\nconst useEmojiStyles = makeStyles(() =>\n    createStyles({\n        img: {\n            height: 20,\n            marginRight: '0.2rem',\n        },\n    })\n);\n\n/**\n * Convert ISO 3166 alpha-2 country code (followed by BS 6879 UK subdivision code, if applicable) to flag Emoji. For Windows platform, an `img` element with image source from OpenMoji is returned.\n */\nfunction CountryFlag(props: { code: string }) {\n    const { i18n } = useTranslation();\n    const classes = useEmojiStyles();\n\n    let codePoints = [] as string[];\n\n    if (props.code.length === 2) {\n        codePoints = props.code\n            .toUpperCase()\n            .split('')\n            .map(char => ((char.codePointAt(0) || 0) + 127397).toString(16).toUpperCase());\n    } else {\n        codePoints = ['1F3F4'].concat(\n            props.code\n                .toUpperCase()\n                .split('')\n                .map(char => ((char.codePointAt(0) || 0) + 917536).toString(16).toUpperCase()),\n            'E007F'\n        );\n    }\n\n    // special case for simplified Chinese\n    if (['zh-CN', 'zh-Hans'].includes(i18n.language) && props.code === 'TW') codePoints = ['1F3F4'];\n\n    return navigator.platform.indexOf('Win32') !== -1 || navigator.platform.indexOf('Win64') !== -1 ? (\n        <img\n            src={process.env.PUBLIC_URL + `/images/flags/${codePoints.join('-')}.svg`}\n            className={classes.img}\n            alt={`Flag of ${props.code}`}\n        />\n    ) : (\n        // <img src={process.env.PUBLIC_URL + `/images/flags/${codePoints.join('-')}.svg`} className={classes.img} />\n        <span>{String.fromCodePoint(...codePoints.map(cp => parseInt(cp, 16)))}</span>\n    );\n}\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    List,\n    ListItem,\n    Paper,\n    Icon,\n    InputBase,\n    makeStyles,\n    DialogActions,\n    Button,\n    createStyles,\n} from '@material-ui/core';\n\nimport ThemeListItems from './theme-items';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        paperRoot: {\n            width: 250,\n        },\n        listItemPaper: {\n            justifyContent: 'center',\n        },\n        iconRoot: {\n            position: 'absolute',\n            color: theme.palette.action.active,\n        },\n        inputBaseRoot: {\n            display: 'block',\n        },\n        inputBaseInputZH: {\n            textAlign: 'center',\n            fontSize: 36,\n            padding: 0,\n            paddingTop: 6,\n            height: 45,\n        },\n        inputBaseInputEN: {\n            textAlign: 'center',\n            fontSize: 18,\n            padding: 0,\n            paddingBottom: 6,\n            height: 'auto',\n        },\n    })\n);\n\ninterface ColourDialogProps {\n    open: boolean;\n    theme: [string, string, string, '#000' | '#fff'];\n    lineName: Name;\n    onUpdate: (key: string, value: any) => void;\n    onClose: () => void;\n}\n\nconst ColourDialog = React.memo(\n    (props: ColourDialogProps) => {\n        const classes = useStyles();\n        const { t } = useTranslation();\n\n        const nameChange = (value: string, index: number) => {\n            let newName = props.lineName.map((val, idx) => (idx === index ? value : val));\n            props.onUpdate('name', newName);\n            // props.onUpdate('all', [...props.theme, ...newName]);\n        };\n\n        const handleClose = () => {\n            props.onClose();\n        };\n\n        return (\n            <Dialog onClose={handleClose} open={props.open}>\n                <DialogTitle>{t('colour.title')}</DialogTitle>\n                <DialogContent dividers>\n                    <List>\n                        <ListItem className={classes.listItemPaper}>\n                            <Paper className={classes.paperRoot} style={{ backgroundColor: props.theme[2] }}>\n                                <Icon className={classes.iconRoot}>edit</Icon>\n                                <InputBase\n                                    value={props.lineName[0]}\n                                    classes={{\n                                        root: classes.inputBaseRoot,\n                                        input: classes.inputBaseInputZH,\n                                    }}\n                                    style={{ color: props.theme[3] || '#fff' }}\n                                    onChange={e => nameChange(e.target.value, 0)}\n                                    autoFocus\n                                />\n                                <InputBase\n                                    value={props.lineName[1]}\n                                    classes={{\n                                        root: classes.inputBaseRoot,\n                                        input: classes.inputBaseInputEN,\n                                    }}\n                                    style={{ color: props.theme[3] || '#fff' }}\n                                    onChange={e => nameChange(e.target.value, 1)}\n                                />\n                            </Paper>\n                        </ListItem>\n                        <ThemeListItems theme={props.theme} onUpdate={props.onUpdate} />\n                    </List>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        {t('dialog.done')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    },\n    (prevProps, nextProps) =>\n        prevProps.open === nextProps.open &&\n        prevProps.lineName.toString() === nextProps.lineName.toString() &&\n        prevProps.theme.toString() === nextProps.theme.toString()\n);\n\nexport default ColourDialog;\n","import ColourDialog from './dialog';\n\nexport default ColourDialog;"],"sourceRoot":""}