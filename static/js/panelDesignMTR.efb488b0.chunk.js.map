{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","../node_modules/@material-ui/core/esm/Collapse/Collapse.js","panels/design/list-mtr.tsx"],"names":["SwitchBase","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","Boolean","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","role","undefined","event","input","newChecked","target","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","ListItemSecondaryAction","muiName","right","transform","Switch","_props$color","color","_props$edge","edge","_props$size","size","thumb","edgeStart","edgeEnd","concat","capitalize","switchBase","track","theme","display","overflow","boxSizing","flexShrink","verticalAlign","marginLeft","marginRight","palette","grey","transition","transitions","create","duration","shortest","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","Collapse","children","_props$collapsedHeigh","collapsedHeight","collapsedHeightProp","_props$component","Component","inProp","in","onEnter","onEntered","onEntering","onExit","onExiting","style","_props$timeout","timeout","standard","useTheme","timer","wrapperRef","autoTransitionDuration","clearTimeout","current","Transition","node","isAppearing","wrapperHeight","clientHeight","transitionDuration","getTransitionProps","mode","duration2","getAutoHeightDuration","addEndListener","_","next","setTimeout","state","childProps","container","entered","hidden","minHeight","wrapper","wrapperInner","muiSupportAuto","visibility","useStyles","makeStyles","createStyles","divider","spacing","nested","paddingLeft","grid","paddingBottom","paddingRight","DesignListMTR","t","useTranslation","dispatch","ParamContext","orientation","flexItem","variant","onClick","CustomiseDest","param","customiseMTRDest","isLegacy","terminal","open","setOpen","handleChange","index","map","val","i","button","prevOpen","disablePadding","join","unmountOnExit","justify","alignItems","item","xs","sm","label","JSON","stringify"],"mappings":"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","file":"static/js/panelDesignMTR.efb488b0.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle' // For correct alignment with the text.\n\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport { getTransitionProps } from '../transitions/utils';\nimport useTheme from '../styles/useTheme';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the container element. */\n    container: {\n      height: 0,\n      overflow: 'hidden',\n      transition: theme.transitions.create('height')\n    },\n\n    /* Styles applied to the container element when the transition has entered. */\n    entered: {\n      height: 'auto',\n      overflow: 'visible'\n    },\n\n    /* Styles applied to the container element when the transition has exited and `collapsedHeight` != 0px. */\n    hidden: {\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the outer wrapper element. */\n    wrapper: {\n      // Hack to get children with a negative margin to not falsify the height computation.\n      display: 'flex'\n    },\n\n    /* Styles applied to the inner wrapper element. */\n    wrapperInner: {\n      width: '100%'\n    }\n  };\n};\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Collapse = React.forwardRef(function Collapse(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$collapsedHeigh = props.collapsedHeight,\n      collapsedHeightProp = _props$collapsedHeigh === void 0 ? '0px' : _props$collapsedHeigh,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? duration.standard : _props$timeout,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapsedHeight\", \"component\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExiting\", \"style\", \"timeout\"]);\n\n  var theme = useTheme();\n  var timer = React.useRef();\n  var wrapperRef = React.useRef(null);\n  var autoTransitionDuration = React.useRef();\n  var collapsedHeight = typeof collapsedHeightProp === 'number' ? \"\".concat(collapsedHeightProp, \"px\") : collapsedHeightProp;\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  var handleEnter = function handleEnter(node, isAppearing) {\n    node.style.height = collapsedHeight;\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  var handleEntering = function handleEntering(node, isAppearing) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n\n    var _getTransitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'enter'\n    }),\n        transitionDuration = _getTransitionProps.duration;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  };\n\n  var handleEntered = function handleEntered(node, isAppearing) {\n    node.style.height = 'auto';\n\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  };\n\n  var handleExit = function handleExit(node) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n    node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n    if (onExit) {\n      onExit(node);\n    }\n  };\n\n  var handleExiting = function handleExiting(node) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n\n    var _getTransitionProps2 = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'exit'\n    }),\n        transitionDuration = _getTransitionProps2.duration;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style.height = collapsedHeight;\n\n    if (onExiting) {\n      onExiting(node);\n    }\n  };\n\n  var addEndListener = function addEndListener(_, next) {\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTransitionDuration.current || 0);\n    }\n  };\n\n  return React.createElement(Transition, _extends({\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), function (state, childProps) {\n    return React.createElement(Component, _extends({\n      className: clsx(classes.container, className, {\n        'entered': classes.entered,\n        'exited': !inProp && collapsedHeight === '0px' && classes.hidden\n      }[state]),\n      style: _extends({\n        minHeight: collapsedHeight\n      }, style),\n      ref: ref\n    }, childProps), React.createElement(\"div\", {\n      className: classes.wrapper,\n      ref: wrapperRef\n    }, React.createElement(\"div\", {\n      className: classes.wrapperInner\n    }, children)));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes = {\n  /**\n   * The content node to be collapsed.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The height of the container when collapsed.\n   */\n  collapsedHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  }), PropTypes.oneOf(['auto'])])\n} : void 0;\nCollapse.muiSupportAuto = true;\nexport default withStyles(styles, {\n  name: 'MuiCollapse'\n})(Collapse);","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ParamContext } from '../../context';\nimport {\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    Icon,\n    ListItemText,\n    ListItemSecondaryAction,\n    Switch,\n    Collapse,\n    makeStyles,\n    createStyles,\n    TextField,\n    Grid,\n    Button,\n} from '@material-ui/core';\nimport { Name } from '../../types';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        divider: {\n            margin: theme.spacing(0, 2),\n        },\n        nested: {\n            paddingLeft: theme.spacing(5),\n        },\n        grid: {\n            paddingLeft: theme.spacing(8),\n            paddingBottom: theme.spacing(1),\n            paddingRight: theme.spacing(2),\n            '& .MuiFormControl-root': {\n                width: '100%',\n            },\n        },\n    })\n);\n\nconst DesignListMTR = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const { dispatch } = React.useContext(ParamContext);\n\n    return (\n        <>\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>text_rotation_none</Icon>\n                </ListItemIcon>\n                <ListItemText primary={t('design.txtFlip.text')} />\n                <Divider orientation=\"vertical\" flexItem className={classes.divider} />\n                <Button variant=\"outlined\" color=\"primary\" onClick={() => dispatch({ type: 'SET_TEXT_FLIP' })}>\n                    {t('design.txtFlip.flip')}\n                </Button>\n            </ListItem>\n            <Divider />\n            <CustomiseDest />\n        </>\n    );\n};\n\nexport default DesignListMTR;\n\nconst CustomiseDest = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const { param, dispatch } = React.useContext(ParamContext);\n    const [open, setOpen] = React.useState(\n        param.customiseMTRDest.isLegacy || param.customiseMTRDest.terminal !== false\n    );\n\n    const handleChange = (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        let terminal =\n            param.customiseMTRDest.terminal !== false\n                ? (param.customiseMTRDest.terminal.map((val, i) => (i === index ? event.target.value : val)) as Name)\n                : false;\n        dispatch({ type: 'SET_TERMINAL_OVERRIDE', terminal });\n    };\n\n    return React.useMemo(\n        () => (\n            <>\n                <ListItem button onClick={() => setOpen(prevOpen => !prevOpen)}>\n                    <ListItemIcon>\n                        <Icon>text_fields</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={t('design.MTRDest.button')} />\n                    {open ? <Icon color=\"action\">expand_less</Icon> : <Icon color=\"action\">expand_more</Icon>}\n                </ListItem>\n                <Collapse in={open}>\n                    <List component=\"div\" disablePadding>\n                        <ListItem className={classes.nested}>\n                            <ListItemText primary={t('design.MTRDest.legacy')} />\n                            <ListItemSecondaryAction>\n                                <Switch\n                                    edge=\"end\"\n                                    onChange={(_, checked) => dispatch({ type: 'SET_DEST_LEGACY', isLegacy: checked })}\n                                    checked={param.customiseMTRDest.isLegacy}\n                                />\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <ListItem className={classes.nested}>\n                            <ListItemText\n                                primary={t('design.MTRDest.terminal')}\n                                secondary={\n                                    param.customiseMTRDest.terminal === false\n                                        ? ''\n                                        : param.customiseMTRDest.terminal.join()\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <Switch\n                                    edge=\"end\"\n                                    checked={param.customiseMTRDest.terminal !== false}\n                                    onChange={(_, checked) =>\n                                        dispatch({\n                                            type: 'SET_TERMINAL_OVERRIDE',\n                                            terminal: checked ? ['', ''] : false,\n                                        })\n                                    }\n                                />\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Collapse in={param.customiseMTRDest.terminal !== false} unmountOnExit>\n                            <Grid\n                                container\n                                spacing={1}\n                                justify=\"center\"\n                                alignItems=\"flex-start\"\n                                className={classes.grid}\n                            >\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        label={t('design.MTRDest.zh')}\n                                        value={param.customiseMTRDest.terminal[0] || ''}\n                                        onChange={handleChange(0)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        label={t('design.MTRDest.en')}\n                                        value={param.customiseMTRDest.terminal[1] || ''}\n                                        onChange={handleChange(1)}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </Collapse>\n                    </List>\n                </Collapse>\n            </>\n        ),\n        [JSON.stringify(param.customiseMTRDest), open, classes.nested, classes.grid]\n    );\n};\n"],"sourceRoot":""}