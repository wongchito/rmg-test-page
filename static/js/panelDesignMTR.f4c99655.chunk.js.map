{"version":3,"sources":["panels/design/list-mtr.tsx"],"names":["useStyles","makeStyles","theme","createStyles","divider","margin","spacing","nested","paddingLeft","grid","paddingBottom","paddingRight","width","DesignListMTR","t","useTranslation","classes","dispatch","React","useContext","ParamContext","primary","orientation","flexItem","className","variant","color","onClick","type","CustomiseDest","param","useState","customiseMTRDest","isLegacy","terminal","open","setOpen","handleChange","index","event","map","val","i","target","value","useMemo","button","prevOpen","in","component","disablePadding","edge","onChange","_","checked","secondary","join","unmountOnExit","container","justify","alignItems","item","xs","sm","label","JSON","stringify"],"mappings":"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","file":"static/js/panelDesignMTR.f4c99655.chunk.js","sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ParamContext } from '../../context';\nimport {\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    Icon,\n    ListItemText,\n    ListItemSecondaryAction,\n    Switch,\n    Collapse,\n    makeStyles,\n    createStyles,\n    TextField,\n    Grid,\n    Button,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        divider: {\n            margin: theme.spacing(0, 2),\n        },\n        nested: {\n            paddingLeft: theme.spacing(5),\n        },\n        grid: {\n            paddingLeft: theme.spacing(8),\n            paddingBottom: theme.spacing(1),\n            paddingRight: theme.spacing(2),\n            '& .MuiFormControl-root': {\n                width: '100%',\n            },\n        },\n    })\n);\n\nconst DesignListMTR = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const { dispatch } = React.useContext(ParamContext);\n\n    return (\n        <>\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>text_rotation_none</Icon>\n                </ListItemIcon>\n                <ListItemText primary={t('design.txtFlip.text')} />\n                <Divider orientation=\"vertical\" flexItem className={classes.divider} />\n                <Button variant=\"outlined\" color=\"primary\" onClick={() => dispatch({ type: 'SET_TEXT_FLIP' })}>\n                    {t('design.txtFlip.flip')}\n                </Button>\n            </ListItem>\n            <Divider />\n            <CustomiseDest />\n        </>\n    );\n};\n\nexport default DesignListMTR;\n\nconst CustomiseDest = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const { param, dispatch } = React.useContext(ParamContext);\n    const [open, setOpen] = React.useState(\n        param.customiseMTRDest.isLegacy || param.customiseMTRDest.terminal !== false\n    );\n\n    const handleChange = (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        let terminal =\n            param.customiseMTRDest.terminal !== false\n                ? (param.customiseMTRDest.terminal.map((val, i) => (i === index ? event.target.value : val)) as Name)\n                : false;\n        dispatch({ type: 'SET_TERMINAL_OVERRIDE', terminal });\n    };\n\n    return React.useMemo(\n        () => (\n            <>\n                <ListItem button onClick={() => setOpen(prevOpen => !prevOpen)}>\n                    <ListItemIcon>\n                        <Icon>text_fields</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={t('design.MTRDest.button')} />\n                    {open ? <Icon color=\"action\">expand_less</Icon> : <Icon color=\"action\">expand_more</Icon>}\n                </ListItem>\n                <Collapse in={open}>\n                    <List component=\"div\" disablePadding>\n                        <ListItem className={classes.nested}>\n                            <ListItemText primary={t('design.MTRDest.legacy')} />\n                            <ListItemSecondaryAction>\n                                <Switch\n                                    edge=\"end\"\n                                    onChange={(_, checked) => dispatch({ type: 'SET_DEST_LEGACY', isLegacy: checked })}\n                                    checked={param.customiseMTRDest.isLegacy}\n                                />\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <ListItem className={classes.nested}>\n                            <ListItemText\n                                primary={t('design.MTRDest.terminal')}\n                                secondary={\n                                    param.customiseMTRDest.terminal === false\n                                        ? ''\n                                        : param.customiseMTRDest.terminal.join()\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <Switch\n                                    edge=\"end\"\n                                    checked={param.customiseMTRDest.terminal !== false}\n                                    onChange={(_, checked) =>\n                                        dispatch({\n                                            type: 'SET_TERMINAL_OVERRIDE',\n                                            terminal: checked ? ['', ''] : false,\n                                        })\n                                    }\n                                />\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Collapse in={param.customiseMTRDest.terminal !== false} unmountOnExit>\n                            <Grid\n                                container\n                                spacing={1}\n                                justify=\"center\"\n                                alignItems=\"flex-start\"\n                                className={classes.grid}\n                            >\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        label={t('design.MTRDest.zh')}\n                                        value={\n                                            param.customiseMTRDest.terminal ? param.customiseMTRDest.terminal[0] : ''\n                                        }\n                                        onChange={handleChange(0)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        label={t('design.MTRDest.en')}\n                                        value={\n                                            param.customiseMTRDest.terminal ? param.customiseMTRDest.terminal[1] : ''\n                                        }\n                                        onChange={handleChange(1)}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </Collapse>\n                    </List>\n                </Collapse>\n            </>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [JSON.stringify(param.customiseMTRDest), open, classes.nested, classes.grid]\n    );\n};\n"],"sourceRoot":""}