{"version":3,"sources":["../external \"React\"","../external \"MaterialUI\"","context.ts","../external \"ReactI18next\"","methods.ts","utils.ts","../external \"i18next\"","../external \"ReactDOM\"","../external \"i18nextXHRBackend\"","../external \"i18nextBrowserLanguageDetector\"","i18n.ts","app-appbar.tsx","error-boundary.tsx","svgs/svg-mtr.tsx","svgs/svg-gzmtr.tsx","svgs/svg-shmetro.tsx","svgs/svg.tsx","svgs/index.ts","panels/panels.tsx","panels/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","React","MaterialUI","CanvasContext","createContext","ParamContext","paramReducer","state","action","type","data","key","svg_height","value","svgWidth","targetId","y_pc","branch_spacing","padding","direction_gz_x","direction_gz_y","line_name","name","theme","direction","platform_num","platform","txt_flip","dest_legacy","isLegacy","customiseMTRDest","terminal","line_num","num","psd_num","info_panel_type","variant","notesGZMTR","concat","filter","_","i","idx","map","note","stn_list","stnId","transfer","info","infos","setIdx","int","j","intIdx","k","undefined","osi_names","tick_direc","paid_area","isPaid","branch","branchType","branches","first","left","parents","slice","reverse","right","children","facility","services","Array","from","isChecked","Set","add","serviceId","s","stnList","ReactI18next","getYShareMTR","includes","length","stnPred","indexOf","getBranches","console","log","stack","branchCount","curId","shift","prevId","push","branchNextId","getRoutes","useTpo","useState","tpo","setTpo","useEffect","res","reduce","acc","cur","toString","updateParam","param","JSON","parse","localStorage","rmgParam","fontZH","fontEN","weightZH","weightEN","Object","entries","stnInfo","style","values","interchange","arr","forEach","intInfo","splice","change_type","split","usage","destination","svg_dest_width","runin","railmap","svg_width","setItem","stringify","getTransText2","obj","langs","l","en","formatStnName","join","replace","i18next","ReactDOM","i18nextXHRBackend","i18nextBrowserLanguageDetector","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","default","backend","loadPath","process","interpolation","escapeValue","then","t","document","title","documentElement","setAttribute","language","useStyles","makeStyles","createStyles","rootLight","backgroundColor","palette","primary","main","rootDark","background","paper","flexGrow","color","menuButton","AppAppBar","useTranslation","classes","prefersDarkMode","useMediaQuery","position","className","CanvasToggle","canvasAvailable","setCanvasToShown","canvasButtonEl","setCanvasButtonEl","handleClick","onClick","e","currentTarget","anchorEl","open","Boolean","onClose","c","margin","ZoomToggles","setCanvasScale","prevScale","ErrorBoundary","props","hasError","error","errorInfo","this","Component","DestinationMTR","lazy","RailMapMTR","memo","useContext","canvasToShown","canvas","getElementById","href","Suspense","fallback","svgProps","RunInGZMTR","RailMapGZMTR","DestinationSHMetro","RunInSHMetro","RailMapSHMetro","root","display","flexDirection","overflowX","content","flex","border","SVGs","canvasScale","sharedProps","id","xmlns","xmlnsXlink","height","viewBox","bg","x","y","fill","stroke","width","path","to","URLSearchParams","window","location","search","get","PanelSave","PanelLayout","PanelDesign","PanelStations","PanelInfo","typography","tab","minWidth","minHeight","marginBottom","paddingLeft","box","justifyContent","alignItems","PanelTab","setValue","tabNav","component","indicatorColor","textColor","onChange","val","scrollButtons","label","icon","role","overflow","p","index","currentId","current_stn_idx","paramUpdate","panel","darkTheme","createMuiTheme","secondary","overrides","MuiDialog","lightTheme","light","App","rmgCanvas","Number","rmgScale","toFixed","basename","Provider","rmgStyle","pathname","AppBody","useReducer","dispatch","paramString","deps","keys","o","a","useMemo","routes","hostname","match","navigator","serviceWorker","ready","registration","unregister","catch","message","head","append","tag","link","createElement","rel","renderApp","querySelectorAll","err","alert","removeItem"],"mappings":"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","file":"static/js/main.f5078a04.chunk.js","sourcesContent":["module.exports = React;","module.exports = MaterialUI;","import React, { createContext } from 'react';\n\ninterface ICanvasContext {\n    rmgStyle: ProvidedStyles;\n    canvasAvailable: ProvidedCanvas[];\n    canvasToShown: ProvidedCanvas | 'all';\n    setCanvasToShown: React.Dispatch<React.SetStateAction<ProvidedCanvas | 'all'>>;\n    canvasScale: number;\n    setCanvasScale: React.Dispatch<React.SetStateAction<number>>;\n}\n\ninterface IParamContext {\n    param: RMGParam;\n    dispatch: React.Dispatch<ReducerAction>;\n    branches: string[][];\n    routes: string[][];\n    deps: string;\n}\n\nexport const CanvasContext = createContext<ICanvasContext>({} as ICanvasContext);\nexport const ParamContext = createContext<IParamContext>({} as IParamContext);\n\ntype ReducerAction =\n    | { type: 'GLOBAL'; data: RMGParam }\n    | {\n          type: 'ANY';\n          key: string;\n          data: any;\n      }\n    | {\n          type: 'SET_HEIGHT';\n          value: number;\n      }\n    | {\n          type: 'SET_WIDTH';\n          targetId: ProvidedCanvas;\n          value: number;\n      }\n    | {\n          type: 'SET_Y';\n          value: number;\n      }\n    | {\n          type: 'SET_BRANCH_SPACING';\n          value: number;\n      }\n    | {\n          type: 'SET_PADDING';\n          value: number;\n      }\n    | {\n          type: 'SET_DIRECTION_GZ_X';\n          value: number;\n      }\n    | {\n          type: 'SET_DIRECTION_GZ_Y';\n          value: number;\n      }\n    | {\n          type: 'SET_LINE_NAME';\n          name: Name;\n      }\n    | {\n          type: 'SET_THEME';\n          theme: [string, string, string, '#fff' | '#000'];\n      }\n    | {\n          type: 'SET_DIRECTION';\n      }\n    | {\n          type: 'SET_PLATFORM';\n          platform: string;\n      }\n    | {\n          type: 'SET_TEXT_FLIP';\n      }\n    | {\n          type: 'SET_DEST_LEGACY';\n          isLegacy: boolean;\n      }\n    | {\n          type: 'SET_TERMINAL_OVERRIDE';\n          terminal: Name | false;\n      }\n    | {\n          type: 'SET_LINE_NUM';\n          num: string;\n      }\n    | {\n          type: 'SET_PSD_NUM';\n          num: string;\n      }\n    | {\n          type: 'SET_PANEL_TYPE';\n          variant: 'gz1' | 'gz28' | 'gz3' | 'gz1421' | 'gzgf';\n      }\n    | {\n          type: 'ADD_NOTE_GZMTR';\n      }\n    | {\n          type: 'REMOVE_NOTE_GZMTR';\n          idx: number;\n      }\n    | {\n          type: 'UPDATE_NOTE_GZMTR';\n          idx: number;\n          note: Note;\n      }\n    | {\n          type: 'UPDATE_STATION_NAME';\n          stnId: string;\n          name: Name;\n      }\n    | {\n          type: 'UPDATE_STATION_NUM';\n          stnId: string;\n          num: string;\n      }\n    | {\n          type: 'UPDATE_STATION_TRANSFER';\n          stnId: string;\n          transfer: StationTransfer;\n      }\n    | {\n          type: 'UPDATE_STATION_INTERCHANGE_INFO';\n          stnId: string;\n          setIdx: number;\n          intIdx: number;\n          info: InterchangeInfo;\n      }\n    | {\n          type: 'UPDATE_STATION_OSI_NAME';\n          stnId: string;\n          name: Name;\n      }\n    | {\n          type: 'UPDATE_STATION_TICK_DIREC';\n          stnId: string;\n          direction: 'l' | 'r';\n      }\n    | {\n          type: 'UPDATE_STATION_PAID_AREA';\n          stnId: string;\n          isPaid: boolean;\n      }\n    | {\n          type: 'UPDATE_STATION_BRANCH_TYPE';\n          stnId: string;\n          direction: 'left' | 'right';\n          branchType: 'through' | 'nonthrough';\n      }\n    | {\n          type: 'UPDATE_STATION_BRANCH_FIRST';\n          branches: [\n              {\n                  stnId: string;\n                  direction: 'left' | 'right';\n                  first: string;\n              },\n              {\n                  stnId: string;\n                  direction: 'left' | 'right';\n                  first: string;\n              }\n          ];\n      }\n    | {\n          type: 'UPDATE_STATION_BRANCH_POS';\n          left: string;\n          right: string;\n      }\n    | {\n          type: 'UPDATE_STATION_FACILITY';\n          stnId: string;\n          facility: '' | 'airport' | 'hsr' | 'disney';\n      }\n    | {\n          type: 'UPDATE_STATION_SERVICES';\n          stnId: string;\n          serviceId: 'local' | 'express';\n          isChecked: boolean;\n      }\n    | {\n          type: 'UPDATE_STATION_LIST';\n          stnList: { [stnId: string]: StationInfo };\n      };\n\nexport const paramReducer = (state: RMGParam, action: ReducerAction): RMGParam => {\n    switch (action.type) {\n        case 'GLOBAL':\n            return action.data;\n        case 'ANY':\n            return {\n                ...state,\n                [action.key]: action.data,\n            };\n        case 'SET_HEIGHT':\n            return {\n                ...state,\n                svg_height: action.value,\n            };\n        case 'SET_WIDTH':\n            return {\n                ...state,\n                svgWidth: {\n                    ...state.svgWidth,\n                    [action.targetId]: action.value,\n                },\n            };\n        case 'SET_Y':\n            return {\n                ...state,\n                y_pc: action.value,\n            };\n        case 'SET_BRANCH_SPACING':\n            return {\n                ...state,\n                branch_spacing: action.value,\n            };\n        case 'SET_PADDING':\n            return {\n                ...state,\n                padding: action.value,\n            };\n        case 'SET_DIRECTION_GZ_X':\n            return {\n                ...state,\n                direction_gz_x: action.value,\n            };\n        case 'SET_DIRECTION_GZ_Y':\n            return {\n                ...state,\n                direction_gz_y: action.value,\n            };\n        case 'SET_LINE_NAME':\n            return {\n                ...state,\n                line_name: action.name,\n            };\n        case 'SET_THEME':\n            return {\n                ...state,\n                theme: action.theme,\n            };\n        case 'SET_DIRECTION':\n            return {\n                ...state,\n                direction: state.direction === 'l' ? 'r' : 'l',\n            };\n        case 'SET_PLATFORM':\n            return {\n                ...state,\n                platform_num: action.platform,\n            };\n        case 'SET_TEXT_FLIP':\n            return {\n                ...state,\n                txt_flip: !state.txt_flip,\n            };\n        case 'SET_DEST_LEGACY':\n            return {\n                ...state,\n                dest_legacy: action.isLegacy,\n                customiseMTRDest: {\n                    ...state.customiseMTRDest,\n                    isLegacy: action.isLegacy,\n                },\n            };\n        case 'SET_TERMINAL_OVERRIDE':\n            return {\n                ...state,\n                customiseMTRDest: {\n                    ...state.customiseMTRDest,\n                    terminal: action.terminal,\n                },\n            };\n        case 'SET_LINE_NUM':\n            return {\n                ...state,\n                line_num: action.num,\n            };\n        case 'SET_PSD_NUM':\n            return {\n                ...state,\n                psd_num: action.num,\n            };\n        case 'SET_PANEL_TYPE':\n            return {\n                ...state,\n                info_panel_type: action.variant,\n            };\n        case 'ADD_NOTE_GZMTR':\n            return {\n                ...state,\n                notesGZMTR: state.notesGZMTR?.concat([['', '', 0, 0, false]]),\n            };\n        case 'REMOVE_NOTE_GZMTR':\n            return {\n                ...state,\n                notesGZMTR: state.notesGZMTR?.filter((_, i) => i !== action.idx),\n            };\n        case 'UPDATE_NOTE_GZMTR':\n            return {\n                ...state,\n                notesGZMTR: state.notesGZMTR?.map((note, i) => (i === action.idx ? action.note : note)),\n            };\n        case 'UPDATE_STATION_NAME':\n            // window.myLine.updateStnName(action.stnId, action.name);\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        name: action.name,\n                    },\n                },\n            };\n        case 'UPDATE_STATION_NUM':\n            // (window.myLine as RMGLineGZ).updateStnNum(action.stnId, action.num);\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        num: action.num,\n                    },\n                },\n            };\n        case 'UPDATE_STATION_TRANSFER':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: action.transfer,\n                    },\n                },\n            };\n        case 'UPDATE_STATION_INTERCHANGE_INFO':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: {\n                            ...state.stn_list[action.stnId].transfer,\n                            info: state.stn_list[action.stnId].transfer?.info.map((infos, i) =>\n                                i === action.setIdx\n                                    ? infos.map((int, j) =>\n                                          j === action.intIdx\n                                              ? (([0, 1, 2, 3, 4, 5].map(k =>\n                                                    action.info[k] === undefined ? int[k] : action.info[k]\n                                                ) as unknown) as InterchangeInfo)\n                                              : int\n                                      )\n                                    : infos\n                            ),\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_OSI_NAME':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: {\n                            ...state.stn_list[action.stnId].transfer,\n                            osi_names: [action.name],\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_TICK_DIREC':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: {\n                            ...state.stn_list[action.stnId].transfer,\n                            tick_direc: action.direction,\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_PAID_AREA':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: {\n                            ...state.stn_list[action.stnId].transfer,\n                            paid_area: action.isPaid,\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_BRANCH_TYPE':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        branch: {\n                            ...state.stn_list[action.stnId].branch,\n                            [action.direction]: [\n                                action.branchType,\n                                state.stn_list[action.stnId].branch[action.direction][1],\n                            ],\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_BRANCH_FIRST':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.branches[0].stnId]: {\n                        ...state.stn_list[action.branches[0].stnId],\n                        branch: {\n                            ...state.stn_list[action.branches[0].stnId].branch,\n                            [action.branches[0].direction]: [\n                                state.stn_list[action.branches[0].stnId].branch[action.branches[0].direction][0],\n                                action.branches[0].first,\n                            ],\n                        },\n                    },\n                    [action.branches[1].stnId]: {\n                        ...state.stn_list[action.branches[1].stnId],\n                        branch: {\n                            ...state.stn_list[action.branches[1].stnId].branch,\n                            [action.branches[1].direction]: [\n                                state.stn_list[action.branches[1].stnId].branch[action.branches[1].direction][0],\n                                action.branches[1].first,\n                            ],\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_BRANCH_POS':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.left]: {\n                        ...state.stn_list[action.left],\n                        parents: state.stn_list[action.left].parents.slice().reverse(),\n                    },\n                    [action.right]: {\n                        ...state.stn_list[action.right],\n                        children: state.stn_list[action.right].children.slice().reverse(),\n                    },\n                },\n            };\n        case 'UPDATE_STATION_FACILITY':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        facility: action.facility,\n                    },\n                },\n            };\n        case 'UPDATE_STATION_SERVICES':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        services: Array.from(\n                            action.isChecked\n                                ? new Set(state.stn_list[action.stnId].services).add(action.serviceId)\n                                : state.stn_list[action.stnId].services.filter(s => s !== action.serviceId)\n                        ),\n                    },\n                },\n            };\n        case 'UPDATE_STATION_LIST':\n            return {\n                ...state,\n                stn_list: action.stnList,\n            };\n        default:\n            return state;\n    }\n};\n","module.exports = ReactI18next;","import React from 'react';\n\n/**\n * Vertical position (in shares) of station icon if using MTR style (for consistency of method `RMGLine.newStnPossibleLoc()`).\n */\nexport const getYShareMTR = (stnId: string, stnList: StationDict): -1 | 0 | 1 => {\n    if (\n        ['linestart', 'lineend'].includes(stnId) ||\n        stnList[stnId].parents.length > 1 ||\n        stnList[stnId].children.length > 1\n    ) {\n        return 0;\n    }\n    var stnPred = stnList[stnId].parents[0];\n    if (stnPred) {\n        // parent exist\n        if (stnList[stnPred].children.length === 1) {\n            // no sibling, then y same as parent\n            return getYShareMTR(stnPred, stnList);\n        } else {\n            // sibling exists, then y depends on its idx of being children\n            return stnList[stnPred].children.indexOf(stnId) === 0 ? 1 : -1;\n        }\n    } else {\n        // no parent, must be linestart\n        return 0;\n    }\n};\n\n/**\n * Getter of all branches (支線段) of the line (both ends included). The first branch must be the main line.\n * @example MTREastRailLine.branches\n * /*\n * [0]: [LineStart, Lo Wu, ..., Hung Hom, LineEnd]\n * [1]: [LineStart, Lok Ma Chau, Sheung Shui]\n * [2]: [University, Racecourse, Sha Tin]\n * /\n */\nexport const getBranches = (stnList: StationDict) => {\n    console.log('computing branches');\n\n    var stack = ['linestart'];\n    var branches = [['linestart']];\n    var branchCount = 0;\n\n    while (stack.length) {\n        var curId = stack.shift() as string;\n        var prevId = branches[branchCount].slice().reverse()[0] || null;\n        if (prevId && curId !== 'linestart') {\n            branches[branchCount].push(curId);\n        } else {\n            branches[branchCount] = [curId];\n        }\n        while (curId !== 'lineend') {\n            prevId = curId;\n            var children = stnList[prevId].children;\n            switch (children.length) {\n                case 1:\n                    curId = children[0];\n                    break;\n                case 2:\n                    let branchNextId = stnList[prevId].branch.right[1] as string;\n                    // if (branchCount === 0) {\n                    if (stnList[prevId].branch.right[0] === 'through') {\n                        branches.push([curId]);\n                        stack.push(branchNextId);\n                    } else {\n                        if (branchCount === 0) {\n                            branches.push([prevId]);\n                            stack.push(branchNextId);\n                            // all branching out nodes are added to stack in the first loop\n                        }\n                    }\n                    curId = children.filter(stnId => stnId !== branchNextId)[0];\n                    break;\n            }\n            branches[branchCount].push(curId);\n\n            if (prevId === stnList[curId].branch.left[1]) {\n                break;\n            }\n        }\n        // branches[branchCount] = curBranch;\n        branchCount++;\n    }\n\n    return branches;\n};\n\n/**\n * Getter of all routes (行車交路) of the line (both ends included). The first branch must be the main line.\n * @example MTREastRailLine.branches\n * /*\n * [0]: [LineStart, Lo Wu, Sheung Shui, ..., Hung Hom, LineEnd]\n * [1]: [LineStart, Lok Ma Chau, Sheung Shui, ..., Hung Hom, LineEnd]\n * [2]: [LineStart, Lo Wu, Sheung Shui, ..., University, Racecourse, Sha Tin, ..., Hung Hom, LineEnd]\n * [3]: [LineStart, Lok Ma Chau, Sheung Shui, ..., University, Racecourse, Sha Tin, ..., Hung Hom, LineEnd]\n * /\n */\nexport const getRoutes = (stnList: StationDict) => {\n    console.log('computing routes');\n\n    var stack = ['linestart'];\n    var branches = [['linestart']];\n    var branchCount = 0;\n\n    while (stack.length) {\n        var curId = stack.shift() as string;\n        var prevId = branches[branchCount].slice().reverse()[0] || null;\n        if (prevId && curId !== 'linestart') {\n            branches[branchCount].push(curId);\n        } else {\n            branches[branchCount] = [curId];\n        }\n        while (curId !== 'lineend') {\n            prevId = curId;\n            var children = stnList[prevId].children;\n            switch (children.length) {\n                case 1:\n                    curId = children[0];\n                    break;\n                case 2:\n                    let branchNextId = stnList[prevId].branch.right[1] as string;\n                    // if (branchCount === 0) {\n                    if (stnList[prevId].branch.right[0] === 'through') {\n                        branches.push(branches[branchCount].slice());\n                        stack.push(branchNextId);\n                    } else {\n                        if (branchCount === 0) {\n                            branches.push([prevId]);\n                            stack.push(branchNextId);\n                        }\n                        // branches.push([prevId]);\n                    }\n                    // stack.push(branchNextId);\n                    // }\n                    curId = children.filter(stnId => stnId !== branchNextId)[0];\n                    break;\n            }\n            branches[branchCount].push(curId);\n\n            if (prevId === stnList[curId].branch.left[1] && stnList[curId].branch.left[0] === 'nonthrough') {\n                break;\n            }\n        }\n        // branches[branchCount] = curBranch;\n        branchCount++;\n    }\n\n    return branches;\n};\n\n/**\n * Memo of topological ordering for all stations by stacking all branches into an one-dimensional array.\n * @param branches Branches from `useBranches` memo\n */\nexport const useTpo = (branches: string[][]) => {\n    const [tpo, setTpo] = React.useState([] as string[]);\n\n    React.useEffect(\n        () => {\n            console.log('computing tpo');\n            if (branches.length === 1) {\n                setTpo(branches[0].slice(1, -1));\n                return;\n            } else {\n                let res = branches\n                    .reduce(\n                        (acc, cur) => {\n                            let idx = acc.indexOf(cur.slice(-1)[0]);\n                            return acc.slice(0, idx).concat(cur.slice(1), acc.slice(idx + 1));\n                        },\n                        ['lineend']\n                    )\n                    .slice(0, -1);\n                setTpo(res);\n                return;\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [branches.toString()]\n    );\n\n    return tpo;\n};\n","export function updateParam() {\n    var param = JSON.parse(localStorage.rmgParam) as { [x: string]: any };\n\n    // Version 0.10\n    if (!('line_name' in param)) {\n        param.line_name = ['路線名', 'Name of Line'];\n    }\n    if (!('dest_legacy' in param)) {\n        param.dest_legacy = false;\n    }\n\n    // Version 0.11\n    delete param.fontZH;\n    delete param.fontEN;\n    delete param.weightZH;\n    delete param.weightEN;\n\n    // Version 0.12\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('branch' in stnInfo)) {\n            param.stn_list[stnId].branch = { left: [], right: [] };\n            if (stnInfo.children.length === 2) {\n                param.stn_list[stnId].branch.right = ['through', stnInfo.children[1]];\n            } else {\n                param.stn_list[stnId].branch.right = [];\n            }\n            if (stnInfo.parents.length === 2) {\n                param.stn_list[stnId].branch.left = ['through', stnInfo.parents[1]];\n            } else {\n                param.stn_list[stnId].branch.left = [];\n            }\n        }\n    }\n\n    // Version 1.2\n    if (!('psd_num' in param)) {\n        param.psd_num = 1;\n    }\n    if (!('line_num' in param)) {\n        param.line_num = 1;\n    }\n    delete param.style;\n    if (param.theme.length === 3) {\n        param.theme.push('#fff');\n    }\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (['linestart', 'lineend'].includes(stnId)) {\n            continue;\n        }\n        if (!('num' in stnInfo)) {\n            param.stn_list[stnId].num = '00';\n        }\n    }\n\n    // Version 1.3\n    for (let stnInfo of Object.values(param.stn_list as { [x: string]: any })) {\n        if ('interchange' in stnInfo) {\n            stnInfo.interchange.map((arr: any) => {\n                return arr.forEach((intInfo: any) => {\n                    if (intInfo.length === 5) {\n                        intInfo.splice(3, 0, '#fff');\n                    }\n                });\n            });\n        }\n    }\n\n    // Version 1.4\n    if (!('info_panel_type' in param)) {\n        param.info_panel_type = 'panasonic';\n    }\n\n    // Version 1.5\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (stnInfo.change_type === 'osi22_end_p') {\n            param.stn_list[stnId].change_type = 'osi22_pr';\n        }\n        if (stnInfo.change_type === 'osi22_end_u') {\n            param.stn_list[stnId].change_type = 'osi22_ur';\n        }\n    }\n\n    // Version 2.1\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('interchange' in stnInfo)) {\n            param.stn_list[stnId].interchange = [[]];\n        }\n    }\n\n    // Version 2.2\n    if (param.info_panel_type === 'gz_1') {\n        param.info_panel_type = 'gz28';\n    }\n\n    // Version 2.3\n    if (param.info_panel_type === 'panasonic') {\n        param.info_panel_type = 'gz28';\n    }\n    if (param.info_panel_type === 'gz_2') {\n        param.info_panel_type = 'gzgf';\n    }\n    if (param.info_panel_type === 'gz_3') {\n        param.info_panel_type = 'gz3';\n    }\n    if (!('direction_gz_x' in param)) {\n        param.direction_gz_x = 50;\n    }\n    if (!('direction_gz_y' in param)) {\n        param.direction_gz_y = 70;\n    }\n\n    // Version 2.6\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('transfer' in stnInfo)) {\n            param.stn_list[stnId].transfer = {\n                type: stnInfo.change_type?.split('_')[0] as 'none' | 'int2' | 'int3' | 'osi11' | 'osi12' | 'osi22',\n                tick_direc:\n                    stnInfo.change_type === 'none' || stnInfo.change_type === 'int2'\n                        ? 'r'\n                        : (stnInfo.change_type\n                              ?.split('_')[1]\n                              .split('')\n                              .slice()\n                              .reverse()[0] as 'l' | 'r'),\n                paid_area:\n                    stnInfo.change_type?.indexOf('osi') !== -1 ? stnInfo.change_type?.split('_')[1][0] === 'p' : true,\n                osi_names: stnInfo.change_type?.indexOf('osi') !== -1 ? [stnInfo.interchange[1][0]] : [],\n                info:\n                    stnInfo.interchange.length === 2\n                        ? [stnInfo.interchange[0], stnInfo.interchange[1].slice(1)]\n                        : stnInfo.interchange,\n            };\n        }\n    }\n\n    // Version 2.8\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('services' in stnInfo)) {\n            param.stn_list[stnId].services = ['local'];\n        }\n    }\n\n    // Version 2.15\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('usage' in stnInfo)) {\n            param.stn_list[stnId].usage = '';\n        }\n    }\n\n    // Version 3.0\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('facility' in stnInfo)) {\n            param.stn_list[stnId].facility = stnInfo.usage;\n        }\n    }\n\n    // Version 3.4\n    if (!('customiseMTRDest' in param)) {\n        param.customiseMTRDest = { isLegacy: param.dest_legacy || false, terminal: false };\n    }\n\n    // Version 3.4\n    if (!('svgWidth' in param)) {\n        param.svgWidth = {\n            destination: param.svg_dest_width,\n            runin: param.svg_dest_width,\n            railmap: param.svg_width,\n        };\n    }\n\n    if (!('notesGZMTR' in param)) {\n        param.notesGZMTR = [];\n    }\n\n    param.notesGZMTR = param.notesGZMTR?.map((note: any[]) =>\n        note.length === 4 ? note.concat([false]) : note\n    ) as Note[];\n\n    localStorage.setItem('rmgParam', JSON.stringify(param));\n}\n\nexport const getTransText2 = (obj: ITrans, langs: string[]) => {\n    for (let l of langs) {\n        if (obj[l]) return obj[l];\n    }\n    return obj.en;\n};\n\n/**\n * Format display style of station name as `[num: ]nameZH,nameEN`.\n */\nexport const formatStnName = (stnInfo: StationInfo, style: ProvidedStyles) => {\n    return `${style === 'gzmtr' ? (stnInfo?.num || '-') + ': ' : ''}${stnInfo?.name.join().replace('\\\\', ' ')}`;\n};\n","module.exports = i18next;","module.exports = ReactDOM;","module.exports = i18nextXHRBackend;","module.exports = i18nextBrowserLanguageDetector;","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n.use(Backend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        fallbackLng: {\n            'zh-CN': ['zh-Hans', 'en'],\n            'zh-Hant': ['zh-HK', 'en'],\n            'zh-HK': ['zh-Hant', 'en'],\n            'zh-TW': ['zh-HK', 'zh-Hant'],\n            default: ['en'],\n        },\n        // debug: true,\n        backend: {\n            // for all available options read the backend's repository readme file\n            loadPath: process.env.PUBLIC_URL + '/locale/{{lng}}.json',\n        },\n\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        },\n    })\n    .then(t => {\n        document.title = t('title');\n        document.documentElement.setAttribute('lang', i18n.language);\n    });\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    AppBar,\n    Toolbar,\n    Tooltip,\n    IconButton,\n    Typography,\n    Icon,\n    makeStyles,\n    createStyles,\n    Menu,\n    MenuItem,\n    Divider,\n    useMediaQuery,\n} from '@material-ui/core';\nimport { CanvasContext } from './context';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        rootLight: {\n            backgroundColor: theme.palette.primary.main,\n        },\n        rootDark: {\n            backgroundColor: theme.palette.background.paper,\n        },\n        title: {\n            flexGrow: 1,\n            color: '#fff',\n        },\n        menuButton: {\n            color: '#fff',\n        },\n    })\n);\n\nconst AppAppBar = () => {\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n    return React.useMemo(\n        () => (\n            <AppBar position=\"sticky\" className={prefersDarkMode ? classes.rootDark : classes.rootLight}>\n                <Toolbar variant=\"dense\">\n                    <Typography variant=\"h6\" className={classes.title} color=\"textPrimary\">\n                        {t('title')}\n                    </Typography>\n\n                    <CanvasToggle />\n                    <ZoomToggles />\n                </Toolbar>\n            </AppBar>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [prefersDarkMode, i18n.language]\n    );\n};\n\nexport default AppAppBar;\n\nconst CanvasToggle = () => {\n    const { t } = useTranslation();\n\n    const classes = useStyles();\n\n    const { canvasAvailable, setCanvasToShown } = React.useContext(CanvasContext);\n    const [canvasButtonEl, setCanvasButtonEl] = React.useState<null | HTMLElement>(null);\n    const handleClick = (action: ProvidedCanvas | 'all') => () => {\n        setCanvasToShown(action);\n        setCanvasButtonEl(null);\n    };\n\n    return React.useMemo(\n        () => (\n            <>\n                <Tooltip title={t('toggle.tooltip')}>\n                    <IconButton onClick={e => setCanvasButtonEl(e.currentTarget)} className={classes.menuButton}>\n                        <Icon>photo_library</Icon>\n                    </IconButton>\n                </Tooltip>\n                <Menu anchorEl={canvasButtonEl} open={Boolean(canvasButtonEl)} onClose={() => setCanvasButtonEl(null)}>\n                    {canvasAvailable.map((c: ProvidedCanvas) => (\n                        <MenuItem key={c} onClick={handleClick(c)}>\n                            {t('toggle.' + c)}\n                        </MenuItem>\n                    ))}\n                    <Divider style={{ margin: '6px 0' }} />\n                    <MenuItem onClick={handleClick('all')}>{t('toggle.all')}</MenuItem>\n                </Menu>\n            </>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [canvasAvailable.toString(), canvasButtonEl, classes.menuButton]\n    );\n};\n\nconst ZoomToggles = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const { setCanvasScale } = React.useContext(CanvasContext);\n    return React.useMemo(\n        () => (\n            <>\n                <Tooltip title={t('zoom.out')}>\n                    <IconButton\n                        onClick={() =>\n                            setCanvasScale((prevScale: number) => (prevScale <= 0.1 ? prevScale : prevScale - 0.1))\n                        }\n                        className={classes.menuButton}\n                    >\n                        <Icon>zoom_out</Icon>\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title={t('zoom.in')}>\n                    <IconButton\n                        onClick={() => setCanvasScale((prevScale: number) => prevScale + 0.1)}\n                        className={classes.menuButton}\n                    >\n                        <Icon>zoom_in</Icon>\n                    </IconButton>\n                </Tooltip>\n            </>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [classes.menuButton]\n    );\n};\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component<{ children: React.ReactNode }, { hasError: boolean }> {\n    constructor(props: { children: React.ReactNode }) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error: any) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n\n    componentDidCatch(error: any, errorInfo: any) {\n        // You can also log the error to an error reporting service\n        // logErrorToMyService(error, errorInfo);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return <h1>Something went wrong.</h1>;\n        }\n\n        return this.props.children;\n    }\n}\n","import React, { useContext } from 'react';\nimport { CanvasContext } from '../context';\nimport ErrorBoundary from '../error-boundary';\nimport { CircularProgress } from '@material-ui/core';\n\nconst DestinationMTR = React.lazy(() =>\n    import(/* webpackChunkName: \"destinationMTR\" */ './destination/destination-mtr')\n);\nconst RailMapMTR = React.lazy(() => import(/* webpackChunkName: \"railmapMTR\" */ './railmap/railmap-mtr'));\n\nexport default React.memo(\n    function SVGsMTR(props: {\n        svgProps: (canvas: ProvidedCanvas) => React.SVGProps<SVGSVGElement>;\n        children: React.ReactNode;\n    }) {\n        const { canvasAvailable, canvasToShown } = useContext(CanvasContext);\n        ['share', ...canvasAvailable].forEach(\n            canvas =>\n                ((document.getElementById('css_' + canvas) as HTMLLinkElement).href =\n                    process.env.PUBLIC_URL + `/styles/${canvas}_mtr.css`)\n        );\n\n        return (\n            <>\n                {['destination', 'all'].includes(canvasToShown) && (\n                    <React.Suspense fallback={<CircularProgress />}>\n                        <ErrorBoundary>\n                            <svg {...props.svgProps('destination')}>\n                                {props.children}\n                                <DestinationMTR />\n                            </svg>\n                        </ErrorBoundary>\n                    </React.Suspense>\n                )}\n                {['railmap', 'all'].includes(canvasToShown) && (\n                    <React.Suspense fallback={<CircularProgress />}>\n                        <ErrorBoundary>\n                            <svg {...props.svgProps('railmap')}>\n                                {props.children}\n                                <RailMapMTR />\n                            </svg>\n                        </ErrorBoundary>\n                    </React.Suspense>\n                )}\n            </>\n        );\n    },\n    () => true\n);\n","import React, { useContext } from 'react';\nimport { CanvasContext } from '../context';\nimport { CircularProgress } from '@material-ui/core';\nimport ErrorBoundary from '../error-boundary';\n\nconst RunInGZMTR = React.lazy(() => import(/* webpackChunkName: \"runinMTR\" */ './runin/runin-gzmtr'));\nconst RailMapGZMTR = React.lazy(() => import(/* webpackChunkName: \"railmapGZMTR\" */ './railmap/railmap-gzmtr'));\n\nexport default React.memo(\n    function SVGsGZMTR(props: {\n        svgProps: (canvas: ProvidedCanvas) => React.SVGProps<SVGSVGElement>;\n        children: React.ReactNode;\n    }) {\n        const { canvasAvailable, canvasToShown } = useContext(CanvasContext);\n        ['share', ...canvasAvailable].forEach(\n            canvas =>\n                ((document.getElementById('css_' + canvas) as HTMLLinkElement).href =\n                    process.env.PUBLIC_URL + `/styles/${canvas}_gzmtr.css`)\n        );\n        return (\n            <>\n                {['runin', 'all'].includes(canvasToShown) && (\n                    <React.Suspense fallback={<CircularProgress />}>\n                        <ErrorBoundary>\n                            <svg {...props.svgProps('runin')}>\n                                {props.children}\n                                <RunInGZMTR />\n                            </svg>\n                        </ErrorBoundary>\n                    </React.Suspense>\n                )}\n                {['railmap', 'all'].includes(canvasToShown) && (\n                    <React.Suspense fallback={<CircularProgress />}>\n                        <ErrorBoundary>\n                            <svg {...props.svgProps('railmap')}>\n                                {props.children}\n                                <RailMapGZMTR />\n                            </svg>\n                        </ErrorBoundary>\n                    </React.Suspense>\n                )}\n            </>\n        );\n    },\n    () => true\n);\n","import React, { useContext } from 'react';\nimport { CanvasContext } from '../context';\nimport { CircularProgress } from '@material-ui/core';\nimport ErrorBoundary from '../error-boundary';\n\nconst DestinationSHMetro = React.lazy(() =>\n    import(/* webpackChunkName: \"destinationSHMetro\" */ './destination/destination-shmetro')\n);\nconst RunInSHMetro = React.lazy(() => import(/* webpackChunkName: \"runinSHMetro\" */ './runin/runin-shmetro'));\nconst RailMapSHMetro = React.lazy(() => import(/* webpackChunkName: \"railmapSHMetro\" */ './railmap/railmap-shmetro'));\n\nexport default React.memo(\n    function SVGsSHMetro(props: {\n        svgProps: (canvas: ProvidedCanvas) => React.SVGProps<SVGSVGElement>;\n        children: React.ReactNode;\n    }) {\n        const { canvasAvailable, canvasToShown } = useContext(CanvasContext);\n        ['share', ...canvasAvailable].forEach(\n            canvas =>\n                ((document.getElementById('css_' + canvas) as HTMLLinkElement).href =\n                    process.env.PUBLIC_URL + `/styles/${canvas}_shmetro.css`)\n        );\n        return (\n            <>\n                {['destination', 'all'].includes(canvasToShown) && (\n                    <React.Suspense fallback={<CircularProgress />}>\n                        <ErrorBoundary>\n                            <svg {...props.svgProps('destination')}>\n                                {props.children}\n                                <DestinationSHMetro />\n                            </svg>\n                        </ErrorBoundary>\n                    </React.Suspense>\n                )}\n                {['runin', 'all'].includes(canvasToShown) && (\n                    <React.Suspense fallback={<CircularProgress />}>\n                        <ErrorBoundary>\n                            <svg {...props.svgProps('runin')}>\n                                {props.children}\n                                <RunInSHMetro />\n                            </svg>\n                        </ErrorBoundary>\n                    </React.Suspense>\n                )}\n                {['railmap', 'all'].includes(canvasToShown) && (\n                    <React.Suspense fallback={<CircularProgress />}>\n                        <ErrorBoundary>\n                            <svg {...props.svgProps('railmap')}>\n                                {props.children}\n                                <RailMapSHMetro />\n                            </svg>\n                        </ErrorBoundary>\n                    </React.Suspense>\n                )}\n            </>\n        );\n    },\n    () => true\n);\n","import React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core';\nimport { CanvasContext, ParamContext } from '../context';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport SVGsMTR from './svg-mtr';\nimport SVGsGZMTR from './svg-gzmtr';\nimport SVGsSHMetro from './svg-shmetro';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexDirection: 'row',\n            overflowX: 'scroll',\n            '&::before, &::after': {\n                content: '\"\"',\n                margin: 'auto',\n            },\n            '& > svg': {\n                flex: '0 0 auto',\n                border: '1px solid black',\n            },\n        },\n    })\n);\n\nconst SVGs = () => {\n    const classes = useStyles();\n\n    const { param } = React.useContext(ParamContext);\n    const { canvasScale } = React.useContext(CanvasContext);\n\n    const sharedProps = (canvas: ProvidedCanvas): React.SVGProps<SVGSVGElement> => ({\n        id: canvas,\n        xmlns: 'http://www.w3.org/2000/svg',\n        xmlnsXlink: 'http://www.w3.org/1999/xlink',\n        height: param.svg_height * canvasScale,\n        viewBox: `0 0 ${param.svgWidth[canvas]} ${param.svg_height}`,\n        style: {\n            ['--rmg-svg-width' as any]: param.svgWidth[canvas] + 'px',\n            ['--rmg-svg-height' as any]: param.svg_height + 'px',\n            ['--rmg-theme-colour' as any]: param.theme[2],\n            ['--rmg-theme-fg' as any]: param.theme[3],\n        },\n    });\n    const bg = (\n        <rect\n            x={0}\n            y={0}\n            fill=\"white\"\n            stroke=\"none\"\n            style={{ height: 'var(--rmg-svg-height)', width: 'var(--rmg-svg-width)' }}\n        />\n    );\n\n    return (\n        <div className={classes.root}>\n            <Switch>\n                <Route path=\"/mtr\">\n                    <SVGsMTR svgProps={sharedProps}>{bg}</SVGsMTR>\n                </Route>\n                <Route path=\"/gzmtr\">\n                    <SVGsGZMTR svgProps={sharedProps}>{bg}</SVGsGZMTR>\n                </Route>\n                <Route path=\"/shmetro\">\n                    <SVGsSHMetro svgProps={sharedProps}>{bg}</SVGsSHMetro>\n                </Route>\n                <Redirect to={'/' + (new URLSearchParams(window.location.search).get('style') || 'mtr')} />\n            </Switch>\n        </div>\n    );\n};\n\nexport default SVGs;\n","import SVGs from './svg';\n\nexport default SVGs;","import * as React from 'react';\n\nimport { Typography, Box, CircularProgress, Tabs, Tab, Icon, makeStyles, createStyles } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nconst PanelSave = React.lazy(() => import(/* webpackChunkName: \"panelSave\" */ './save'));\nconst PanelLayout = React.lazy(() => import(/* webpackChunkName: \"panelLayout\" */ './layout'));\nconst PanelDesign = React.lazy(() => import(/* webpackChunkName: \"panelDesign\" */ './design'));\nconst PanelStations = React.lazy(() => import(/* webpackChunkName: \"panelStations\" */ './stations'));\nconst PanelInfo = React.lazy(() => import(/* webpackChunkName: \"panelInfo\" */ './panel-info'));\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        typography: {\n            background: theme.palette.background.default,\n        },\n        tab: {\n            padding: '6px 24px',\n            height: 48,\n            minWidth: 'calc(100% / 5)',\n            '& .MuiTab-wrapper': {\n                flexDirection: 'row',\n            },\n            '&.MuiTab-labelIcon': {\n                minHeight: 'unset',\n                '& .MuiTab-wrapper': {\n                    '& > *:first-child': {\n                        marginBottom: 0,\n                    },\n                    '& > *:not(first-child)': {\n                        paddingLeft: 8,\n                    },\n                },\n            },\n        },\n        box: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n    })\n);\n\ninterface Props {\n    param: RMGParam;\n    paramUpdate: (key: string, data: any) => void;\n    tpo: string[];\n}\n\nexport default function PanelTab(props: Props) {\n    const { t, i18n } = useTranslation();\n\n    const classes = useStyles();\n\n    const [value, setValue] = React.useState(0);\n\n    const panel = (index: number) => {\n        switch (index) {\n            case 0:\n                return <PanelSave />;\n            case 1:\n                return <PanelLayout />;\n            case 2:\n                return <PanelDesign />;\n            case 3:\n                return (\n                    <PanelStations\n                        theme={props.param.theme}\n                        stnList={props.param.stn_list}\n                        currentId={props.param.current_stn_idx}\n                        paramUpdate={props.paramUpdate}\n                        tpo={props.tpo}\n                    />\n                );\n            case 4:\n                return <PanelInfo />;\n            default:\n                return <PanelSave />;\n        }\n    };\n\n    const tabNav = React.useMemo(\n        () => (\n            <Typography className={classes.typography} component=\"div\">\n                <Tabs\n                    value={value}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(_, val) => setValue(val)}\n                    variant=\"scrollable\"\n                    scrollButtons=\"off\"\n                >\n                    {[\n                        ['file', 'insert_drive_file'],\n                        ['layout', 'panorama'],\n                        ['design', 'brush'],\n                        ['stations', 'directions_transit'],\n                        ['info', 'info'],\n                    ].map((val, i) => (\n                        <Tab\n                            label={<span>{t('tab.' + val[0])}</span>}\n                            icon={<Icon>{val[1]}</Icon>}\n                            key={i}\n                            className={classes.tab}\n                        />\n                    ))}\n                    />\n                </Tabs>\n            </Typography>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [value, i18n.language, classes.tab]\n    );\n\n    return (\n        <>\n            {tabNav}\n            <Typography className={classes.typography} component=\"div\" role=\"tabpanel\" style={{ overflow: 'auto' }}>\n                <Box p={3} className={classes.box}>\n                    <React.Suspense fallback={<CircularProgress />}>{panel(value)}</React.Suspense>\n                </Box>\n            </Typography>\n        </>\n    );\n}\n","import * as React from 'react';\nimport { CircularProgress } from '@material-ui/core';\n\nimport PanelTabs from './panels';\n\ninterface Props {\n    param: RMGParam;\n    paramUpdate: (key: string, data: any) => void;\n    tpo: string[];\n}\n\nexport default (props: Props) => {\n    return (\n        <React.Suspense fallback={<CircularProgress />}>\n            <PanelTabs {...props} />\n        </React.Suspense>\n    );\n};\n","import React, { useState, useMemo, useEffect, useReducer } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppAppBar from './app-appbar';\nimport SVGs from './svgs';\nimport Panels from './panels';\nimport { getBranches, useTpo, getRoutes } from './methods';\nimport { CanvasContext, ParamContext, paramReducer } from './context';\nimport { createMuiTheme, ThemeProvider, useMediaQuery, LinearProgress } from '@material-ui/core';\n// import { useTranslation } from 'react-i18next';\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: '#bb86fc',\n        },\n        secondary: {\n            main: '#018786',\n        },\n        error: {\n            main: '#cf6679',\n        },\n    },\n    // palette: {\n    //     type: 'dark',\n    //     primary: {\n    //         main: '#8ab4f8',\n    //     },\n    // },\n    overrides: {\n        MuiDialog: {\n            paper: {\n                minWidth: 280,\n            },\n        },\n    },\n});\n\nconst lightTheme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#bb86fc',\n            main: '#6200ee',\n        },\n        secondary: {\n            main: '#018786',\n        },\n        error: {\n            main: '#b00020',\n        },\n    },\n    // palette: {\n    //     primary: {\n    //         main: '#1a73e8',\n    //     },\n    //     text: {\n    //         primary: '#202124',\n    //         secondary: '#5f6368',\n    //     },\n    // },\n    overrides: {\n        MuiDialog: {\n            paper: {\n                minWidth: 280,\n            },\n        },\n    },\n});\n\nexport default function App(props: { canvas: ProvidedCanvas[] }) {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const theme = prefersDarkMode ? darkTheme : lightTheme;\n\n    const [canvasToShown, setCanvasToShown] = useState<'all' | ProvidedCanvas>(\n        props.canvas.includes(localStorage.rmgCanvas) ? localStorage.rmgCanvas : 'all'\n    );\n    useEffect(() => localStorage.setItem('rmgCanvas', canvasToShown), [canvasToShown]);\n    const [canvasScale, setCanvasScale] = useState(\n        Number(localStorage.rmgScale) >= 0.1 ? Number(localStorage.rmgScale) : 1\n    );\n    useEffect(() => localStorage.setItem('rmgScale', canvasScale.toFixed(1)), [canvasScale]);\n\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <ThemeProvider theme={theme}>\n                <CanvasContext.Provider\n                    value={{\n                        rmgStyle: window.location.pathname.split('/')[2] as ProvidedStyles,\n                        canvasAvailable: props.canvas,\n                        canvasToShown,\n                        setCanvasToShown,\n                        canvasScale,\n                        setCanvasScale,\n                    }}\n                >\n                    <React.Suspense fallback={<LinearProgress />}>\n                        <AppAppBar />\n                    </React.Suspense>\n                    <AppBody />\n                </CanvasContext.Provider>\n            </ThemeProvider>\n        </BrowserRouter>\n    );\n}\n\nconst AppBody = () => {\n    const [param, dispatch] = useReducer(paramReducer, JSON.parse(localStorage.rmgParam) as RMGParam);\n    const paramString = JSON.stringify(param);\n    useEffect(() => localStorage.setItem('rmgParam', paramString), [paramString]);\n\n    const deps = Object.keys(param.stn_list).reduce(\n        (acc, cur) =>\n            acc +\n            cur +\n            ((...k: (keyof StationInfo)[]) => (o: StationInfo) => k.reduce((a, c) => a + JSON.stringify(o[c]), ''))(\n                'parents',\n                'children',\n                'branch'\n            )(param.stn_list[cur]),\n        ''\n    );\n\n    const branches = useMemo(\n        () => getBranches(param.stn_list),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [deps]\n    );\n    const routes = useMemo(\n        () => getRoutes(param.stn_list),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [deps]\n    );\n    const tpo = useTpo(branches);\n\n    const handleUpdate = (key: string, data: any) => dispatch({ type: 'ANY', key, data });\n\n    return (\n        <>\n            <ParamContext.Provider\n                value={{\n                    param,\n                    dispatch,\n                    branches,\n                    routes,\n                    deps,\n                }}\n            >\n                <SVGs />\n                <div style={{ flex: 1, overflow: 'auto', display: 'flex', flexDirection: 'column' }}>\n                    <Panels param={param} paramUpdate={handleUpdate} tpo={tpo} />\n                </div>\n            </ParamContext.Provider>\n            <canvas style={{ display: 'none' }} />\n        </>\n    );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './index.css';\nimport './i18n';\nimport App from './App';\nimport { updateParam } from './utils';\nimport * as serviceWorker from './serviceWorker';\n\ndeclare global {\n    interface Window {\n        urlParams: URLSearchParams;\n        gtag: any;\n    }\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n/**\n * @param style Style selected\n * @returns An ordered array of the provided canvases' id.\n */\nconst canvasAvailable = ((style): ProvidedCanvas[] => {\n    switch (style) {\n        case 'mtr':\n            return ['destination', 'railmap'];\n        case 'gzmtr':\n            return ['runin', 'railmap'];\n        case 'shmetro':\n            return ['destination', 'runin', 'railmap'];\n        default:\n            return ['destination', 'railmap'];\n    }\n})(window.location.pathname.split('/')[2]);\n\n// load empty stylesheet elements\ndocument.head.append(\n    ...['share', 'destination', 'runin', 'railmap'].map(tag => {\n        let link = document.createElement('link');\n        link.rel = 'stylesheet';\n        link.id = 'css_' + tag;\n        return link;\n    })\n);\n\nconst renderApp = () => {\n    ReactDOM.render(\n        // <React.Suspense fallback=\"loading\">\n        <App canvas={canvasAvailable} />,\n        // </React.Suspense>,\n        document.querySelectorAll('div#root')[0]\n    );\n};\n\nif (localStorage.rmgParam) {\n    try {\n        updateParam();\n    } catch (err) {\n        alert(err + 'Something error! Please refresh to start from a new canvas. ');\n        console.error(err);\n        localStorage.removeItem('rmgParam');\n    }\n    renderApp();\n} else {\n    import('./panels/save/template-diag/templates/basic/blank')\n        .then(module => {\n            localStorage.setItem('rmgParam', JSON.stringify(module.default));\n            updateParam();\n        })\n        .then(() => renderApp());\n}\n"],"sourceRoot":""}