{"version":3,"sources":["panels/stations/utils.ts","panels/stations/add-diag.tsx","panels/stations/edit-diag/dialog.tsx","panels/stations/edit-diag/index.ts","panels/stations/chip-set.tsx","panels/stations/delete-diags.tsx","panels/stations/auto-num-diag.tsx","panels/stations/fabs.tsx","panels/stations/panel.tsx","panels/stations/index.ts"],"names":["getRandomId","Math","floor","random","pow","toString","padStart","getNameFromId","stnId","numsZH","split","numsEN","map","char","parseInt","join","StationAddDialog","React","memo","props","t","useTranslation","rmgStyle","useContext","CanvasContext","tpo","ParamContext","allLocs","centre","upper","lower","newupper","newlower","useState","prep","setPrep","pivot","setPivot","Object","keys","loc","setLoc","Array","fill","locOK","setLocOK","end","setEnd","endList","setEndList","newLocs","useMemo","stnList","length","y","getYShareMTR","state","res","parents","unshift","pop","children","push","shift","newBranchPossibleEnd","newStnPossibleLoc","useEffect","console","log","p","Boolean","indexOf","handleClick","action","onClose","newId","includes","newInfo","name","num","services","branch","left","right","transfer","info","type","tick_direc","paid_area","osi_names","facility","newStnList","JSON","parse","stringify","linestart","slice","forEach","par","child","parChildLen","lineend","addStation","paramUpdate","open","dividers","select","style","width","variant","label","onChange","e","target","value","key","formatStnName","idx","disabled","display","onClick","color","autoFocus","prevProps","nextProps","getDeps","reduce","acc","cur","k","o","a","c","NameTab","lazy","InterchangeTab","BranchTab","MoreTab","useStyles","makeStyles","theme","createStyles","tab","padding","height","minWidth","flexDirection","minHeight","marginBottom","paddingLeft","Dialog","param","dispatch","stnInfo","stn_list","tabIndex","setTabIndex","classes","useTheme","fullScreen","useMediaQuery","breakpoints","down","tabNav","indicatorColor","textColor","_","val","scrollButtons","i","icon","className","interchangeUpdate","transInfo","updatedValue","inf","values","concat","component","role","Suspense","fallback","stnTrans","onUpdate","Set","field","root","backgroundColor","palette","background","paper","borderRadius","boxShadow","shadows","rootSize","margin","rootSizeTablet","rootSizeMobile","stnChipText","textAlign","stnChipTextZH","fontSize","fontWeight","lineHeight","stnChipTextEN","whiteSpace","overflow","addChipLabel","stnChipLabel","StationChipSet","isTablet","isMobile","replace","onSelection","StationDeleteDialog","i18nKey","StationDeleteErrorDialog","AutoNumDialog","branches","branch0","fab","position","spacing","bottom","StationFabs","fabEl","setFabEl","handleAction","onAction","title","aria-label","anchorEl","primary","PanelStations","stationSelected","setStationSelected","isSnackBarOpen","setIsSnackBarOpen","isAddDialogOpen","setIsAddDialogOpen","isEditDialogOpen","setIsEditDialogOpen","isDeleteDialogOpen","setIsDeleteDialogOpen","isDeleteErrDialogOpen","setIsDeleteErrDialogOpen","isAutoNumDialogOpen","setIsAutoNumDialogOpen","snackBarClose","addStationClick","r","autoHideDuration","message","Fragment","size","reverse","tmpArr","id","reverseStations","index","servicesSet","selected","delete","chipId","add","isLastMainBranchStn","parId","childId","childIdxOfPar","parIdxOfChild","splice","removeStation","currentId","newCurrentId","filter","Panel"],"mappings":"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","file":"static/js/panelStations.1c5bba16.chunk.js","sourcesContent":["import { getYShareMTR } from '../../methods';\n\nexport const addStation = (\n    prep: 'before' | 'after',\n    stnId: string,\n    loc: 'centre' | 'upper' | 'lower' | 'newupper' | 'newlower',\n    end: string,\n    stnList: { [stnId: string]: StationInfo }\n) => {\n    // get new id\n    let newId = getRandomId();\n    while (Object.keys(stnList).includes(newId)) {\n        newId = getRandomId();\n    }\n    let newInfo: StationInfo = {\n        name: getNameFromId(newId),\n        num: '00',\n        services: ['local'],\n        parents: [],\n        children: [],\n        branch: {\n            left: [],\n            right: [],\n        },\n        transfer: {\n            info: [[]],\n            type: 'none',\n            tick_direc: 'r',\n            paid_area: true,\n            osi_names: [],\n        },\n        facility: '',\n    };\n\n    let newStnList = JSON.parse(JSON.stringify(stnList));\n\n    if (prep === 'before') {\n        if (loc === 'centre') {\n            newInfo.parents = stnList[stnId].parents;\n            if (stnList[stnId].parents.length === 0 && getYShareMTR(stnId, stnList) !== 0) {\n                // todo: is this case really exist?\n                newInfo.children = stnList.linestart.children;\n            } else if (getYShareMTR(stnId, stnList) !== 0) {\n                // pivot on branch\n                newInfo.children = stnList[stnList[stnId].parents[0]].children.slice();\n                newInfo.branch.right = stnList[newInfo.parents[0]].branch.right;\n                newStnList[newInfo.parents[0]].branch.right = [];\n            } else {\n                // pivot on main\n                newInfo.children = [stnId];\n                newInfo.branch.left = stnList[stnId].branch.left;\n                newStnList[stnId].branch.left = [];\n            }\n            newInfo.parents.forEach(par => {\n                newStnList[par].children = [newId];\n            });\n            newInfo.children.forEach(child => {\n                newStnList[child].parents = [newId];\n            });\n        } else if (loc === 'upper') {\n            if (stnList[stnId].parents.length === 2) {\n                if (stnList[stnId].branch.left[1] === stnList[stnId].parents[0]) {\n                    newStnList[stnId].branch.left[1] = newId;\n                }\n\n                newInfo.parents = stnList[stnId].parents.slice(0, 1);\n                newInfo.children = [stnId];\n                newInfo.parents.forEach(par => {\n                    newStnList[par].children = [newId];\n                });\n                newStnList[stnId].parents[0] = newId;\n            } else {\n                // already on branch\n                newInfo.parents = stnList[stnId].parents;\n                newInfo.children = [stnId];\n                newInfo.parents.forEach(par => {\n                    newStnList[par].children[0] = newId;\n\n                    if (stnList[par].branch.right[1] === stnId) {\n                        newStnList[par].branch.right[1] = newId;\n                    }\n                });\n                newInfo.children.forEach(child => {\n                    newStnList[child].parents = [newId];\n                });\n            }\n        } else if (loc === 'lower') {\n            if (stnList[stnId].parents.length === 2) {\n                if (stnList[stnId].branch.left[1] === stnList[stnId].parents[1]) {\n                    newStnList[stnId].branch.left[1] = newId;\n                }\n\n                newInfo.parents = stnList[stnId].parents.slice(1);\n                newInfo.children = [stnId];\n                newInfo.parents.forEach(par => {\n                    newStnList[par].children = [newId];\n                });\n                newStnList[stnId].parents[1] = newId;\n            } else {\n                // already on branch\n                newInfo.parents = stnList[stnId].parents;\n                newInfo.children = [stnId];\n                newInfo.parents.forEach(par => {\n                    let parChildLen = stnList[par].children.length;\n                    newStnList[par].children[parChildLen - 1] = newId;\n\n                    if (stnList[par].branch.right[1] === stnId) {\n                        newStnList[par].branch.right[1] = newId;\n                    }\n                });\n                newInfo.children.forEach(child => {\n                    newStnList[child].parents = [newId];\n                });\n            }\n        } else {\n            newStnList[stnId].branch.left = ['through', newId];\n            newStnList[end].branch.right = ['through', newId];\n            newInfo.parents = [end];\n            newInfo.children = [stnId];\n\n            if (loc === 'newupper') {\n                newStnList[end].children.unshift(newId);\n                newStnList[stnId].parents.unshift(newId);\n            } else {\n                newStnList[end].children.push(newId);\n                newStnList[stnId].parents.push(newId);\n            }\n        }\n    } else {\n        if (loc === 'centre') {\n            newInfo.children = stnList[stnId].children;\n            if (stnList[stnId].children.length === 0 && getYShareMTR(stnId, stnList) !== 0) {\n                newInfo.parents = stnList.lineend.parents;\n            } else if (getYShareMTR(stnId, stnList) !== 0) {\n                // pivot on branch\n                newInfo.parents = stnList[stnList[stnId].children[0]].parents;\n                newInfo.branch.left = stnList[newInfo.children[0]].branch.left;\n                newStnList[newInfo.children[0]].branch.left = [];\n            } else {\n                // pivot on main\n                newInfo.parents = [stnId];\n                newInfo.branch.right = stnList[stnId].branch.right;\n                newStnList[stnId].branch.right = [];\n            }\n            newInfo.children.forEach(child => {\n                newStnList[child].parents = [newId];\n            });\n            newInfo.parents.forEach(par => {\n                newStnList[par].children = [newId];\n            });\n        } else if (loc === 'upper') {\n            if (stnList[stnId].children.length === 2) {\n                if (stnList[stnId].branch.right[1] === stnList[stnId].children[0]) {\n                    newStnList[stnId].branch.right[1] = newId;\n                }\n\n                newInfo.children = stnList[stnId].children.slice(0, 1);\n                newInfo.parents = [stnId];\n                newInfo.children.forEach(child => {\n                    newStnList[child].parents = [newId];\n                });\n                newStnList[stnId].children[0] = newId;\n            } else {\n                // already on branch\n                newInfo.children = stnList[stnId].children;\n                newInfo.parents = [stnId];\n                newInfo.children.forEach(child => {\n                    newStnList[child].parents[0] = newId;\n\n                    if (stnList[child].branch.left[1] === stnId) {\n                        newStnList[child].branch.left[1] = newId;\n                    }\n                });\n                newInfo.parents.forEach(par => {\n                    newStnList[par].children = [newId];\n                });\n            }\n        } else if (loc === 'lower') {\n            if (stnList[stnId].children.length === 2) {\n                if (stnList[stnId].branch.right[1] === stnList[stnId].children[1]) {\n                    newStnList[stnId].branch.right[1] = newId;\n                }\n\n                newInfo.children = stnList[stnId].children.slice(1);\n                newInfo.parents = [stnId];\n                newInfo.children.forEach(child => {\n                    newStnList[child].parents = [newId];\n                });\n                newStnList[stnId].children[1] = newId;\n            } else {\n                // already on branch\n                newInfo.children = stnList[stnId].children;\n                newInfo.parents = [stnId];\n                newInfo.children.forEach(child => {\n                    newStnList[child].parents[stnList[child].parents.length === 1 ? 0 : 1] = newId;\n\n                    if (stnList[child].branch.left[1] === stnId) {\n                        newStnList[child].branch.left[1] = newId;\n                    }\n                });\n                newInfo.parents.forEach(par => {\n                    newStnList[par].children = [newId];\n                });\n            }\n        } else {\n            newStnList[stnId].branch.right = ['through', newId];\n            newStnList[end].branch.left = ['through', newId];\n\n            newInfo.children = [end];\n            newInfo.parents = [stnId];\n\n            if (loc === 'newupper') {\n                newStnList[end].parents.unshift(newId);\n                newStnList[stnId].children.unshift(newId);\n            } else {\n                newStnList[end].parents.push(newId);\n                newStnList[stnId].children.push(newId);\n            }\n        }\n    }\n\n    return [\n        newId,\n        {\n            ...newStnList,\n            [newId]: newInfo,\n        },\n    ];\n};\n\nconst getRandomId = () =>\n    Math.floor(Math.random() * Math.pow(36, 4))\n        .toString(36)\n        .padStart(4, '0');\n\nfunction getNameFromId(stnId: string): Name {\n    let numsZH = '癸甲乙丙丁戊己庚辛壬日月金木水火土竹戈十大中一弓人心手口尸廿山女田難卜重'.split('');\n    let numsEN = 'Zero One Two Three Four Five Six Seven Eight Nine Alfa Bravo Charlie Delta Echo Foxtrot Golf Hotel India Juliett Kilo Lima Mike November Oscar Papa Quebec Romeo Sierra Tango Uniform Victor Whiskey X-ray Yankee Zulu'.split(\n        ' '\n    );\n    return [\n        stnId\n            .split('')\n            .map(char => numsZH[parseInt(char, 36)])\n            .join(''),\n        stnId\n            .split('')\n            .map(char => numsEN[parseInt(char, 36)])\n            .join(' '),\n    ];\n}\n\n/**\n * Remove a station and update neighbour's parameters at the same time.\n * (All descriptions are based on MTR style. )\n */\nexport const removeStation = (stnId: string, stnList: StationDict) => {\n    let newStnList = JSON.parse(JSON.stringify(stnList)) as StationDict;\n    let parents = newStnList[stnId].parents;\n    let children = newStnList[stnId].children;\n\n    let isLastMainBranchStn = true;\n    for (let id in newStnList) {\n        if ([stnId, 'linestart', 'lineend'].includes(id)) continue;\n        if (getYShareMTR(id, newStnList) === 0) {\n            isLastMainBranchStn = false;\n            break;\n        }\n    }\n\n    if (parents.length === 2 && children.length === 2) {\n        // Todo: rewrite, join two branches rather than reject\n        return false;\n    } else if (isLastMainBranchStn) {\n        // Last main line station\n        return false;\n    } else if (Object.keys(newStnList).length === 4) {\n        // Last two stations\n        return false;\n    } else if (parents.length === 2 || children.length === 2) {\n        console.log('this case');\n        parents.forEach(parId => {\n            newStnList[parId].children = children;\n        });\n        children.forEach(childId => {\n            newStnList[childId].parents = parents;\n        });\n        if (parents.length === 1) {\n            newStnList[parents[0]].branch.right = newStnList[stnId].branch.right;\n        }\n        if (children.length === 1) {\n            newStnList[children[0]].branch.left = newStnList[stnId].branch.left;\n        }\n    } else if (newStnList[parents[0]].children.length === 2 && newStnList[children[0]].parents.length === 2) {\n        // 1 par 1 child, last station on upper/lower branch\n        // branch disappear\n        var childIdxOfPar = newStnList[parents[0]].children.indexOf(stnId);\n        var parIdxOfChild = newStnList[children[0]].parents.indexOf(stnId);\n        newStnList[parents[0]].children.splice(childIdxOfPar, 1);\n        newStnList[children[0]].parents.splice(parIdxOfChild, 1);\n\n        newStnList[parents[0]].branch.right = [];\n        newStnList[children[0]].branch.left = [];\n    } else {\n        // 1 par 1 child\n        parents.forEach(parId => {\n            var idx = newStnList[parId].children.indexOf(stnId);\n            if (children.length) {\n                newStnList[parId].children[idx] = children[0];\n            } else {\n                // Right dest\n                newStnList[parId].children.splice(idx, 1);\n            }\n\n            if (newStnList[parId].branch.right[1] === stnId) {\n                newStnList[parId].branch.right[1] = children[0];\n            }\n        });\n        children.forEach(childId => {\n            var idx = newStnList[childId].parents.indexOf(stnId);\n            if (parents.length) {\n                newStnList[childId].parents[idx] = parents[0];\n            } else {\n                // Left dest\n                newStnList[childId].parents.splice(idx, 1);\n            }\n\n            if (newStnList[childId].branch.left[1] === stnId) {\n                newStnList[childId].branch.left[1] = parents[0];\n            }\n        });\n    }\n\n    delete newStnList[stnId];\n\n    return newStnList;\n};\n\nexport const reverseStations = (stnList: { [stnId: string]: StationInfo }) => {\n    let newStnList = JSON.parse(JSON.stringify(stnList));\n    Object.keys(stnList).forEach(stnId => {\n        let stnInfo = { ...stnList[stnId] };\n        if (stnId === 'linestart') {\n            newStnList.lineend.parents = stnInfo.children.reverse();\n            newStnList.lineend.branch = {\n                left: stnInfo.branch.right,\n                right: [],\n            };\n        } else if (stnId === 'lineend') {\n            newStnList.linestart.children = stnInfo.parents.reverse();\n            newStnList.linestart.branch = {\n                left: [],\n                right: stnInfo.branch.left,\n            };\n        } else {\n            var tmpArr = stnInfo.children.reverse().map(id => {\n                switch (id) {\n                    case 'linestart':\n                        return 'lineend';\n                    case 'lineend':\n                        return 'linestart';\n                    default:\n                        return id;\n                }\n            });\n            newStnList[stnId].children = stnInfo.parents.reverse().map(id => {\n                switch (id) {\n                    case 'linestart':\n                        return 'lineend';\n                    case 'lineend':\n                        return 'linestart';\n                    default:\n                        return id;\n                }\n            });\n            newStnList[stnId].parents = tmpArr;\n            newStnList[stnId].branch.left = stnInfo.branch.right;\n            newStnList[stnId].branch.right = stnInfo.branch.left;\n        }\n    });\n    return newStnList;\n};\n","import React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    List,\n    ListItem,\n    ListItemIcon,\n    Icon,\n    TextField,\n    MenuItem,\n    DialogActions,\n    Button,\n} from '@material-ui/core';\nimport { formatStnName } from '../../utils';\nimport { getYShareMTR } from '../../methods';\nimport { addStation } from './utils';\nimport { CanvasContext, ParamContext } from '../../context';\n\nconst newBranchPossibleEnd = (prep: 'before' | 'after', pivot: string, stnList: StationDict) => {\n    let res: string[] = [];\n    if (prep === 'before') {\n        while (stnList[pivot].parents.length === 1) {\n            pivot = stnList[pivot].parents[0];\n            res.unshift(pivot);\n        }\n        res.pop();\n    } else {\n        while (stnList[pivot].children.length === 1) {\n            pivot = stnList[pivot].children[0];\n            res.push(pivot);\n        }\n        res.shift();\n    }\n    return res;\n};\n\nconst newStnPossibleLoc = (\n    prep: 'before' | 'after',\n    pivot: string,\n    stnList: { [stnId: string]: StationInfo }\n): [number, number, number, string[], string[]] => {\n    let deg = stnList[pivot] ? stnList[pivot][prep === 'before' ? 'parents' : 'children'].length : 0;\n    switch (deg) {\n        case 2:\n            // 1 -> 2\n            return [1, 1, 1, [], []];\n        case 1:\n            let y = getYShareMTR(pivot, stnList);\n            if (y === 0) {\n                // 1 -> 1\n                let state: string[] | 0 = newBranchPossibleEnd(prep, pivot, stnList);\n                state = state.length ? state : [];\n                return [1, 0, 0, state, state];\n                // [1,0,0,1,1];\n            } else if (y < 0) {\n                if (prep === 'before') {\n                    return [stnList[stnList[pivot].parents[0]].children.length - 1, 0, 1, [], []];\n                } else {\n                    return [stnList[stnList[pivot].children[0]].parents.length - 1, 0, 1, [], []];\n                }\n            } else {\n                if (prep === 'before') {\n                    return [stnList[stnList[pivot].parents[0]].children.length - 1, 1, 0, [], []];\n                } else {\n                    return [stnList[stnList[pivot].children[0]].parents.length - 1, 1, 0, [], []];\n                }\n            }\n    }\n    return [0, 0, 0, [], []];\n};\n\ninterface StationAddDialogProps {\n    open: boolean;\n    stnList: {\n        [stnId: string]: StationInfo;\n    };\n    onClose: (action: 'close' | string) => void;\n    paramUpdate: (key: string, data: any) => void;\n}\n\nconst StationAddDialog = React.memo(\n    (props: StationAddDialogProps) => {\n        const { t } = useTranslation();\n        const { rmgStyle } = useContext(CanvasContext);\n        const { tpo } = useContext(ParamContext);\n\n        const allLocs = {\n            centre: t('stations.add.centre'),\n            upper: t('stations.add.upper'),\n            lower: t('stations.add.lower'),\n            newupper: t('stations.add.newUpper'),\n            newlower: t('stations.add.newLower'),\n        };\n\n        const [prep, setPrep] = React.useState('before' as 'before' | 'after');\n        const [pivot, setPivot] = React.useState(tpo[0]);\n        const [loc, setLoc] = React.useState(Object.keys(allLocs)[0]);\n        const [locOK, setLocOK] = React.useState(Array(5).fill(true) as boolean[]);\n\n        const [end, setEnd] = React.useState('');\n        const [endList, setEndList] = React.useState([] as string[]);\n\n        // Hook for updating loc list and end lists when pivot changed\n        const newLocs = React.useMemo(() => newStnPossibleLoc(prep, pivot, props.stnList), [\n            prep,\n            pivot,\n            props.stnList,\n        ]);\n        React.useEffect(\n            () => {\n                console.log('new');\n                setLocOK(newLocs.map(p => (typeof p === 'number' ? Boolean(p) : Boolean(p.length))));\n                setEndList(newLocs[3]);\n            },\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            [newLocs.toString()]\n        );\n\n        // Hook for updating loc selection (first available) when locOK list changed\n        React.useEffect(\n            () => setLoc(Object.keys(allLocs)[locOK.indexOf(true)]),\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            [locOK]\n        );\n\n        // Hook for updating end selection when end list changed\n        React.useEffect(() => {\n            if (endList.length === 0) return;\n            setEnd(endList[0]);\n        }, [endList]);\n\n        // Hook for setting new pivot in case of previous one being deleted\n        React.useEffect(\n            () => {\n                if (!(pivot in props.stnList)) setPivot(tpo[0]);\n            },\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            [Object.keys(props.stnList).toString()]\n        );\n\n        const handleClick = (action: string) => {\n            if (action === 'close') {\n                props.onClose('close');\n            } else {\n                let [newId, res] = addStation(\n                    prep as 'before' | 'after',\n                    pivot,\n                    loc as 'centre' | 'upper' | 'lower' | 'newupper' | 'newlower',\n                    end as string,\n                    props.stnList\n                );\n                // let [newId, newInfo] = window.myLine.addStn(action[0] as 'before' | 'after', action[1], action[2], action[3]);\n\n                // this.props.paramUpdate('stn_list', getParams().stn_list);\n                props.paramUpdate('stn_list', res);\n\n                props.onClose(newId);\n            }\n        };\n\n        return (\n            <Dialog open={props.open} onClose={() => handleClick('close')}>\n                <DialogTitle>{t('stations.add.title')}</DialogTitle>\n                <DialogContent dividers>\n                    <List>\n                        <ListItem>\n                            <ListItemIcon>\n                                <Icon>control_camera</Icon>\n                            </ListItemIcon>\n                            <TextField\n                                select\n                                style={{ width: '100%' }}\n                                variant=\"outlined\"\n                                label={t('stations.add.prep')}\n                                onChange={e => setPrep(e.target.value as 'before' | 'after')}\n                                value={prep}\n                            >\n                                <MenuItem key=\"before\" value=\"before\">\n                                    {t('stations.add.before')}\n                                </MenuItem>\n                                <MenuItem key=\"after\" value=\"after\">\n                                    {t('stations.add.after')}\n                                </MenuItem>\n                            </TextField>\n                        </ListItem>\n                        <ListItem>\n                            <ListItemIcon>\n                                <Icon>near_me</Icon>\n                            </ListItemIcon>\n                            <TextField\n                                select\n                                style={{ width: '100%' }}\n                                variant=\"outlined\"\n                                label={t('stations.add.pivot')}\n                                onChange={e => setPivot(e.target.value)}\n                                value={pivot}\n                            >\n                                {tpo.map(stnId => (\n                                    <MenuItem key={stnId} value={stnId}>\n                                        {formatStnName(props.stnList[stnId], rmgStyle)}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </ListItem>\n                        <ListItem>\n                            <ListItemIcon>\n                                <Icon>share</Icon>\n                            </ListItemIcon>\n                            <TextField\n                                select\n                                style={{ width: '100%' }}\n                                variant=\"outlined\"\n                                label={t('stations.add.loc')}\n                                onChange={e => setLoc(e.target.value)}\n                                value={loc}\n                            >\n                                {(Object.keys(allLocs) as (keyof typeof allLocs)[]).map((key, idx) => (\n                                    <MenuItem key={key} value={key} disabled={!locOK[idx]}>\n                                        {allLocs[key]}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </ListItem>\n                        <ListItem style={{ display: ['newupper', 'newlower'].includes(loc) ? 'flex' : 'none' }}>\n                            <ListItemIcon>\n                                <Icon>undo</Icon>\n                            </ListItemIcon>\n                            <TextField\n                                select\n                                style={{ width: '100%' }}\n                                variant=\"outlined\"\n                                label={t('stations.add.end')}\n                                onChange={e => setEnd(e.target.value)}\n                                value={end}\n                            >\n                                {endList.map(stnId => (\n                                    <MenuItem key={stnId} value={stnId}>\n                                        {formatStnName(props.stnList[stnId], rmgStyle)}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </ListItem>\n                    </List>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => handleClick('close')} color=\"primary\">\n                        {t('dialog.cancel')}\n                    </Button>\n                    <Button onClick={() => handleClick('accept')} color=\"primary\" autoFocus>\n                        {t('dialog.ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    },\n    (prevProps, nextProps) => {\n        if (prevProps.open !== nextProps.open) {\n            return false;\n        } else {\n            const getDeps = (stnList: { [stnId: string]: StationInfo }) =>\n                Object.keys(stnList).reduce(\n                    (acc, cur) =>\n                        acc +\n                        cur +\n                        ((...k: (keyof StationInfo)[]) => (o: StationInfo) =>\n                            k.reduce((a, c) => a + JSON.stringify(o[c]), ''))(\n                            'parents',\n                            'children',\n                            'name',\n                            'num'\n                        )(stnList[cur]),\n                    ''\n                );\n\n            return getDeps(prevProps.stnList) === getDeps(nextProps.stnList);\n        }\n    }\n);\n\nexport default StationAddDialog;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    Tabs,\n    Tab,\n    Icon,\n    Typography,\n    CircularProgress,\n    DialogActions,\n    Button,\n    useTheme,\n    useMediaQuery,\n    makeStyles,\n    createStyles,\n} from '@material-ui/core';\nimport { ParamContext } from '../../../context';\n\nconst NameTab = React.lazy(() => import(/* webpackChunkName: \"panelStationsName\" */ './name-tab'));\nconst InterchangeTab = React.lazy(() => import(/* webpackChunkName: \"panelStationsInterchange\" */ './interchange-tab'));\nconst BranchTab = React.lazy(() => import(/* webpackChunkName: \"panelStationsBranch\" */ './branch-tab'));\nconst MoreTab = React.lazy(() => import(/* webpackChunkName: \"panelStationsMore\" */ './more-tab'));\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        tab: {\n            padding: '6px 24px',\n            height: 48,\n            minWidth: 'calc(100% / 4)',\n            '& .MuiTab-wrapper': {\n                flexDirection: 'row',\n            },\n            '&.MuiTab-labelIcon': {\n                minHeight: 'unset',\n                '& .MuiTab-wrapper': {\n                    '& > *:first-child': {\n                        marginBottom: 0,\n                    },\n                    '& > *:not(first-child)': {\n                        paddingLeft: 8,\n                    },\n                },\n            },\n        },\n    })\n);\n\ninterface StationEditDialogProps {\n    onClose: () => void;\n    onUpdate: (value: any, field: string, index?: number) => void;\n    open: boolean;\n    stnId: string;\n}\n\nexport default function StationEditDialog(props: StationEditDialogProps) {\n    const { t } = useTranslation();\n\n    const { param, dispatch } = React.useContext(ParamContext);\n    const stnList = param.stn_list;\n    const stnInfo = stnList[props.stnId];\n\n    const [tabIndex, setTabIndex] = React.useState(0);\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const tabNav = React.useMemo(\n        () => (\n            <Tabs\n                value={tabIndex}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                onChange={(_, val) => setTabIndex(val)}\n                variant=\"scrollable\"\n                scrollButtons=\"off\"\n            >\n                {[\n                    ['name', 'title'],\n                    ['interchange', 'transfer_within_a_station'],\n                    ['branch', 'share'],\n                    ['more', 'more_horiz'],\n                ].map((val, i) => (\n                    <Tab\n                        label={<span>{t('stations.edit.tab.' + val[0])}</span>}\n                        icon={<Icon>{val[1]}</Icon>}\n                        key={i}\n                        className={classes.tab}\n                    />\n                ))}\n            </Tabs>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [tabIndex, classes.tab]\n    );\n\n    const interchangeUpdate = (transInfo: StationTransfer) => {\n        let updatedValue = {\n            ...transInfo,\n            info: transInfo.info.map(inf =>\n                inf.map(i =>\n                    Object.values(i).length === 0\n                        ? ((param.theme.concat(['轉綫', 'Line']) as unknown) as InterchangeInfo)\n                        : i\n                )\n            ),\n        };\n\n        // window.myLine.updateStnTransfer2(props.stnId, updatedValue);\n        dispatch({\n            type: 'UPDATE_STATION_TRANSFER',\n            stnId: props.stnId,\n            transfer: updatedValue,\n        });\n    };\n\n    return (\n        <Dialog onClose={props.onClose} open={props.open} fullScreen={fullScreen}>\n            <DialogTitle>{t('stations.edit.title')}</DialogTitle>\n            <DialogContent dividers style={{ padding: '0 16px' }}>\n                {tabNav}\n                <Typography component=\"div\" role=\"tabpanel\">\n                    <React.Suspense fallback={<CircularProgress />}>\n                        {(idx => {\n                            switch (idx) {\n                                case 0:\n                                    return <NameTab stnId={props.stnId} />;\n                                case 1:\n                                    return (\n                                        <InterchangeTab\n                                            stnTrans={stnInfo.transfer}\n                                            onUpdate={interchangeUpdate}\n                                            stnId={props.stnId}\n                                        />\n                                    );\n                                case 2:\n                                    return <BranchTab stnId={props.stnId} />;\n                                case 3:\n                                    return (\n                                        <MoreTab\n                                            facility={stnInfo.facility}\n                                            services={new Set(stnInfo.services)}\n                                            onUpdate={(value, field) => props.onUpdate(value, field)}\n                                            stnId={props.stnId}\n                                        />\n                                    );\n                            }\n                        })(tabIndex)}\n                    </React.Suspense>\n                </Typography>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose} color=\"primary\" autoFocus>\n                    {t('dialog.done')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import Dialog from './dialog';\n\nexport default Dialog;","import React, { useContext } from 'react';\nimport { Chip, makeStyles, Avatar, createStyles, useMediaQuery } from '@material-ui/core';\nimport { CanvasContext, ParamContext } from '../../context';\n\nconst useStyles = makeStyles(theme => {\n    return createStyles({\n        root: {\n            backgroundColor: theme.palette.background.paper,\n            height: 55,\n            borderRadius: 8,\n            boxShadow: theme.shadows[1],\n        },\n        rootSize: {\n            margin: 8,\n            width: 'calc((100% - 96px) / 6)',\n        },\n        rootSizeTablet: {\n            margin: 6,\n            width: 'calc((100% - 48px) / 4)',\n        },\n        rootSizeMobile: {\n            margin: 6,\n            width: 'calc((100% - 24px) / 2)',\n        },\n        stnChipText: {\n            display: 'block',\n            textAlign: 'center',\n        },\n        stnChipTextZH: {\n            fontSize: 18,\n            fontWeight: 500,\n            lineHeight: '1.2rem',\n        },\n        stnChipTextEN: {\n            fontSize: '.75rem',\n            lineHeight: '.9rem',\n            whiteSpace: 'pre',\n            overflow: 'hidden',\n        },\n        addChipLabel: {\n            fontWeight: 500,\n            fontSize: '1rem',\n            lineHeight: '1.2rem',\n            textAlign: 'center',\n            width: '100%',\n        },\n        stnChipLabel: {\n            width: '100%',\n        },\n    });\n});\n\ninterface StationChipSetProps {\n    stnList: {\n        [stnId: string]: StationInfo;\n    };\n    onSelection: (stnId: string) => () => void;\n    addStationClick: () => void;\n}\n\nconst StationChipSet = React.memo(\n    (props: StationChipSetProps) => {\n        const { rmgStyle } = useContext(CanvasContext);\n        const { tpo } = useContext(ParamContext);\n\n        const isTablet = useMediaQuery('(max-width: 839px) and (min-width: 480px)');\n        const isMobile = useMediaQuery('(max-width: 480px)');\n        const classes = useStyles();\n\n        return (\n            <div>\n                {tpo.map((stnId, i) => {\n                    let label = (\n                        <span>\n                            <span className={`${classes.stnChipText} ${classes.stnChipTextZH}`}>\n                                {props.stnList[stnId]?.name[0] || ''}\n                            </span>\n                            <span className={`${classes.stnChipText} ${classes.stnChipTextEN}`}>\n                                {props.stnList[stnId]?.name[1].replace('\\\\', '\\r\\n') || ''}\n                            </span>\n                        </span>\n                    );\n                    return (\n                        <Chip\n                            key={stnId}\n                            icon={\n                                rmgStyle !== 'gzmtr' ? (\n                                    <></>\n                                ) : (\n                                    <Avatar style={{ backgroundColor: 'unset' }}>\n                                        {props.stnList[stnId]?.num || '00'}\n                                    </Avatar>\n                                )\n                            }\n                            label={label}\n                            onClick={props.onSelection(stnId)}\n                            classes={{ label: classes.stnChipLabel }}\n                            className={`${classes.root} ${\n                                isMobile ? classes.rootSizeMobile : isTablet ? classes.rootSizeTablet : classes.rootSize\n                            }`}\n                        />\n                    );\n                })}\n            </div>\n        );\n    },\n    (prevProps, nextProps) => {\n        const getDeps = (stnList: { [stnId: string]: StationInfo }) =>\n            Object.keys(stnList).reduce(\n                (acc, cur) =>\n                    acc +\n                    cur +\n                    ((...k: (keyof StationInfo)[]) => (o: StationInfo) =>\n                        k.reduce((a, c) => a + JSON.stringify(o[c]), ''))(\n                        'name',\n                        'num'\n                    )(stnList[cur]),\n                ''\n            );\n\n        return getDeps(prevProps.stnList) === getDeps(nextProps.stnList);\n    }\n);\n\nexport default StationChipSet;\n","import * as React from 'react';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core';\n\ninterface StationDeleteDialogProps {\n    open: boolean;\n    stnInfo: StationInfo;\n    onClose: (action: string) => void;\n}\n\nexport function StationDeleteDialog(props: StationDeleteDialogProps) {\n    const { t } = useTranslation();\n    return (\n        <Dialog open={props.open}>\n            <DialogTitle>{t('stations.remove.title')}</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    <Trans i18nKey=\"stations.remove.msg\">{{ name: props.stnInfo.name.join() }}</Trans>\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => props.onClose('close')} color=\"primary\" autoFocus>\n                    {t('dialog.cancel')}\n                </Button>\n                <Button onClick={() => props.onClose('accept')} color=\"primary\">\n                    {t('stations.remove.button')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\ninterface StationDeleteErrorDialogProps {\n    open: boolean;\n    onClose: () => void;\n}\n\nexport function StationDeleteErrorDialog(props: StationDeleteErrorDialogProps) {\n    const { t } = useTranslation();\n    return (\n        <Dialog open={props.open} onClose={props.onClose}>\n            <DialogTitle>{t('stations.remove.error.title')}</DialogTitle>\n            <DialogContent>\n                <DialogContentText>{t('stations.remove.error.msg')}</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose} color=\"primary\" autoFocus>\n                    {t('dialog.ok')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core';\nimport { ParamContext } from '../../context';\n\ninterface Props {\n    open: boolean;\n    onClose: () => void;\n}\n\nconst AutoNumDialog = (props: Props) => {\n    const { t } = useTranslation();\n\n    const { dispatch, branches } = React.useContext(ParamContext);\n\n    const handleClick = (action: 'ascend' | 'descend') => {\n        let branch0 = branches[0];\n        branch0.forEach((stnId, i) => {\n            let num: string;\n            if (action === 'ascend') {\n                num = i.toString().padStart(2, '0');\n            } else {\n                num = (branch0.length - 1 - i).toString().padStart(2, '0');\n            }\n            dispatch({ type: 'UPDATE_STATION_NUM', stnId, num });\n            // (window.myLine as RMGLineGZ).updateStnNum(stnId, num);\n        });\n        // props.paramUpdate('stn_list', getParams().stn_list);\n        props.onClose();\n    };\n\n    return React.useMemo(\n        () => (\n            <Dialog onClose={props.onClose} open={props.open}>\n                <DialogTitle>{t('design.autoNum.title')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{t('design.autoNum.msg')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.onClose} color=\"primary\" autoFocus>\n                        {t('dialog.cancel')}\n                    </Button>\n                    <Button onClick={() => handleClick('ascend')} color=\"primary\">\n                        {t('design.autoNum.ascend')}\n                    </Button>\n                    <Button onClick={() => handleClick('descend')} color=\"primary\">\n                        {t('design.autoNum.descend')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.open]\n    );\n};\n\nexport default AutoNumDialog;\n","import React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    Fab,\n    Tooltip,\n    Icon,\n    Menu,\n    MenuItem,\n    createStyles,\n    makeStyles,\n    ListItemText,\n    ListItemIcon,\n} from '@material-ui/core';\nimport { CanvasContext } from '../../context';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        fab: {\n            position: 'fixed',\n            right: theme.spacing(2),\n            bottom: theme.spacing(2),\n        },\n    })\n);\n\ninterface Props {\n    onAction: (action: string) => void;\n}\n\nconst StationFabs = React.memo(\n    (props: Props) => {\n        const { t } = useTranslation();\n        const { rmgStyle } = useContext(CanvasContext);\n        const classes = useStyles();\n        const [fabEl, setFabEl] = React.useState<null | HTMLElement>(null);\n\n        const handleAction = (action: string) => () => {\n            setFabEl(null);\n            props.onAction(action);\n        };\n\n        return (\n            <>\n                <Tooltip title={t('stations.fabs.tooltip')} aria-label=\"options\">\n                    <Fab color=\"primary\" className={classes.fab} onClick={e => setFabEl(e.target as HTMLElement)}>\n                        <Icon>more_vert</Icon>\n                    </Fab>\n                </Tooltip>\n\n                <Menu anchorEl={fabEl} open={Boolean(fabEl)} onClose={() => setFabEl(null)}>\n                    <MenuItem onClick={handleAction('add')}>\n                        <ListItemIcon>\n                            <Icon>add_box</Icon>\n                        </ListItemIcon>\n                        <ListItemText primary={t('stations.fabs.add')} />\n                    </MenuItem>\n                    <MenuItem onClick={handleAction('reverse')}>\n                        <ListItemIcon>\n                            <Icon>cached</Icon>\n                        </ListItemIcon>\n                        <ListItemText primary={t('stations.fabs.reverse')} />\n                    </MenuItem>\n                    {rmgStyle === 'gzmtr' && (\n                        <MenuItem onClick={handleAction('autonum')}>\n                            <ListItemIcon>\n                                <Icon>filter_1</Icon>\n                            </ListItemIcon>\n                            <ListItemText primary={t('design.autoNum.button')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    },\n    () => true\n);\n\nexport default StationFabs;\n","import React, { useState, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Snackbar, Button, IconButton, Icon } from '@material-ui/core';\n\nimport { formatStnName } from '../../utils';\n\nimport StationAddDialog from './add-diag';\nimport StationEditDialog from './edit-diag';\nimport StationChipSet from './chip-set';\nimport { StationDeleteDialog, StationDeleteErrorDialog } from './delete-diags';\nimport AutoNumDialog from './auto-num-diag';\nimport StationFabs from './fabs';\nimport { removeStation, reverseStations } from './utils';\nimport { CanvasContext } from '../../context';\n\ninterface PanelStationsProps {\n    theme: [string, string, string, '#000' | '#fff'];\n    stnList: { [stnId: string]: StationInfo };\n    paramUpdate: (key: string, data: any) => void;\n    currentId: string;\n}\n\nconst PanelStations = (props: PanelStationsProps) => {\n    const { t } = useTranslation();\n\n    const { rmgStyle } = useContext(CanvasContext);\n\n    const [stationSelected, setStationSelected] = useState('');\n    const [isSnackBarOpen, setIsSnackBarOpen] = useState(false);\n    const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);\n    const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n    const [isDeleteErrDialogOpen, setIsDeleteErrDialogOpen] = useState(false);\n    const [isAutoNumDialogOpen, setIsAutoNumDialogOpen] = useState(false);\n\n    const stnChipSetSelection = (stnId: string) => () => {\n        setStationSelected(stnId);\n        setIsSnackBarOpen(true);\n    };\n\n    const snackBarClose = (action: string) => {\n        if (action === 'clickaway') return;\n        setIsSnackBarOpen(false);\n        if (action === 'current') {\n            props.paramUpdate('current_stn_idx', stationSelected);\n        } else if (action === 'edit') {\n            setIsEditDialogOpen(true);\n        } else if (action === 'delete') {\n            setIsDeleteDialogOpen(true);\n        }\n    };\n\n    const stnAddDialogClose = (action: 'close' | string) => {\n        if (action === 'close') {\n            setIsAddDialogOpen(false);\n        } else {\n            setIsAddDialogOpen(false);\n            setStationSelected(action);\n            setIsEditDialogOpen(true);\n        }\n    };\n\n    const stnEditDialogUpdate = (value: any, field: string, index?: number) => {\n        let stnId = stationSelected;\n        if (field === 'facility') {\n            props.paramUpdate('stn_list', {\n                ...props.stnList,\n                [stnId]: {\n                    ...props.stnList[stnId],\n                    facility: value,\n                },\n            });\n        }\n        if (field === 'services') {\n            // window.myLine.updateStnServices(stnId, value);\n            let servicesSet = new Set(props.stnList[stnId].services);\n            if (value.selected === false) {\n                servicesSet.delete(value.chipId);\n            } else {\n                servicesSet.add(value.chipId);\n            }\n            props.paramUpdate('stn_list', {\n                ...props.stnList,\n                [stnId]: {\n                    ...props.stnList[stnId],\n                    services: [...servicesSet],\n                },\n            });\n        }\n    };\n\n    const stnDeleteClose = (action: string) => {\n        let stnId = stationSelected;\n        setIsDeleteDialogOpen(false);\n        if (action === 'accept') {\n            let res = removeStation(stnId, props.stnList);\n            if (res === false) {\n                setIsDeleteErrDialogOpen(true);\n            } else {\n                if (props.currentId === stnId) {\n                    let newCurrentId = Object.keys(res).filter(id => !['linestart', 'lineend'].includes(id))[0];\n                    props.paramUpdate('current_stn_idx', newCurrentId);\n                }\n                props.paramUpdate('stn_list', res);\n            }\n        }\n    };\n\n    const fabsAction = (action: string) => {\n        if (action === 'add') {\n            setIsAddDialogOpen(true);\n        }\n        if (action === 'reverse') {\n            let newStnList = reverseStations(props.stnList);\n            props.paramUpdate('stn_list', newStnList);\n            // console.log(newStnList);\n            // setParams('stn_list', newStnList);\n            // location.reload(true);\n        }\n        if (action === 'autonum') {\n            setIsAutoNumDialogOpen(true);\n        }\n    };\n\n    return (\n        <div style={{ width: '100%' }}>\n            <StationChipSet\n                stnList={props.stnList}\n                onSelection={stnChipSetSelection}\n                addStationClick={() => setIsAddDialogOpen(true)}\n            />\n            <Snackbar\n                open={isSnackBarOpen}\n                onClose={(e, r) => snackBarClose(r)}\n                autoHideDuration={5000}\n                message={formatStnName(props.stnList[stationSelected], rmgStyle)}\n                action={\n                    <React.Fragment>\n                        <Button color=\"secondary\" size=\"small\" onClick={() => snackBarClose('current')}>\n                            {t('stations.current')}\n                        </Button>\n                        <Button color=\"secondary\" size=\"small\" onClick={() => snackBarClose('edit')}>\n                            {t('stations.edit.button')}\n                        </Button>\n                        <Button color=\"secondary\" size=\"small\" onClick={() => snackBarClose('delete')}>\n                            {t('stations.remove.button')}\n                        </Button>\n                        <IconButton\n                            size=\"small\"\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            onClick={() => snackBarClose('close')}\n                        >\n                            <Icon fontSize=\"small\">close</Icon>\n                        </IconButton>\n                    </React.Fragment>\n                }\n            />\n\n            <StationFabs onAction={fabsAction} />\n\n            <StationAddDialog\n                open={isAddDialogOpen}\n                stnList={props.stnList}\n                onClose={stnAddDialogClose}\n                paramUpdate={props.paramUpdate}\n            />\n            <StationEditDialog\n                open={isEditDialogOpen}\n                onClose={() => setIsEditDialogOpen(false)}\n                onUpdate={stnEditDialogUpdate}\n                stnId={stationSelected}\n            />\n            <StationDeleteDialog\n                open={isDeleteDialogOpen}\n                onClose={stnDeleteClose}\n                stnInfo={props.stnList[stationSelected] || props.stnList['linestart']}\n            />\n            <StationDeleteErrorDialog open={isDeleteErrDialogOpen} onClose={() => setIsDeleteErrDialogOpen(false)} />\n            {rmgStyle === 'gzmtr' && (\n                <AutoNumDialog open={isAutoNumDialogOpen} onClose={() => setIsAutoNumDialogOpen(false)} />\n            )}\n        </div>\n    );\n};\n\nexport default PanelStations;\n","import Panel from './panel';\n\nexport default Panel;"],"sourceRoot":""}