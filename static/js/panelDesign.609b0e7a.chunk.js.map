{"version":3,"sources":["panels/colour-diag/colours lazy /^/.//.*$/ groupOptions: {} namespace object","panels/colour-diag/data.ts","panels/colour-diag/theme-items.tsx","panels/colour-diag/dialog.tsx","panels/colour-diag/index.ts","../node_modules/@material-ui/core/esm/Grid/Grid.js","panels/design/list-common.tsx","panels/design/panel.tsx","panels/design/index.ts"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","cityList","country","name","en","zh","ga","pt","ko","ja","useStyles","makeStyles","createStyles","cityItem","display","flexDirection","alignItems","menuItemSpan","padding","button","borderRadius","height","width","minWidth","marginRight","border","inputColour","position","left","top","buttonContainer","flexShrink","React","props","classes","useTranslation","t","i18n","theme","hexTemp","setHexTemp","lineList","list","setList","listPromise","default","data","l","i","colour","fg","toString","useLineList","length","filter","newTheme","onUpdate","ListItem","ListItemIcon","Icon","TextField","select","style","variant","label","onChange","event","val","idx","target","value","c","MenuItem","key","className","CountryFlag","getTransText2","languages","line","backgroundColor","color","type","rgb","htmlFor","Tooltip","title","aria-label","Button","borderColor","component","error","match","hex","toUpperCase","prevProps","nextProps","useEmojiStyles","img","codePoints","split","char","codePointAt","splice","includes","language","navigator","platform","indexOf","src","join","String","fromCodePoint","cp","parseInt","paperRoot","listItemPaper","justifyContent","iconRoot","palette","action","active","inputBaseRoot","inputBaseInputZH","textAlign","fontSize","paddingTop","inputBaseInputEN","paddingBottom","ColourDialog","nameChange","index","newName","lineName","handleClose","onClose","Dialog","open","DialogTitle","DialogContent","dividers","List","Paper","InputBase","root","input","autoFocus","DialogActions","onClick","SPACINGS","GRID_SIZES","getOffset","div","arguments","undefined","parse","parseFloat","concat","replace","Grid","ref","_props$alignContent","alignContent","_props$alignItems","classNameProp","_props$component","Component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","_extends","StyledGrid","withStyles","boxSizing","flexWrap","margin","breakpoint","styles","forEach","themeSpacing","generateGutter","breakpoints","reduce","accumulator","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","dividerVertical","DesignList","ParamContext","param","dispatch","isCDiagOpen","setIsCDiagOpen","ListItemText","primary","secondary","values","line_name","Divider","DirectionLi","orientation","flexItem","PlatformNumLi","platform_num","DesignMTR","DesignGZMTR","DesignPanel","disablePadding","window","urlParams","get","fallback","LinearProgress","Panel"],"mappings":"oHAAA,IAAIA,EAAM,CACT,YAAa,CACZ,IACA,GAED,eAAgB,CACf,IACA,GAED,YAAa,CACZ,IACA,GAED,eAAgB,CACf,IACA,GAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,aAAc,CACb,IACA,IAED,gBAAiB,CAChB,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,WAAY,CACX,IACA,GAED,cAAe,CACd,IACA,GAED,YAAa,CACZ,IACA,GAED,eAAgB,CACf,IACA,GAED,cAAe,CACd,IACA,GAED,iBAAkB,CACjB,IACA,GAED,aAAc,CACb,IACA,GAED,gBAAiB,CAChB,IACA,GAED,cAAe,CACd,IACA,GAED,iBAAkB,CACjB,IACA,GAED,WAAY,CACX,IACA,IAED,cAAe,CACd,IACA,IAED,UAAW,CACV,IACA,IAED,aAAc,CACb,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,UAAW,CACV,IACA,IAED,aAAc,CACb,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,UAAW,CACV,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,gBAAiB,CAChB,IACA,IAED,aAAc,CACb,IACA,IAED,gBAAiB,CAChB,IACA,IAED,WAAY,CACX,IACA,IAED,cAAe,CACd,IACA,IAED,UAAW,CACV,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,eAAgB,CACf,IACA,IAED,UAAW,CACV,IACA,IAED,aAAc,CACb,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBY,KAA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","file":"static/js/panelDesign.609b0e7a.chunk.js","sourcesContent":["var map = {\n\t\"./beijing\": [\n\t\t160,\n\t\t3\n\t],\n\t\"./beijing.ts\": [\n\t\t160,\n\t\t3\n\t],\n\t\"./chengdu\": [\n\t\t161,\n\t\t9\n\t],\n\t\"./chengdu.ts\": [\n\t\t161,\n\t\t9\n\t],\n\t\"./chongqing\": [\n\t\t162,\n\t\t20\n\t],\n\t\"./chongqing.ts\": [\n\t\t162,\n\t\t20\n\t],\n\t\"./dongguan\": [\n\t\t163,\n\t\t23\n\t],\n\t\"./dongguan.ts\": [\n\t\t163,\n\t\t23\n\t],\n\t\"./edinburgh\": [\n\t\t164,\n\t\t24\n\t],\n\t\"./edinburgh.ts\": [\n\t\t164,\n\t\t24\n\t],\n\t\"./foshan\": [\n\t\t165,\n\t\t4\n\t],\n\t\"./foshan.ts\": [\n\t\t165,\n\t\t4\n\t],\n\t\"./glasgow\": [\n\t\t166,\n\t\t5\n\t],\n\t\"./glasgow.ts\": [\n\t\t166,\n\t\t5\n\t],\n\t\"./guangzhou\": [\n\t\t167,\n\t\t6\n\t],\n\t\"./guangzhou.ts\": [\n\t\t167,\n\t\t6\n\t],\n\t\"./hongkong\": [\n\t\t168,\n\t\t7\n\t],\n\t\"./hongkong.ts\": [\n\t\t168,\n\t\t7\n\t],\n\t\"./kaohsiung\": [\n\t\t169,\n\t\t8\n\t],\n\t\"./kaohsiung.ts\": [\n\t\t169,\n\t\t8\n\t],\n\t\"./london\": [\n\t\t170,\n\t\t10\n\t],\n\t\"./london.ts\": [\n\t\t170,\n\t\t10\n\t],\n\t\"./macau\": [\n\t\t171,\n\t\t11\n\t],\n\t\"./macau.ts\": [\n\t\t171,\n\t\t11\n\t],\n\t\"./newtaipei\": [\n\t\t172,\n\t\t12\n\t],\n\t\"./newtaipei.ts\": [\n\t\t172,\n\t\t12\n\t],\n\t\"./other\": [\n\t\t173,\n\t\t13\n\t],\n\t\"./other.ts\": [\n\t\t173,\n\t\t13\n\t],\n\t\"./sanfrancisco\": [\n\t\t174,\n\t\t14\n\t],\n\t\"./sanfrancisco.ts\": [\n\t\t174,\n\t\t14\n\t],\n\t\"./seoul\": [\n\t\t175,\n\t\t15\n\t],\n\t\"./seoul.ts\": [\n\t\t175,\n\t\t15\n\t],\n\t\"./shanghai\": [\n\t\t176,\n\t\t16\n\t],\n\t\"./shanghai.ts\": [\n\t\t176,\n\t\t16\n\t],\n\t\"./shenzhen\": [\n\t\t177,\n\t\t17\n\t],\n\t\"./shenzhen.ts\": [\n\t\t177,\n\t\t17\n\t],\n\t\"./taipei\": [\n\t\t178,\n\t\t18\n\t],\n\t\"./taipei.ts\": [\n\t\t178,\n\t\t18\n\t],\n\t\"./tokyo\": [\n\t\t179,\n\t\t19\n\t],\n\t\"./tokyo.ts\": [\n\t\t179,\n\t\t19\n\t],\n\t\"./toronto\": [\n\t\t180,\n\t\t21\n\t],\n\t\"./toronto.ts\": [\n\t\t180,\n\t\t21\n\t],\n\t\"./xi'an\": [\n\t\t181,\n\t\t22\n\t],\n\t\"./xi'an.ts\": [\n\t\t181,\n\t\t22\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 188;\nmodule.exports = webpackAsyncContext;","import { CityEntry } from '../../types';\n\nexport const cityList: CityEntry[] = [\n    {\n        id: 'beijing',\n        country: 'CN',\n        name: {\n            en: 'Beijing',\n            zh: '北京',\n        },\n    },\n    {\n        id: 'chengdu',\n        country: 'CN',\n        name: {\n            en: 'Chengdu',\n            zh: '成都',\n        },\n    },\n    {\n        id: 'chongqing',\n        country: 'CN',\n        name: {\n            en: 'Chongqing',\n            'zh-Hans': '重庆',\n            'zh-Hant': '重慶',\n        },\n    },\n    {\n        id: 'dongguan',\n        country: 'CN',\n        name: {\n            en: 'Dongguan',\n            'zh-Hans': '东莞',\n            'zh-Hant': '東莞',\n        },\n    },\n    {\n        id: 'edinburgh',\n        country: 'GBSCT',\n        name: {\n            en: 'Edinburgh',\n            ga: 'Dùn Èideann',\n            'zh-Hans': '爱丁堡',\n            'zh-Hant': '愛丁堡',\n        },\n    },\n    {\n        id: 'foshan',\n        country: 'CN',\n        name: {\n            en: 'Foshan',\n            zh: '佛山',\n        },\n    },\n    {\n        id: 'glasgow',\n        country: 'GBSCT',\n        name: {\n            en: 'Glasgow',\n            ga: 'Glaschu',\n            zh: '格拉斯哥',\n        },\n    },\n    {\n        id: 'guangzhou',\n        country: 'CN',\n        name: {\n            en: 'Guangzhou',\n            'zh-Hans': '广州',\n            'zh-Hant': '廣州',\n        },\n    },\n    {\n        id: 'hongkong',\n        country: 'HK',\n        name: {\n            en: 'Hong Kong',\n            zh: '香港',\n        },\n    },\n    {\n        id: 'kaohsiung',\n        country: 'TW',\n        name: {\n            en: 'Kaohsiung',\n            zh: '高雄',\n        },\n    },\n    {\n        id: 'london',\n        country: 'GBENG',\n        name: {\n            en: 'London',\n            'zh-Hans': '伦敦',\n            'zh-Hant': '倫敦',\n        },\n    },\n    {\n        id: 'macau',\n        country: 'MO',\n        name: {\n            en: 'Macao',\n            pt: 'Macau',\n            'zh-Hans': '澳门',\n            'zh-Hant': '澳門',\n        },\n    },\n    {\n        id: 'newtaipei',\n        country: 'TW',\n        name: {\n            en: 'New Taipei',\n            zh: '新北',\n        },\n    },\n    {\n        id: 'sanfrancisco',\n        country: 'US',\n        name: {\n            en: 'San Francisco',\n            'zh-Hans': '旧金山',\n            'zh-HK': '三藩市',\n            'zh-TW': '舊金山',\n        },\n    },\n    {\n        id: 'seoul',\n        country: 'KR',\n        name: {\n            en: 'Seoul (Metropolitan Area)',\n            ko: '서울(수도권)',\n            'zh-Hans': '首尔（首都圈）',\n            'zh-Hant': '首爾（首都圈）',\n        },\n    },\n    {\n        id: 'shanghai',\n        country: 'CN',\n        name: {\n            en: 'Shanghai',\n            zh: '上海',\n        },\n    },\n    {\n        id: 'shenzhen',\n        country: 'CN',\n        name: {\n            en: 'Shenzhen',\n            zh: '深圳',\n        },\n    },\n    {\n        id: 'taipei',\n        country: 'TW',\n        name: {\n            en: 'Taipei',\n            'zh-Hans': '台北',\n            'zh-Hant': '臺北',\n        },\n    },\n    {\n        id: 'tokyo',\n        country: 'JP',\n        name: {\n            en: 'Tokyo (Greater Tokyo Area)',\n            ja: '東京（首都圏）',\n            'zh-Hans': '东京（首都圈）',\n            'zh-Hant': '東京（首都圈）',\n        },\n    },\n    {\n        id: 'toronto',\n        country: 'CA',\n        name: {\n            en: 'Toronto',\n            'zh-Hans': '多伦多',\n            'zh-Hant': '多倫多',\n        },\n    },\n    {\n        id: 'xian',\n        country: 'CN',\n        name: {\n            en: \"Xi'an\",\n            zh: '西安',\n        },\n    },\n    {\n        id: 'other',\n        country: 'UN',\n        name: {\n            en: 'Customise (Beta)',\n            'zh-Hans': '自定义 (Beta)',\n            'zh-Hant': '自訂 (Beta)',\n        },\n    },\n];\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    ListItem,\n    ListItemIcon,\n    Icon,\n    TextField,\n    MenuItem,\n    Button,\n    makeStyles,\n    createStyles,\n    Tooltip,\n} from '@material-ui/core';\nimport { LineEntry } from '../../types';\nimport { getTransText2 } from '../../utils';\nimport { cityList } from './data';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        cityItem: {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n        },\n        menuItemSpan: {\n            padding: '0 .3rem',\n        },\n        button: {\n            borderRadius: '50%',\n            height: 28,\n            width: 28,\n            minWidth: 0,\n            marginRight: 8,\n            border: 'solid',\n            padding: 0,\n        },\n        inputColour: {\n            position: 'absolute',\n            width: 0,\n            height: 0,\n            left: 27,\n            top: 32,\n        },\n        buttonContainer: {\n            display: 'flex',\n            flexShrink: 1,\n        },\n    })\n);\n\nconst useLineList = theme => {\n    const [list, setList] = React.useState([] as LineEntry[]);\n\n    const listPromise = theme[0]\n        ? import(/* webpackChunkName: \"colours\" */ `./colours/${theme[0]}`).then(\n              module => module.default as LineEntry[]\n          )\n        : Promise.resolve([] as LineEntry[]);\n\n    // const listPromise = React.useMemo(() => {\n    //     if (!theme[0]) return;\n    //     console.log('fetching line list: ' + theme[0]);\n    //     return fetch(`data/${theme[0]}.json`).then(response => response.json() as Promise<LineEntry[]>);\n    // }, [theme[0]]);\n\n    React.useEffect(() => {\n        if (typeof theme[0] === 'undefined') {\n            return;\n        } else if (theme[0] === 'other') {\n            // mutate original list\n            listPromise.then(data => {\n                setList(data.map((l, i) => (i === 0 ? { ...l, colour: theme[2], fg: theme[3] || '#fff' } : { ...l })));\n            });\n        } else {\n            listPromise.then(data => setList(data));\n        }\n    }, [theme.toString()]);\n\n    return list;\n};\n\ninterface ColourDialogProps {\n    theme: [string, string, string, '#000' | '#fff'];\n    onUpdate: (key: string, value: any) => void;\n}\n\nexport default React.memo(\n    (props: ColourDialogProps) => {\n        // console.log('rerender');\n        const classes = useStyles();\n        const { t, i18n } = useTranslation();\n\n        const [hexTemp, setHexTemp] = React.useState(props.theme[2]);\n\n        const cityChange = event => {\n            let newTheme = props.theme.map((val, idx) => (idx === 0 ? event.target.value : val));\n            props.onUpdate('theme', newTheme);\n        };\n\n        // Hook for fetching line list of current city\n        const lineList = useLineList(props.theme);\n\n        // Hook for updating props.theme when lineList changed\n        React.useEffect(() => {\n            if (lineList.length === 0) return; // initialising, ignore\n            if (lineList.filter(l => l.id === props.theme[1]).length) return; // current city, ignore\n            let newTheme = [props.theme[0], lineList[0].id, lineList[0].colour, lineList[0].fg || '#fff'];\n            props.onUpdate('theme', newTheme);\n        }, [lineList]);\n\n        const lineChange = event => {\n            let line = event.target.value;\n            let newTheme = [\n                props.theme[0],\n                line,\n                lineList.filter(l => l.id === line)[0].colour,\n                lineList.filter(l => l.id === line)[0].fg || '#fff',\n            ];\n            props.onUpdate('theme', newTheme);\n        };\n\n        // Hook for updating hexTemp when props.hex changed\n        // which means valid hex has been updated to props\n        React.useEffect(() => {\n            setHexTemp(props.theme[2]);\n        }, [props.theme[2]]);\n\n        const colourChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n            let rgb = event.target.value;\n            setHexTemp(rgb);\n\n            if (props.theme[0] !== 'other') {\n                // if hex valid, modify theme city and props.hex\n                let newTheme = ['other', props.theme[1], rgb, props.theme[3]];\n                props.onUpdate('theme', newTheme);\n                // then lineList will be updated by hook (along with selection)\n                // then line will be updated by hook\n            } else {\n                // if hex valid, modify props.hex\n                let newTheme = props.theme.map((val, idx) => (idx === 2 ? rgb : val));\n                props.onUpdate('theme', newTheme);\n                // then lineList will be updated by hook (actually only hex is changed)\n            }\n        };\n\n        const hexChange = event => {\n            let hex = event.target.value;\n            if (hex.match(/^#[0-9a-fA-f]{0,6}$/) === null) return;\n            setHexTemp(hex);\n\n            if (props.theme[0] !== 'other') {\n                if (hex.match(/^#[0-9a-fA-f]{6}$/) !== null) {\n                    // if hex valid, modify theme city and props.hex\n                    let newTheme = ['other', props.theme[1], hex, props.theme[3]];\n                    props.onUpdate('theme', newTheme);\n                    // then lineList will be updated by hook (along with selection)\n                    // then line will be updated by hook\n                } else {\n                    // if hex not valid, modify theme city only\n                    let newTheme = ['other', props.theme[1], props.theme[2], props.theme[3]];\n                    props.onUpdate('theme', newTheme);\n                    // then lineList will be updated by hook (along with selection)\n                    // then line will be updated by hook\n                }\n            } else {\n                if (hex.match(/^#[0-9a-fA-f]{6}$/) !== null) {\n                    // if hex valid, modify props.hex\n                    let newTheme = props.theme.map((val, idx) => (idx === 2 ? hex : val));\n                    props.onUpdate('theme', newTheme);\n                    // then lineList will be updated by hook (actually only hex is changed)\n                } else {\n                    // if hex not valid, do nothing\n                }\n            }\n        };\n\n        const fgChange = event => {\n            let newTheme = ['other', 'other', props.theme[2], event.target.value];\n            props.onUpdate('theme', newTheme);\n        };\n\n        return (\n            <>\n                <ListItem>\n                    <ListItemIcon>\n                        <Icon>location_city</Icon>\n                    </ListItemIcon>\n                    <TextField\n                        select\n                        style={{ width: '100%' }}\n                        variant=\"outlined\"\n                        label={t('colour.city')}\n                        onChange={cityChange}\n                        value={props.theme[0]}\n                    >\n                        {cityList.map(c => (\n                            <MenuItem key={c.id} value={c.id}>\n                                <span className={classes.cityItem}>\n                                    <CountryFlag code={c.country} />\n                                    <span>{getTransText2(c.name, i18n.languages)}</span>\n                                </span>\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </ListItem>\n                <ListItem>\n                    <ListItemIcon>\n                        <Icon>subway</Icon>\n                    </ListItemIcon>\n                    <TextField\n                        select\n                        style={{ width: '100%' }}\n                        variant=\"outlined\"\n                        label={t('colour.line')}\n                        onChange={lineChange}\n                        value={props.theme[1]}\n                    >\n                        {lineList.map(l => (\n                            <MenuItem key={l.id} value={l.id}>\n                                <span\n                                    className={classes.menuItemSpan}\n                                    style={{\n                                        backgroundColor: l.colour,\n                                        color: l.fg || '#fff',\n                                    }}\n                                >\n                                    {getTransText2(l.name, i18n.languages)}\n                                </span>\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </ListItem>\n                <ListItem>\n                    <div className={classes.buttonContainer}>\n                        <input\n                            type=\"color\"\n                            id=\"input-color\"\n                            value={props.theme[2]}\n                            onChange={colourChange}\n                            className={classes.inputColour}\n                        />\n                        <label htmlFor=\"input-color\">\n                            <Tooltip title={t('colour.tooltip')} aria-label=\"colour picker\">\n                                <Button\n                                    className={classes.button}\n                                    style={{\n                                        backgroundColor: props.theme[2],\n                                        borderColor: props.theme[3] || '#fff',\n                                    }}\n                                    variant=\"contained\"\n                                    component=\"span\"\n                                >\n                                    {' '}\n                                </Button>\n                            </Tooltip>\n                        </label>\n                    </div>\n                    <TextField\n                        error={!hexTemp?.match(/^#[0-9a-fA-f]{6}$/g)}\n                        style={{ width: '100%', marginRight: 5 }}\n                        variant=\"outlined\"\n                        label={t('colour.colour')}\n                        onChange={hexChange}\n                        value={hexTemp?.toUpperCase()}\n                    ></TextField>\n                    <TextField\n                        select\n                        style={{ width: '100%' }}\n                        variant=\"outlined\"\n                        label={t('colour.fg')}\n                        onChange={fgChange}\n                        value={props.theme[3] || '#fff'}\n                    >\n                        <MenuItem key=\"#fff\" value=\"#fff\">\n                            {t('colour.fgWhite')}\n                        </MenuItem>\n                        <MenuItem key=\"#000\" value=\"#000\">\n                            {t('colour.fgBlack')}\n                        </MenuItem>\n                    </TextField>\n                </ListItem>\n            </>\n        );\n    },\n    (prevProps, nextProps) => prevProps.theme.toString() === nextProps.theme.toString()\n);\n\nconst useEmojiStyles = makeStyles(() =>\n    createStyles({\n        img: {\n            height: 20,\n            marginRight: '0.2rem',\n        },\n    })\n);\n\ninterface CountryFlagProps {\n    code: string;\n}\n\n/**\n * Convert ISO 3166 alpha-2 country code (followed by BS 6879 UK subdivision code, if applicable) to flag Emoji. For Windows platform, an `img` element with image source from OpenMoji is returned.\n */\nfunction CountryFlag(props: CountryFlagProps) {\n    const { i18n } = useTranslation();\n    const classes = useEmojiStyles();\n\n    let codePoints = [] as string[];\n\n    if (props.code.length === 2) {\n        codePoints = props.code\n            .toUpperCase()\n            .split('')\n            .map(char => (char.codePointAt(0) + 127397).toString(16).toUpperCase());\n    } else {\n        codePoints = ['1F3F4', 'E007F'];\n        codePoints.splice(\n            1,\n            0,\n            ...props.code\n                .toUpperCase()\n                .split('')\n                .map(char => (char.codePointAt(0) + 917536).toString(16).toUpperCase())\n        );\n    }\n\n    if (['zh-CN', 'zh-Hans'].includes(i18n.language) && props.code === 'TW') codePoints = ['1F3F4'];\n\n    return navigator.platform.indexOf('Win32') !== -1 || navigator.platform.indexOf('Win64') !== -1 ? (\n        <img src={`./images/flags/${codePoints.join('-')}.svg`} className={classes.img} />\n    ) : (\n        <span>{String.fromCodePoint(...codePoints.map(cp => parseInt(cp, 16)))}</span>\n    );\n}\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    List,\n    ListItem,\n    Paper,\n    Icon,\n    InputBase,\n    makeStyles,\n    DialogActions,\n    Button,\n    createStyles,\n} from '@material-ui/core';\n\nimport { Name } from '../../types';\n\nimport ThemeListItems from './theme-items';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        paperRoot: {\n            width: 250,\n        },\n        listItemPaper: {\n            justifyContent: 'center',\n        },\n        iconRoot: {\n            position: 'absolute',\n            color: theme.palette.action.active,\n        },\n        inputBaseRoot: {\n            display: 'block',\n        },\n        inputBaseInputZH: {\n            textAlign: 'center',\n            fontSize: 36,\n            padding: 0,\n            paddingTop: 6,\n            height: 45,\n        },\n        inputBaseInputEN: {\n            textAlign: 'center',\n            fontSize: 18,\n            padding: 0,\n            paddingBottom: 6,\n            height: 'auto',\n        },\n    })\n);\n\ninterface ColourDialogProps {\n    open: boolean;\n    theme: [string, string, string, '#000' | '#fff'];\n    lineName: Name;\n    onUpdate: (key: string, value: any) => void;\n    onClose: () => void;\n}\n\nconst ColourDialog = React.memo(\n    (props: ColourDialogProps) => {\n        const classes = useStyles();\n        const { t } = useTranslation();\n\n        const nameChange = (value: string, index: number) => {\n            let newName = props.lineName.map((val, idx) => (idx === index ? value : val));\n            props.onUpdate('name', newName);\n            // props.onUpdate('all', [...props.theme, ...newName]);\n        };\n\n        const themeChange = (key: string, value: any) => {\n            props.onUpdate('all', [...value, props.lineName[0], props.lineName[1]]);\n        };\n\n        const handleClose = () => {\n            props.onClose();\n        };\n\n        return (\n            <Dialog onClose={handleClose} open={props.open}>\n                <DialogTitle>{t('colour.title')}</DialogTitle>\n                <DialogContent dividers>\n                    <List>\n                        <ListItem className={classes.listItemPaper}>\n                            <Paper className={classes.paperRoot} style={{ backgroundColor: props.theme[2] }}>\n                                <Icon className={classes.iconRoot}>edit</Icon>\n                                <InputBase\n                                    value={props.lineName[0]}\n                                    classes={{\n                                        root: classes.inputBaseRoot,\n                                        input: classes.inputBaseInputZH,\n                                    }}\n                                    style={{ color: props.theme[3] || '#fff' }}\n                                    onChange={e => nameChange(e.target.value, 0)}\n                                    autoFocus\n                                />\n                                <InputBase\n                                    value={props.lineName[1]}\n                                    classes={{\n                                        root: classes.inputBaseRoot,\n                                        input: classes.inputBaseInputEN,\n                                    }}\n                                    style={{ color: props.theme[3] || '#fff' }}\n                                    onChange={e => nameChange(e.target.value, 1)}\n                                />\n                            </Paper>\n                        </ListItem>\n                        <ThemeListItems theme={props.theme} onUpdate={props.onUpdate} />\n                    </List>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        {t('dialog.done')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    },\n    (prevProps, nextProps) =>\n        prevProps.open === nextProps.open &&\n        prevProps.lineName.toString() === nextProps.lineName.toString() &&\n        prevProps.theme.toString() === nextProps.theme.toString()\n);\n\nexport default ColourDialog;\n","import ColourDialog from './dialog';\n\nexport default ColourDialog;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), {}, theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Name } from '../../types';\nimport {\n    ListItem,\n    ListItemIcon,\n    Icon,\n    ListItemText,\n    TextField,\n    Divider,\n    makeStyles,\n    createStyles,\n    Button,\n} from '@material-ui/core';\nimport ColourDialog from '../colour-diag';\nimport { ParamContext } from '../../context';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        dividerVertical: {\n            margin: theme.spacing(0, 2),\n        },\n    })\n);\n\nconst DesignList = () => {\n    const { t } = useTranslation();\n    const { param, dispatch } = React.useContext(ParamContext);\n\n    const [isCDiagOpen, setIsCDiagOpen] = React.useState(false);\n\n    const nameDialogUpdate = (key: string, value: any) => {\n        if (key === 'name') {\n            dispatch({ type: 'SET_LINE_NAME', name: Object.values(value) as Name });\n        }\n        if (key === 'theme') {\n            dispatch({ type: 'SET_THEME', theme: value });\n        }\n    };\n\n    return (\n        <>\n            <ListItem button onClick={() => setIsCDiagOpen(true)}>\n                <ListItemIcon>\n                    <Icon>color_lens</Icon>\n                </ListItemIcon>\n                <ListItemText\n                    primary={t('design.theme')}\n                    secondary={\n                        <span\n                            style={{\n                                backgroundColor: param.theme[2],\n                                color: param.theme[3],\n                                padding: '.1rem .3rem',\n                            }}\n                        >\n                            {Object.values(param.line_name).join()}\n                        </span>\n                    }\n                />\n                <Icon color=\"action\">arrow_right</Icon>\n            </ListItem>\n            <ColourDialog\n                open={isCDiagOpen}\n                theme={param.theme}\n                lineName={param.line_name}\n                onUpdate={nameDialogUpdate}\n                onClose={() => setIsCDiagOpen(false)}\n            />\n            <Divider />\n            <DirectionLi />\n            <Divider />\n            <PlatformNumLi />\n        </>\n    );\n};\n\nexport default DesignList;\n\nconst DirectionLi = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const { param, dispatch } = React.useContext(ParamContext);\n\n    return React.useMemo(\n        () => (\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>directions</Icon>\n                </ListItemIcon>\n                <ListItemText\n                    primary={t('design.direction.button')}\n                    secondary={t('design.direction.' + param.direction)}\n                />\n                <Divider orientation=\"vertical\" flexItem className={classes.dividerVertical} />\n                <Button variant=\"outlined\" color=\"primary\" onClick={() => dispatch({ type: 'SET_DIRECTION' })}>\n                    {t('design.direction.switch')}\n                </Button>\n            </ListItem>\n        ),\n        [classes.dividerVertical, param.direction]\n    );\n};\n\nconst PlatformNumLi = () => {\n    const { t } = useTranslation();\n    const { param, dispatch } = React.useContext(ParamContext);\n\n    return React.useMemo(\n        () => (\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>looks_one</Icon>\n                </ListItemIcon>\n                <ListItemText primary={t('design.platform')} />\n                <TextField\n                    value={param.platform_num}\n                    onChange={e => dispatch({ type: 'SET_PLATFORM', platform: e.target.value })}\n                />\n            </ListItem>\n        ),\n        [param.platform_num]\n    );\n};\n","import * as React from 'react';\n\nimport { Grid, Paper, List, Divider, LinearProgress } from '@material-ui/core';\n\nimport DesignCommon from './list-common';\nconst DesignMTR = React.lazy(() => import(/* webpackChunkName: \"panelDesignMTR\" */ './list-mtr'));\nconst DesignGZMTR = React.lazy(() => import(/* webpackChunkName: \"panelDesignGZMTR\" */ './list-gzmtr'));\n\nconst DesignPanel = () => {\n    return (\n        <Grid container spacing={3} justify=\"center\" alignItems=\"flex-start\">\n            <Grid item xs={12} sm={10} md={7} lg={5}>\n                <Paper>\n                    <List component=\"div\" disablePadding>\n                        <DesignCommon />\n                        {window.urlParams.get('style') === 'mtr' && (\n                            <React.Suspense fallback={<LinearProgress />}>\n                                <Divider />\n                                <DesignMTR />\n                            </React.Suspense>\n                        )}\n                        {window.urlParams.get('style') === 'gzmtr' && (\n                            <React.Suspense fallback={<LinearProgress />}>\n                                <Divider />\n                                <DesignGZMTR />\n                            </React.Suspense>\n                        )}\n                    </List>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default DesignPanel;\n","import Panel from './panel';\n\nexport default Panel;"],"sourceRoot":""}