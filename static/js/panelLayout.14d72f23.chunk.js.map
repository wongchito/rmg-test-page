{"version":3,"sources":["../node_modules/@material-ui/core/esm/Grid/Grid.js","../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","panels/layout/common.tsx","panels/layout/panel.tsx","panels/layout/index.ts"],"names":["SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","Grid","React","props","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","root","_extends","StyledGrid","withStyles","theme","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name","InputAdornment","children","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","position","variantProp","variant","muiFormControl","useFormControl","FormControlContext","Provider","value","hiddenLabel","filled","positionStart","positionEnd","marginDense","Typography","color","height","maxHeight","whiteSpace","marginTop","marginRight","marginLeft","pointerEvents","useStyles","makeStyles","createStyles","nestedList","paddingLeft","textField","slider","Divider","window","urlParams","get","SizeLi","t","useTranslation","ParamContext","param","dispatch","canvasAvailable","CanvasContext","isOpen","setIsOpen","ListItem","button","onClick","prevOpen","ListItemIcon","Icon","ListItemText","primary","Collapse","in","unmountOnExit","List","disablePadding","map","canvas","TextField","svgWidth","toString","onChange","e","isNaN","Number","target","type","targetId","InputProps","endAdornment","svg_height","JSON","stringify","YLi","Slider","y_pc","_","step","marks","label","valueLabelDisplay","BranchSpacingLi","branch_spacing","PaddingLi","max","LayoutGZMTR","Paper","fallback","LinearProgress","Panel"],"mappings":"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","file":"static/js/panelLayout.14d72f23.chunk.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), {}, theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return React.createElement(FormControlContext.Provider, {\n    value: null\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, {\n      'start': classes.positionStart,\n      'end': classes.positionEnd\n    }[position], muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    TextField,\n    Slider,\n    List,\n    ListItem,\n    ListItemIcon,\n    Icon,\n    ListItemText,\n    makeStyles,\n    createStyles,\n    Collapse,\n    Divider,\n    InputAdornment,\n} from '@material-ui/core';\nimport { ParamContext, CanvasContext } from '../../context';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        nestedList: {\n            paddingLeft: theme.spacing(5),\n        },\n        textField: {\n            maxWidth: 168,\n        },\n        slider: {\n            width: 168,\n            marginLeft: 8,\n            marginRight: 8,\n        },\n    })\n);\n\nexport default React.memo(function LayoutCommon() {\n    return (\n        <>\n            <SizeLi />\n            <Divider />\n            {window.urlParams.get('style') !== 'shmetro' && (\n                <>\n                    <YLi />\n                    <Divider />\n                </>\n            )}\n            <BranchSpacingLi />\n            <Divider />\n            <PaddingLi />\n        </>\n    );\n});\n\nconst SizeLi = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const { param, dispatch } = React.useContext(ParamContext);\n    const { canvasAvailable } = React.useContext(CanvasContext);\n\n    const [isOpen, setIsOpen] = React.useState(false);\n\n    return React.useMemo(\n        () => (\n            <>\n                <ListItem button onClick={() => setIsOpen(prevOpen => !prevOpen)}>\n                    <ListItemIcon>\n                        <Icon>panorama_horizontal</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={t('layout.size.title')} />\n                    {isOpen ? <Icon color=\"action\">expand_less</Icon> : <Icon color=\"action\">expand_more</Icon>}\n                </ListItem>\n                <Collapse in={isOpen} unmountOnExit>\n                    <List component=\"div\" disablePadding className={classes.nestedList}>\n                        {canvasAvailable.map(canvas => (\n                            <React.Fragment key={canvas}>\n                                <ListItem>\n                                    <ListItemText primary={t('layout.size.width.' + canvas)} />\n                                    <TextField\n                                        value={param.svgWidth[canvas].toString()}\n                                        onChange={e =>\n                                            !isNaN(Number(e.target.value)) &&\n                                            dispatch({\n                                                type: 'SET_WIDTH',\n                                                targetId: canvas,\n                                                value: Number(e.target.value),\n                                            })\n                                        }\n                                        className={classes.textField}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">px</InputAdornment>,\n                                        }}\n                                    />\n                                </ListItem>\n                                <Divider variant=\"middle\" />\n                            </React.Fragment>\n                        ))}\n                        <ListItem>\n                            <ListItemText primary={t('layout.size.height')} />\n                            <TextField\n                                value={param.svg_height.toString()}\n                                onChange={e =>\n                                    !isNaN(Number(e.target.value)) &&\n                                    dispatch({ type: 'SET_HEIGHT', value: Number(e.target.value) })\n                                }\n                                className={classes.textField}\n                                InputProps={{\n                                    endAdornment: <InputAdornment position=\"end\">px</InputAdornment>,\n                                }}\n                            />\n                        </ListItem>\n                    </List>\n                </Collapse>\n            </>\n        ),\n        [JSON.stringify(param.svgWidth), param.svg_height, isOpen, classes.nestedList]\n    );\n};\n\nconst YLi = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const { param, dispatch } = React.useContext(ParamContext);\n\n    return React.useMemo(\n        () => (\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>vertical_align_center</Icon>\n                </ListItemIcon>\n                <ListItemText primary={t('layout.y')} />\n                <Slider\n                    className={classes.slider}\n                    value={param.y_pc}\n                    onChange={(_, value) => dispatch({ type: 'SET_Y', value: value as number })}\n                    step={0.01}\n                    marks={[\n                        { value: 0, label: '0%' },\n                        { value: 100, label: '100%' },\n                    ]}\n                    valueLabelDisplay=\"auto\"\n                />\n            </ListItem>\n        ),\n        [param.y_pc, classes.slider]\n    );\n};\n\nconst BranchSpacingLi = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const { param, dispatch } = React.useContext(ParamContext);\n\n    return React.useMemo(\n        () => (\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>format_line_spacing</Icon>\n                </ListItemIcon>\n                <ListItemText primary={t('layout.branchSpacing')} />\n                <Slider\n                    className={classes.slider}\n                    value={param.branch_spacing}\n                    onChange={(_, value) => dispatch({ type: 'SET_BRANCH_SPACING', value: value as number })}\n                    step={0.01}\n                    marks={[\n                        { value: 0, label: '0px' },\n                        { value: 100, label: '100px' },\n                    ]}\n                    valueLabelDisplay=\"auto\"\n                />\n            </ListItem>\n        ),\n        [param.branch_spacing, classes.slider]\n    );\n};\n\nconst PaddingLi = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const { param, dispatch } = React.useContext(ParamContext);\n\n    return React.useMemo(\n        () => (\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>stay_current_landscape</Icon>\n                </ListItemIcon>\n                <ListItemText primary={t('layout.padding')} />\n                <Slider\n                    className={classes.slider}\n                    value={param.padding}\n                    onChange={(_, value) => dispatch({ type: 'SET_PADDING', value: value as number })}\n                    step={0.01}\n                    max={50}\n                    marks={[\n                        { value: 0, label: '0%' },\n                        { value: 50, label: '50%' },\n                    ]}\n                    valueLabelDisplay=\"auto\"\n                />\n            </ListItem>\n        ),\n        [param.padding, classes.slider]\n    );\n};\n","import * as React from 'react';\n\nimport { Grid, Paper, List, LinearProgress } from '@material-ui/core';\n\nimport LayoutCommon from './common';\nconst LayoutGZMTR = React.lazy(() => import(/* webpackChunkName: \"panelLayoutGZMTR\" */ './gzmtr'));\n\nexport default React.memo(function LayoutPanel() {\n    return (\n        <Grid container spacing={3} justify=\"center\" alignItems=\"flex-start\">\n            <Grid item xs={12} sm={10} md={7} lg={5}>\n                <Paper>\n                    <List component=\"div\" disablePadding>\n                        <LayoutCommon />\n                        {window.urlParams.get('style') === 'gzmtr' && (\n                            <React.Suspense fallback={<LinearProgress />}>\n                                <LayoutGZMTR />\n                            </React.Suspense>\n                        )}\n                    </List>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n});\n\n// export default LayoutPanel;\n","import Panel from './panel';\n\nexport default Panel;"],"sourceRoot":""}