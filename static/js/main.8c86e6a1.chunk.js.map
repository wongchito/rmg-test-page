{"version":3,"sources":["context.ts","methods.ts","utils.ts","i18n.ts","app-appbar.tsx","svgs/destination/destination.tsx","svgs/destination/index.ts","svgs/runin/runin.tsx","svgs/runin/index.ts","svgs/railmap/railmap.tsx","svgs/railmap/index.ts","svgs/svg.tsx","svgs/index.ts","panels/panels.tsx","panels/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["CanvasContext","createContext","ParamContext","paramReducer","state","action","type","data","key","svg_height","value","svgWidth","targetId","y_pc","branch_spacing","padding","direction_gz_x","direction_gz_y","line_name","name","theme","direction","platform_num","platform","txt_flip","dest_legacy","isLegacy","customiseMTRDest","terminal","line_num","num","psd_num","info_panel_type","variant","notesGZMTR","concat","filter","_","i","idx","map","note","stn_list","stnId","transfer","info","infos","setIdx","int","j","intIdx","k","undefined","osi_names","tick_direc","paid_area","isPaid","branch","branchType","branches","first","left","parents","slice","reverse","right","children","facility","services","Array","from","isChecked","Set","add","serviceId","s","stnList","getYShareMTR","includes","length","stnPred","indexOf","getBranches","console","log","stack","branchCount","curId","shift","prevId","push","branchNextId","getRoutes","useTpo","React","useState","tpo","setTpo","useEffect","res","reduce","acc","cur","toString","updateParam","param","JSON","parse","localStorage","rmgParam","fontZH","fontEN","weightZH","weightEN","Object","entries","stnInfo","style","interchange","arr","intInfo","splice","change_type","split","usage","destination","svg_dest_width","runin","railmap","svg_width","setItem","stringify","getTransText2","obj","langs","formatStnName","window","urlParams","get","join","replace","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","default","debug","backend","loadPath","interpolation","escapeValue","then","t","document","title","documentElement","setAttribute","language","useStyles","makeStyles","createStyles","rootLight","backgroundColor","palette","primary","main","rootDark","background","paper","flexGrow","color","menuButton","AppAppBar","useTranslation","classes","prefersDarkMode","useMediaQuery","AppBar","position","className","Toolbar","Typography","CanvasToggle","canvasAvailable","setCanvasToShown","canvasButtonEl","setCanvasButtonEl","handleClick","Tooltip","IconButton","onClick","e","currentTarget","Icon","Menu","anchorEl","open","Boolean","onClose","c","MenuItem","Divider","margin","ZoomToggles","setCanvasScale","prevScale","Destination","props","RunIn","lazy","RailMap","root","display","flexDirection","overflowX","content","flex","border","SVGs","useContext","canvasToShown","canvasScale","sharedProps","canvas","id","xmlns","xmlnsXlink","height","viewBox","x","y","fill","stroke","width","Suspense","fallback","CircularProgress","PanelSave","PanelLayout","PanelDesign","PanelStations","PanelInfo","typography","tab","minWidth","minHeight","marginBottom","paddingLeft","box","justifyContent","alignItems","PanelTab","setValue","tabNav","component","Tabs","indicatorColor","textColor","onChange","val","scrollButtons","Tab","label","icon","role","overflow","Box","p","index","currentId","current_stn_idx","paramUpdate","panel","darkTheme","createMuiTheme","secondary","error","overrides","MuiDialog","lightTheme","light","App","rmgCanvas","Number","rmgScale","toFixed","ThemeProvider","Provider","LinearProgress","AppBody","useReducer","dispatch","paramString","deps","keys","o","a","useMemo","routes","location","hostname","match","navigator","serviceWorker","ready","registration","unregister","catch","message","set","history","pushState","url","href","head","append","tag","link","createElement","rel","renderApp","ReactDOM","querySelectorAll","err","alert","removeItem","module"],"mappings":"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","file":"static/js/main.8c86e6a1.chunk.js","sourcesContent":["import React, { createContext } from 'react';\n\ninterface ICanvasContext {\n    canvasAvailable: ProvidedCanvas[];\n    canvasToShown: ProvidedCanvas | 'all';\n    setCanvasToShown: React.Dispatch<React.SetStateAction<ProvidedCanvas | 'all'>>;\n    canvasScale: number;\n    setCanvasScale: React.Dispatch<React.SetStateAction<number>>;\n}\n\ninterface IParamContext {\n    param: RMGParam;\n    dispatch: React.Dispatch<ReducerAction>;\n    branches: string[][];\n    routes: string[][];\n    deps: string;\n}\n\nexport const CanvasContext = createContext<ICanvasContext>({} as ICanvasContext);\nexport const ParamContext = createContext<IParamContext>({} as IParamContext);\n\ntype ReducerAction =\n    | { type: 'GLOBAL'; data: RMGParam }\n    | {\n          type: 'ANY';\n          key: string;\n          data: any;\n      }\n    | {\n          type: 'SET_HEIGHT';\n          value: number;\n      }\n    | {\n          type: 'SET_WIDTH';\n          targetId: ProvidedCanvas;\n          value: number;\n      }\n    | {\n          type: 'SET_Y';\n          value: number;\n      }\n    | {\n          type: 'SET_BRANCH_SPACING';\n          value: number;\n      }\n    | {\n          type: 'SET_PADDING';\n          value: number;\n      }\n    | {\n          type: 'SET_DIRECTION_GZ_X';\n          value: number;\n      }\n    | {\n          type: 'SET_DIRECTION_GZ_Y';\n          value: number;\n      }\n    | {\n          type: 'SET_LINE_NAME';\n          name: Name;\n      }\n    | {\n          type: 'SET_THEME';\n          theme: [string, string, string, '#fff' | '#000'];\n      }\n    | {\n          type: 'SET_DIRECTION';\n      }\n    | {\n          type: 'SET_PLATFORM';\n          platform: string;\n      }\n    | {\n          type: 'SET_TEXT_FLIP';\n      }\n    | {\n          type: 'SET_DEST_LEGACY';\n          isLegacy: boolean;\n      }\n    | {\n          type: 'SET_TERMINAL_OVERRIDE';\n          terminal: Name | false;\n      }\n    | {\n          type: 'SET_LINE_NUM';\n          num: string;\n      }\n    | {\n          type: 'SET_PSD_NUM';\n          num: string;\n      }\n    | {\n          type: 'SET_PANEL_TYPE';\n          variant: 'gz1' | 'gz28' | 'gz3' | 'gz1421' | 'gzgf';\n      }\n    | {\n          type: 'ADD_NOTE_GZMTR';\n      }\n    | {\n          type: 'REMOVE_NOTE_GZMTR';\n          idx: number;\n      }\n    | {\n          type: 'UPDATE_NOTE_GZMTR';\n          idx: number;\n          note: Note;\n      }\n    | {\n          type: 'UPDATE_STATION_NAME';\n          stnId: string;\n          name: Name;\n      }\n    | {\n          type: 'UPDATE_STATION_NUM';\n          stnId: string;\n          num: string;\n      }\n    | {\n          type: 'UPDATE_STATION_TRANSFER';\n          stnId: string;\n          transfer: StationTransfer;\n      }\n    | {\n          type: 'UPDATE_STATION_INTERCHANGE_INFO';\n          stnId: string;\n          setIdx: number;\n          intIdx: number;\n          info: InterchangeInfo;\n      }\n    | {\n          type: 'UPDATE_STATION_OSI_NAME';\n          stnId: string;\n          name: Name;\n      }\n    | {\n          type: 'UPDATE_STATION_TICK_DIREC';\n          stnId: string;\n          direction: 'l' | 'r';\n      }\n    | {\n          type: 'UPDATE_STATION_PAID_AREA';\n          stnId: string;\n          isPaid: boolean;\n      }\n    | {\n          type: 'UPDATE_STATION_BRANCH_TYPE';\n          stnId: string;\n          direction: 'left' | 'right';\n          branchType: 'through' | 'nonthrough';\n      }\n    | {\n          type: 'UPDATE_STATION_BRANCH_FIRST';\n          branches: [\n              {\n                  stnId: string;\n                  direction: 'left' | 'right';\n                  first: string;\n              },\n              {\n                  stnId: string;\n                  direction: 'left' | 'right';\n                  first: string;\n              }\n          ];\n      }\n    | {\n          type: 'UPDATE_STATION_BRANCH_POS';\n          left: string;\n          right: string;\n      }\n    | {\n          type: 'UPDATE_STATION_FACILITY';\n          stnId: string;\n          facility: '' | 'airport' | 'hsr' | 'disney';\n      }\n    | {\n          type: 'UPDATE_STATION_SERVICES';\n          stnId: string;\n          serviceId: 'local' | 'express';\n          isChecked: boolean;\n      }\n    | {\n          type: 'UPDATE_STATION_LIST';\n          stnList: { [stnId: string]: StationInfo };\n      };\n\nexport const paramReducer = (state: RMGParam, action: ReducerAction): RMGParam => {\n    switch (action.type) {\n        case 'GLOBAL':\n            return action.data;\n        case 'ANY':\n            return {\n                ...state,\n                [action.key]: action.data,\n            };\n        case 'SET_HEIGHT':\n            return {\n                ...state,\n                svg_height: action.value,\n            };\n        case 'SET_WIDTH':\n            return {\n                ...state,\n                svgWidth: {\n                    ...state.svgWidth,\n                    [action.targetId]: action.value,\n                },\n            };\n        case 'SET_Y':\n            return {\n                ...state,\n                y_pc: action.value,\n            };\n        case 'SET_BRANCH_SPACING':\n            return {\n                ...state,\n                branch_spacing: action.value,\n            };\n        case 'SET_PADDING':\n            return {\n                ...state,\n                padding: action.value,\n            };\n        case 'SET_DIRECTION_GZ_X':\n            return {\n                ...state,\n                direction_gz_x: action.value,\n            };\n        case 'SET_DIRECTION_GZ_Y':\n            return {\n                ...state,\n                direction_gz_y: action.value,\n            };\n        case 'SET_LINE_NAME':\n            return {\n                ...state,\n                line_name: action.name,\n            };\n        case 'SET_THEME':\n            return {\n                ...state,\n                theme: action.theme,\n            };\n        case 'SET_DIRECTION':\n            return {\n                ...state,\n                direction: state.direction === 'l' ? 'r' : 'l',\n            };\n        case 'SET_PLATFORM':\n            return {\n                ...state,\n                platform_num: action.platform,\n            };\n        case 'SET_TEXT_FLIP':\n            return {\n                ...state,\n                txt_flip: !state.txt_flip,\n            };\n        case 'SET_DEST_LEGACY':\n            return {\n                ...state,\n                dest_legacy: action.isLegacy,\n                customiseMTRDest: {\n                    ...state.customiseMTRDest,\n                    isLegacy: action.isLegacy,\n                },\n            };\n        case 'SET_TERMINAL_OVERRIDE':\n            return {\n                ...state,\n                customiseMTRDest: {\n                    ...state.customiseMTRDest,\n                    terminal: action.terminal,\n                },\n            };\n        case 'SET_LINE_NUM':\n            return {\n                ...state,\n                line_num: action.num,\n            };\n        case 'SET_PSD_NUM':\n            return {\n                ...state,\n                psd_num: action.num,\n            };\n        case 'SET_PANEL_TYPE':\n            return {\n                ...state,\n                info_panel_type: action.variant,\n            };\n        case 'ADD_NOTE_GZMTR':\n            return {\n                ...state,\n                notesGZMTR: state.notesGZMTR?.concat([['', '', 0, 0, false]]),\n            };\n        case 'REMOVE_NOTE_GZMTR':\n            return {\n                ...state,\n                notesGZMTR: state.notesGZMTR?.filter((_, i) => i !== action.idx),\n            };\n        case 'UPDATE_NOTE_GZMTR':\n            return {\n                ...state,\n                notesGZMTR: state.notesGZMTR?.map((note, i) => (i === action.idx ? action.note : note)),\n            };\n        case 'UPDATE_STATION_NAME':\n            // window.myLine.updateStnName(action.stnId, action.name);\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        name: action.name,\n                    },\n                },\n            };\n        case 'UPDATE_STATION_NUM':\n            // (window.myLine as RMGLineGZ).updateStnNum(action.stnId, action.num);\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        num: action.num,\n                    },\n                },\n            };\n        case 'UPDATE_STATION_TRANSFER':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: action.transfer,\n                    },\n                },\n            };\n        case 'UPDATE_STATION_INTERCHANGE_INFO':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: {\n                            ...state.stn_list[action.stnId].transfer,\n                            info: state.stn_list[action.stnId].transfer?.info.map((infos, i) =>\n                                i === action.setIdx\n                                    ? infos.map((int, j) =>\n                                          j === action.intIdx\n                                              ? (([0, 1, 2, 3, 4, 5].map(k =>\n                                                    action.info[k] === undefined ? int[k] : action.info[k]\n                                                ) as unknown) as InterchangeInfo)\n                                              : int\n                                      )\n                                    : infos\n                            ),\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_OSI_NAME':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: {\n                            ...state.stn_list[action.stnId].transfer,\n                            osi_names: [action.name],\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_TICK_DIREC':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: {\n                            ...state.stn_list[action.stnId].transfer,\n                            tick_direc: action.direction,\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_PAID_AREA':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: {\n                            ...state.stn_list[action.stnId].transfer,\n                            paid_area: action.isPaid,\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_BRANCH_TYPE':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        branch: {\n                            ...state.stn_list[action.stnId].branch,\n                            [action.direction]: [\n                                action.branchType,\n                                state.stn_list[action.stnId].branch[action.direction][1],\n                            ],\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_BRANCH_FIRST':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.branches[0].stnId]: {\n                        ...state.stn_list[action.branches[0].stnId],\n                        branch: {\n                            ...state.stn_list[action.branches[0].stnId].branch,\n                            [action.branches[0].direction]: [\n                                state.stn_list[action.branches[0].stnId].branch[action.branches[0].direction][0],\n                                action.branches[0].first,\n                            ],\n                        },\n                    },\n                    [action.branches[1].stnId]: {\n                        ...state.stn_list[action.branches[1].stnId],\n                        branch: {\n                            ...state.stn_list[action.branches[1].stnId].branch,\n                            [action.branches[1].direction]: [\n                                state.stn_list[action.branches[1].stnId].branch[action.branches[1].direction][0],\n                                action.branches[1].first,\n                            ],\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_BRANCH_POS':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.left]: {\n                        ...state.stn_list[action.left],\n                        parents: state.stn_list[action.left].parents.slice().reverse(),\n                    },\n                    [action.right]: {\n                        ...state.stn_list[action.right],\n                        children: state.stn_list[action.right].children.slice().reverse(),\n                    },\n                },\n            };\n        case 'UPDATE_STATION_FACILITY':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        facility: action.facility,\n                    },\n                },\n            };\n        case 'UPDATE_STATION_SERVICES':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        services: Array.from(\n                            action.isChecked\n                                ? new Set(state.stn_list[action.stnId].services).add(action.serviceId)\n                                : state.stn_list[action.stnId].services.filter(s => s !== action.serviceId)\n                        ),\n                    },\n                },\n            };\n        case 'UPDATE_STATION_LIST':\n            return {\n                ...state,\n                stn_list: action.stnList,\n            };\n        default:\n            return state;\n    }\n};\n","import React from 'react';\n\n/**\n * Vertical position (in shares) of station icon if using MTR style (for consistency of method `RMGLine.newStnPossibleLoc()`).\n */\nexport const getYShareMTR = (stnId: string, stnList: StationDict): -1 | 0 | 1 => {\n    if (\n        ['linestart', 'lineend'].includes(stnId) ||\n        stnList[stnId].parents.length > 1 ||\n        stnList[stnId].children.length > 1\n    ) {\n        return 0;\n    }\n    var stnPred = stnList[stnId].parents[0];\n    if (stnPred) {\n        // parent exist\n        if (stnList[stnPred].children.length == 1) {\n            // no sibling, then y same as parent\n            return getYShareMTR(stnPred, stnList);\n        } else {\n            // sibling exists, then y depends on its idx of being children\n            return stnList[stnPred].children.indexOf(stnId) == 0 ? 1 : -1;\n        }\n    } else {\n        // no parent, must be linestart\n        return 0;\n    }\n};\n\n/**\n * Getter of all branches (支線段) of the line (both ends included). The first branch must be the main line.\n * @example MTREastRailLine.branches\n * /*\n * [0]: [LineStart, Lo Wu, ..., Hung Hom, LineEnd]\n * [1]: [LineStart, Lok Ma Chau, Sheung Shui]\n * [2]: [University, Racecourse, Sha Tin]\n * /\n */\nexport const getBranches = (stnList: StationDict) => {\n    console.log('computing branches');\n\n    var stack = ['linestart'];\n    var branches = [['linestart']];\n    var branchCount = 0;\n\n    while (stack.length) {\n        var curId = stack.shift() as string;\n        var prevId = branches[branchCount].slice().reverse()[0] || null;\n        if (prevId && curId !== 'linestart') {\n            branches[branchCount].push(curId);\n        } else {\n            branches[branchCount] = [curId];\n        }\n        while (curId !== 'lineend') {\n            prevId = curId;\n            var children = stnList[prevId].children;\n            switch (children.length) {\n                case 1:\n                    curId = children[0];\n                    break;\n                case 2:\n                    var branchNextId = stnList[prevId].branch.right[1] as string;\n                    // if (branchCount === 0) {\n                    if (stnList[prevId].branch.right[0] === 'through') {\n                        branches.push([curId]);\n                        stack.push(branchNextId);\n                    } else {\n                        if (branchCount === 0) {\n                            branches.push([prevId]);\n                            stack.push(branchNextId);\n                            // all branching out nodes are added to stack in the first loop\n                        }\n                    }\n                    curId = children.filter(stnId => stnId != branchNextId)[0];\n                    break;\n            }\n            branches[branchCount].push(curId);\n\n            if (prevId === stnList[curId].branch.left[1]) {\n                break;\n            }\n        }\n        // branches[branchCount] = curBranch;\n        branchCount++;\n    }\n\n    return branches;\n};\n\n/**\n * Getter of all routes (行車交路) of the line (both ends included). The first branch must be the main line.\n * @example MTREastRailLine.branches\n * /*\n * [0]: [LineStart, Lo Wu, Sheung Shui, ..., Hung Hom, LineEnd]\n * [1]: [LineStart, Lok Ma Chau, Sheung Shui, ..., Hung Hom, LineEnd]\n * [2]: [LineStart, Lo Wu, Sheung Shui, ..., University, Racecourse, Sha Tin, ..., Hung Hom, LineEnd]\n * [3]: [LineStart, Lok Ma Chau, Sheung Shui, ..., University, Racecourse, Sha Tin, ..., Hung Hom, LineEnd]\n * /\n */\nexport const getRoutes = (stnList: StationDict) => {\n    console.log('computing routes');\n\n    var stack = ['linestart'];\n    var branches = [['linestart']];\n    var branchCount = 0;\n\n    while (stack.length) {\n        var curId = stack.shift() as string;\n        var prevId = branches[branchCount].slice().reverse()[0] || null;\n        if (prevId && curId !== 'linestart') {\n            branches[branchCount].push(curId);\n        } else {\n            branches[branchCount] = [curId];\n        }\n        while (curId !== 'lineend') {\n            prevId = curId;\n            var children = stnList[prevId].children;\n            switch (children.length) {\n                case 1:\n                    curId = children[0];\n                    break;\n                case 2:\n                    var branchNextId = stnList[prevId].branch.right[1] as string;\n                    // if (branchCount === 0) {\n                    if (stnList[prevId].branch.right[0] === 'through') {\n                        branches.push(branches[branchCount].slice());\n                        stack.push(branchNextId);\n                    } else {\n                        if (branchCount === 0) {\n                            branches.push([prevId]);\n                            stack.push(branchNextId);\n                        }\n                        // branches.push([prevId]);\n                    }\n                    // stack.push(branchNextId);\n                    // }\n                    curId = children.filter(stnId => stnId != branchNextId)[0];\n                    break;\n            }\n            branches[branchCount].push(curId);\n\n            if (prevId === stnList[curId].branch.left[1] && stnList[curId].branch.left[0] === 'nonthrough') {\n                break;\n            }\n        }\n        // branches[branchCount] = curBranch;\n        branchCount++;\n    }\n\n    return branches;\n};\n\n/**\n * Memo of topological ordering for all stations by stacking all branches into an one-dimensional array.\n * @param branches Branches from `useBranches` memo\n */\nexport const useTpo = (branches: string[][]) => {\n    const [tpo, setTpo] = React.useState([] as string[]);\n\n    React.useEffect(() => {\n        console.log('computing tpo');\n        if (branches.length === 1) {\n            setTpo(branches[0].slice(1, -1));\n            return;\n        } else {\n            let res = branches\n                .reduce(\n                    (acc, cur) => {\n                        let idx = acc.indexOf(cur.slice(-1)[0]);\n                        return acc.slice(0, idx).concat(cur.slice(1), acc.slice(idx + 1));\n                    },\n                    ['lineend']\n                )\n                .slice(0, -1);\n            setTpo(res);\n            return;\n        }\n    }, [branches.toString()]);\n\n    return tpo;\n};\n","import { StationInfo, Note } from './types';\n\nexport function rgb2Hex(rgb: string) {\n    let hex = rgb\n        .match(/[\\d]+/g)\n        ?.map(dec =>\n            Number(dec)\n                .toString(16)\n                .padStart(2, '0')\n        )\n        .join('');\n    switch (hex) {\n        case '000000':\n            return '#000';\n        case 'ffffff':\n            return '#fff';\n        default:\n            return '#' + hex;\n    }\n}\n\nexport function updateParam() {\n    var param = JSON.parse(localStorage.rmgParam) as { [x: string]: any };\n\n    // Version 0.10\n    if (!('line_name' in param)) {\n        param.line_name = ['路線名', 'Name of Line'];\n    }\n    if (!('dest_legacy' in param)) {\n        param.dest_legacy = false;\n    }\n\n    // Version 0.11\n    delete param.fontZH;\n    delete param.fontEN;\n    delete param.weightZH;\n    delete param.weightEN;\n\n    // Version 0.12\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('branch' in stnInfo)) {\n            param.stn_list[stnId].branch = { left: [], right: [] };\n            if (stnInfo.children.length === 2) {\n                param.stn_list[stnId].branch.right = ['through', stnInfo.children[1]];\n            } else {\n                param.stn_list[stnId].branch.right = [];\n            }\n            if (stnInfo.parents.length === 2) {\n                param.stn_list[stnId].branch.left = ['through', stnInfo.parents[1]];\n            } else {\n                param.stn_list[stnId].branch.left = [];\n            }\n        }\n    }\n\n    // Version 1.2\n    if (!('psd_num' in param)) {\n        param.psd_num = 1;\n    }\n    if (!('line_num' in param)) {\n        param.line_num = 1;\n    }\n    delete param.style;\n    if (param.theme.length === 3) {\n        param.theme.push('#fff');\n    }\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (['linestart', 'lineend'].includes(stnId)) {\n            continue;\n        }\n        if (!('num' in stnInfo)) {\n            param.stn_list[stnId].num = '00';\n        }\n    }\n\n    // Version 1.3\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if ('interchange' in stnInfo) {\n            stnInfo.interchange.map((arr: any) => {\n                arr.map((intInfo: any) => {\n                    if (intInfo.length === 5) {\n                        intInfo.splice(3, 0, '#fff');\n                    }\n                });\n            });\n        }\n    }\n\n    // Version 1.4\n    if (!('info_panel_type' in param)) {\n        param.info_panel_type = 'panasonic';\n    }\n\n    // Version 1.5\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (stnInfo.change_type === 'osi22_end_p') {\n            param.stn_list[stnId].change_type = 'osi22_pr';\n        }\n        if (stnInfo.change_type === 'osi22_end_u') {\n            param.stn_list[stnId].change_type = 'osi22_ur';\n        }\n    }\n\n    // Version 2.1\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('interchange' in stnInfo)) {\n            param.stn_list[stnId].interchange = [[]];\n        }\n    }\n\n    // Version 2.2\n    if (param.info_panel_type === 'gz_1') {\n        param.info_panel_type = 'gz28';\n    }\n\n    // Version 2.3\n    if (param.info_panel_type === 'panasonic') {\n        param.info_panel_type = 'gz28';\n    }\n    if (param.info_panel_type === 'gz_2') {\n        param.info_panel_type = 'gzgf';\n    }\n    if (param.info_panel_type === 'gz_3') {\n        param.info_panel_type = 'gz3';\n    }\n    if (!('direction_gz_x' in param)) {\n        param.direction_gz_x = 50;\n    }\n    if (!('direction_gz_y' in param)) {\n        param.direction_gz_y = 70;\n    }\n\n    // Version 2.6\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('transfer' in stnInfo)) {\n            param.stn_list[stnId].transfer = {\n                type: stnInfo.change_type?.split('_')[0] as 'none' | 'int2' | 'int3' | 'osi11' | 'osi12' | 'osi22',\n                tick_direc:\n                    stnInfo.change_type === 'none' || stnInfo.change_type === 'int2'\n                        ? 'r'\n                        : (stnInfo.change_type\n                              ?.split('_')[1]\n                              .split('')\n                              .slice()\n                              .reverse()[0] as 'l' | 'r'),\n                paid_area:\n                    stnInfo.change_type?.indexOf('osi') !== -1 ? stnInfo.change_type?.split('_')[1][0] === 'p' : true,\n                osi_names: stnInfo.change_type?.indexOf('osi') !== -1 ? [stnInfo.interchange[1][0]] : [],\n                info:\n                    stnInfo.interchange.length === 2\n                        ? [stnInfo.interchange[0], stnInfo.interchange[1].slice(1)]\n                        : stnInfo.interchange,\n            };\n        }\n    }\n\n    // Version 2.8\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('services' in stnInfo)) {\n            param.stn_list[stnId].services = ['local'];\n        }\n    }\n\n    // Version 2.15\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('usage' in stnInfo)) {\n            param.stn_list[stnId].usage = '';\n        }\n    }\n\n    // Version 3.0\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('facility' in stnInfo)) {\n            param.stn_list[stnId].facility = stnInfo.usage;\n        }\n    }\n\n    // Version 3.4\n    if (!('customiseMTRDest' in param)) {\n        param.customiseMTRDest = { isLegacy: param.dest_legacy || false, terminal: false };\n    }\n\n    // Version 3.4\n    if (!('svgWidth' in param)) {\n        param.svgWidth = {\n            destination: param.svg_dest_width,\n            runin: param.svg_dest_width,\n            railmap: param.svg_width,\n        };\n    }\n\n    if (!('notesGZMTR' in param)) {\n        param.notesGZMTR = [];\n    }\n\n    param.notesGZMTR = param.notesGZMTR?.map((note: any[]) =>\n        note.length === 4 ? note.concat([false]) : note\n    ) as Note[];\n\n    localStorage.setItem('rmgParam', JSON.stringify(param));\n}\n\nexport const getTransText2 = (obj: { [index: string]: string }, langs: string[]) => {\n    return langs.reduce((acc, cur) => (acc ? acc : obj[cur] ? obj[cur] : acc), '');\n};\n\n/**\n * Format display style of station name as `[num: ]nameZH,nameEN`.\n */\nexport const formatStnName = (stnInfo: StationInfo) => {\n    return `${\n        window.urlParams.get('style') === 'gzmtr' ? (stnInfo?.num || '-') + ': ' : ''\n    }${stnInfo?.name.join().replace('\\\\', ' ')}`;\n};\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n.use(Backend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        fallbackLng: {\n            'zh-CN': ['zh-Hans', 'en'],\n            'zh-Hant': ['zh-HK', 'en'],\n            'zh-HK': ['zh-Hant', 'en'],\n            'zh-TW': ['zh-HK', 'zh-Hant'],\n            default: ['en'],\n        },\n        // lng: window.urlParams.get('lang'),\n        debug: true,\n        backend: {\n            // for all available options read the backend's repository readme file\n            loadPath: '/rmg-test-page/locale/{{lng}}.json',\n        },\n\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        },\n    })\n    .then(t => {\n        document.title = t('title');\n        document.documentElement.setAttribute('lang', i18n.language);\n    });\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    AppBar,\n    Toolbar,\n    Tooltip,\n    IconButton,\n    Typography,\n    Icon,\n    makeStyles,\n    createStyles,\n    Menu,\n    MenuItem,\n    Divider,\n    Popper,\n    useMediaQuery,\n} from '@material-ui/core';\nimport { CanvasContext } from './context';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        rootLight: {\n            backgroundColor: theme.palette.primary.main,\n        },\n        rootDark: {\n            backgroundColor: theme.palette.background.paper,\n        },\n        title: {\n            flexGrow: 1,\n            color: '#fff',\n        },\n        menuButton: {\n            color: '#fff',\n        },\n    })\n);\n\nconst AppAppBar = () => {\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n    return React.useMemo(\n        () => (\n            <AppBar position=\"sticky\" className={prefersDarkMode ? classes.rootDark : classes.rootLight}>\n                <Toolbar variant=\"dense\">\n                    <Typography variant=\"h6\" className={classes.title} color=\"textPrimary\">\n                        {t('title')}\n                    </Typography>\n\n                    <CanvasToggle />\n                    <ZoomToggles />\n                </Toolbar>\n            </AppBar>\n        ),\n        [prefersDarkMode, i18n.language]\n    );\n};\n\nexport default AppAppBar;\n\nconst CanvasToggle = () => {\n    const { t } = useTranslation();\n\n    const classes = useStyles();\n\n    const { canvasAvailable, setCanvasToShown } = React.useContext(CanvasContext);\n    const [canvasButtonEl, setCanvasButtonEl] = React.useState<null | HTMLElement>(null);\n    const handleClick = (action: ProvidedCanvas | 'all') => () => {\n        setCanvasToShown(action);\n        setCanvasButtonEl(null);\n    };\n\n    return React.useMemo(\n        () => (\n            <>\n                <Tooltip title={t('toggle.tooltip')}>\n                    <IconButton onClick={e => setCanvasButtonEl(e.currentTarget)} className={classes.menuButton}>\n                        <Icon>photo_library</Icon>\n                    </IconButton>\n                </Tooltip>\n                <Menu anchorEl={canvasButtonEl} open={Boolean(canvasButtonEl)} onClose={() => setCanvasButtonEl(null)}>\n                    {canvasAvailable.map((c: ProvidedCanvas) => (\n                        <MenuItem key={c} onClick={handleClick(c)}>\n                            {t('toggle.' + c)}\n                        </MenuItem>\n                    ))}\n                    <Divider style={{ margin: '6px 0' }} />\n                    <MenuItem onClick={handleClick('all')}>{t('toggle.all')}</MenuItem>\n                </Menu>\n            </>\n        ),\n        [canvasAvailable.toString(), canvasButtonEl, classes.menuButton]\n    );\n};\n\nconst ZoomToggles = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const { setCanvasScale } = React.useContext(CanvasContext);\n    return React.useMemo(\n        () => (\n            <>\n                <Tooltip title={t('zoom.out')}>\n                    <IconButton\n                        onClick={() =>\n                            setCanvasScale((prevScale: number) => (prevScale <= 0.1 ? prevScale : prevScale - 0.1))\n                        }\n                        className={classes.menuButton}\n                    >\n                        <Icon>zoom_out</Icon>\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title={t('zoom.in')}>\n                    <IconButton\n                        onClick={() => setCanvasScale((prevScale: number) => prevScale + 0.1)}\n                        className={classes.menuButton}\n                    >\n                        <Icon>zoom_in</Icon>\n                    </IconButton>\n                </Tooltip>\n            </>\n        ),\n        [classes.menuButton]\n    );\n};\n","import * as React from 'react';\n\nconst Destination = (style => {\n    switch (style) {\n        case 'shmetro':\n            return React.lazy(() => import(/* webpackChunkName: \"destinationSHMetro\" */ './destination-shmetro'));\n        default:\n            return React.lazy(() => import(/* webpackChunkName: \"destinationMTR\" */ './destination-mtr'));\n    }\n})(window.urlParams.get('style'));\n\nconst DestinationBase = (props: React.SVGProps<SVGSVGElement> & { children?: React.ReactNode }) => (\n    <svg {...props}>\n        {props.children}\n        <Destination />\n    </svg>\n);\n\nexport default DestinationBase;\n","import Destination from './destination';\n\nexport default Destination;\n","import React from 'react';\n\nconst RunIn = (style => {\n    switch (style) {\n        case 'shmetro':\n            return React.lazy(() => import(/* webpackChunkName: \"runinSHMetro\" */ './runin-shmetro'));\n        default:\n            return React.lazy(() => import(/* webpackChunkName: \"runinMTR\" */ './runin-gzmtr'));\n    }\n})(window.urlParams.get('style'));\n\nconst RunInBase = (props: React.SVGProps<SVGSVGElement> & { children?: React.ReactNode }) => (\n    <svg {...props}>\n        {props.children}\n        <RunIn />\n    </svg>\n);\n\nexport default RunInBase;\n","import RunIn from './runin';\n\nexport default RunIn;\n","import * as React from 'react';\n\nconst RailMap = (style => {\n    switch (style) {\n        case 'gzmtr':\n            return React.lazy(() => import(/* webpackChunkName: \"railmapGZMTR\" */ './railmap-gzmtr'));\n        case 'shmetro':\n            return React.lazy(() => import(/* webpackChunkName: \"railmapSHMetro\" */ './railmap-shmetro'));\n        default:\n            return React.lazy(() => import(/* webpackChunkName: \"railmapMTR\" */ './railmap-mtr'));\n    }\n})(window.urlParams.get('style'));\n\nconst RailMapBase = (props: React.SVGProps<SVGSVGElement> & { children?: React.ReactNode }) => (\n    <svg {...props}>\n        {props.children}\n        <RailMap />\n    </svg>\n);\n\nexport default RailMapBase;\n","import RailMap from './railmap';\n\nexport default RailMap;\n","import React from 'react';\nimport Destination from './destination';\nimport RunIn from './runin';\nimport RailMap from './railmap';\nimport { makeStyles, createStyles, CircularProgress } from '@material-ui/core';\nimport { CanvasContext, ParamContext } from '../context';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexDirection: 'row',\n            overflowX: 'scroll',\n            '&::before, &::after': {\n                content: '\"\"',\n                margin: 'auto',\n            },\n            '& > svg': {\n                flex: '0 0 auto',\n                border: '1px solid black',\n            },\n        },\n    })\n);\n\nconst SVGs = () => {\n    const classes = useStyles();\n\n    const { param } = React.useContext(ParamContext);\n    const { canvasAvailable, canvasToShown, canvasScale } = React.useContext(CanvasContext);\n\n    const sharedProps = (canvas: ProvidedCanvas): React.SVGProps<SVGSVGElement> & { children?: React.ReactNode } => ({\n        id: canvas,\n        xmlns: 'http://www.w3.org/2000/svg',\n        xmlnsXlink: 'http://www.w3.org/1999/xlink',\n        height: param.svg_height * canvasScale,\n        viewBox: `0 0 ${param.svgWidth[canvas]} ${param.svg_height}`,\n        style: {\n            ['--rmg-svg-width' as any]: param.svgWidth[canvas] + 'px',\n            ['--rmg-svg-height' as any]: param.svg_height + 'px',\n            ['--rmg-theme-colour' as any]: param.theme[2],\n            ['--rmg-theme-fg' as any]: param.theme[3],\n        },\n        children: (\n            <rect\n                x={0}\n                y={0}\n                fill=\"white\"\n                stroke=\"none\"\n                style={{ height: 'var(--rmg-svg-height)', width: 'var(--rmg-svg-width)' }}\n            />\n        ),\n    });\n\n    return (\n        <div className={classes.root}>\n            {canvasAvailable.map(\n                canvas =>\n                    [canvas, 'all'].includes(canvasToShown) && (\n                        <React.Suspense key={canvas} fallback={<CircularProgress />}>\n                            {(c => {\n                                switch (c) {\n                                    case 'destination':\n                                        return <Destination {...sharedProps(c)} />;\n                                    case 'runin':\n                                        return <RunIn {...sharedProps(c)} />;\n                                    case 'railmap':\n                                        return <RailMap {...sharedProps(c)} />;\n                                }\n                            })(canvas)}\n                        </React.Suspense>\n                    )\n            )}\n        </div>\n    );\n};\n\nexport default SVGs;\n","import SVGs from './svg';\n\nexport default SVGs;","import * as React from 'react';\n\nimport { Typography, Box, CircularProgress, Tabs, Tab, Icon, makeStyles, createStyles } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nconst PanelSave = React.lazy(() => import(/* webpackChunkName: \"panelSave\" */ './save'));\nconst PanelLayout = React.lazy(() => import(/* webpackChunkName: \"panelLayout\" */ './layout'));\nconst PanelDesign = React.lazy(() => import(/* webpackChunkName: \"panelDesign\" */ './design'));\nconst PanelStations = React.lazy(() => import(/* webpackChunkName: \"panelStations\" */ './stations'));\nconst PanelInfo = React.lazy(() => import(/* webpackChunkName: \"panelInfo\" */ './panel-info'));\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        typography: {\n            background: theme.palette.background.default,\n        },\n        tab: {\n            padding: '6px 24px',\n            height: 48,\n            minWidth: 'calc(100% / 5)',\n            '& .MuiTab-wrapper': {\n                flexDirection: 'row',\n            },\n            '&.MuiTab-labelIcon': {\n                minHeight: 'unset',\n                '& .MuiTab-wrapper': {\n                    '& > *:first-child': {\n                        marginBottom: 0,\n                    },\n                    '& > *:not(first-child)': {\n                        paddingLeft: 8,\n                    },\n                },\n            },\n        },\n        box: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n    })\n);\n\ninterface Props {\n    param: RMGParam;\n    paramUpdate: (key: string, data: any) => void;\n    tpo: string[];\n}\n\nexport default function PanelTab(props: Props) {\n    const { t, i18n } = useTranslation();\n\n    const classes = useStyles();\n\n    const [value, setValue] = React.useState(0);\n\n    const panel = (index: number) => {\n        switch (index) {\n            case 0:\n                return <PanelSave />;\n            case 1:\n                return <PanelLayout />;\n            case 2:\n                return <PanelDesign />;\n            case 3:\n                return (\n                    <PanelStations\n                        theme={props.param.theme}\n                        stnList={props.param.stn_list}\n                        currentId={props.param.current_stn_idx}\n                        paramUpdate={props.paramUpdate}\n                        tpo={props.tpo}\n                    />\n                );\n            case 4:\n                return <PanelInfo />;\n            default:\n                return <PanelSave />;\n        }\n    };\n\n    const tabNav = React.useMemo(\n        () => (\n            <Typography className={classes.typography} component=\"div\">\n                <Tabs\n                    value={value}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(_, val) => setValue(val)}\n                    variant=\"scrollable\"\n                    scrollButtons=\"off\"\n                >\n                    {[\n                        ['file', 'insert_drive_file'],\n                        ['layout', 'panorama'],\n                        ['design', 'brush'],\n                        ['stations', 'directions_transit'],\n                        ['info', 'info'],\n                    ].map((val, i) => (\n                        <Tab\n                            label={<span>{t('tab.' + val[0])}</span>}\n                            icon={<Icon>{val[1]}</Icon>}\n                            key={i}\n                            className={classes.tab}\n                        />\n                    ))}\n                    />\n                </Tabs>\n            </Typography>\n        ),\n        [value, i18n.language, classes.tab]\n    );\n\n    return (\n        <>\n            {tabNav}\n            <Typography className={classes.typography} component=\"div\" role=\"tabpanel\" style={{ overflow: 'auto' }}>\n                <Box p={3} className={classes.box}>\n                    <React.Suspense fallback={<CircularProgress />}>{panel(value)}</React.Suspense>\n                </Box>\n            </Typography>\n        </>\n    );\n}\n","import * as React from 'react';\nimport { CircularProgress } from '@material-ui/core';\n\nimport PanelTabs from './panels';\n\ninterface Props {\n    param: RMGParam;\n    paramUpdate: (key: string, data: any) => void;\n    tpo: string[];\n}\n\nexport default (props: Props) => {\n    return (\n        <React.Suspense fallback={<CircularProgress />}>\n            <PanelTabs {...props} />\n        </React.Suspense>\n    );\n};\n","import React, { useState, useMemo, useEffect, useReducer } from 'react';\nimport AppAppBar from './app-appbar';\nimport SVGs from './svgs';\nimport Panels from './panels';\nimport { getBranches, useTpo, getRoutes } from './methods';\nimport { CanvasContext, ParamContext, paramReducer } from './context';\nimport { createMuiTheme, ThemeProvider, useMediaQuery, LinearProgress } from '@material-ui/core';\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: '#bb86fc',\n        },\n        secondary: {\n            main: '#018786',\n        },\n        error: {\n            main: '#cf6679',\n        },\n    },\n    // palette: {\n    //     type: 'dark',\n    //     primary: {\n    //         main: '#8ab4f8',\n    //     },\n    // },\n    overrides: {\n        MuiDialog: {\n            paper: {\n                minWidth: 280,\n            },\n        },\n    },\n});\n\nconst lightTheme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#bb86fc',\n            main: '#6200ee',\n        },\n        secondary: {\n            main: '#018786',\n        },\n        error: {\n            main: '#b00020',\n        },\n    },\n    // palette: {\n    //     primary: {\n    //         main: '#1a73e8',\n    //     },\n    //     text: {\n    //         primary: '#202124',\n    //         secondary: '#5f6368',\n    //     },\n    // },\n    overrides: {\n        MuiDialog: {\n            paper: {\n                minWidth: 280,\n            },\n        },\n    },\n});\n\nexport default function App(props: { canvas: ProvidedCanvas[] }) {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const theme = prefersDarkMode ? darkTheme : lightTheme;\n\n    const [canvasToShown, setCanvasToShown] = useState<'all' | ProvidedCanvas>(\n        props.canvas.includes(localStorage.rmgCanvas) ? localStorage.rmgCanvas : 'all'\n    );\n    useEffect(() => localStorage.setItem('rmgCanvas', canvasToShown), [canvasToShown]);\n    const [canvasScale, setCanvasScale] = useState(\n        Number(localStorage.rmgScale) >= 0.1 ? Number(localStorage.rmgScale) : 1\n    );\n    useEffect(() => localStorage.setItem('rmgScale', canvasScale.toFixed(1)), [canvasScale]);\n\n    return (\n        <>\n            <ThemeProvider theme={theme}>\n                <CanvasContext.Provider\n                    value={{\n                        canvasAvailable: props.canvas,\n                        canvasToShown,\n                        setCanvasToShown,\n                        canvasScale,\n                        setCanvasScale,\n                    }}\n                >\n                    <React.Suspense fallback={<LinearProgress />}>\n                        <AppAppBar />\n                    </React.Suspense>\n                    <AppBody />\n                </CanvasContext.Provider>\n            </ThemeProvider>\n        </>\n    );\n}\n\nconst AppBody = () => {\n    const [param, dispatch] = useReducer(paramReducer, JSON.parse(localStorage.rmgParam) as RMGParam);\n    const paramString = JSON.stringify(param);\n    useEffect(() => localStorage.setItem('rmgParam', paramString), [paramString]);\n\n    const deps = Object.keys(param.stn_list).reduce(\n        (acc, cur) =>\n            acc +\n            cur +\n            ((...k: (keyof StationInfo)[]) => (o: StationInfo) => k.reduce((a, c) => a + JSON.stringify(o[c]), ''))(\n                'parents',\n                'children',\n                'branch'\n            )(param.stn_list[cur]),\n        ''\n    );\n\n    const branches = useMemo(() => getBranches(param.stn_list), [deps]);\n    const routes = useMemo(() => getRoutes(param.stn_list), [deps]);\n    const tpo = useTpo(branches);\n\n    const handleUpdate = (key: string, data: any) => dispatch({ type: 'ANY', key, data });\n\n    return (\n        <>\n            <ParamContext.Provider\n                value={{\n                    param,\n                    dispatch,\n                    branches,\n                    routes,\n                    deps,\n                }}\n            >\n                <SVGs />\n                <div style={{ flex: 1, overflow: 'auto', display: 'flex', flexDirection: 'column' }}>\n                    <Panels param={param} paramUpdate={handleUpdate} tpo={tpo} />\n                </div>\n            </ParamContext.Provider>\n            <canvas style={{ display: 'none' }} />\n        </>\n    );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './index.css';\nimport './i18n';\nimport App from './App';\nimport { updateParam } from './utils';\nimport * as serviceWorker from './serviceWorker';\n\ndeclare global {\n    interface Window {\n        urlParams: URLSearchParams;\n        gtag: any;\n    }\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nswitch (window.urlParams.get('style')) {\n    case 'mtr':\n    case 'gzmtr':\n    case 'shmetro':\n        break;\n    default:\n        window.urlParams.set('style', 'mtr');\n}\nwindow.history.pushState({ url: window.location.href }, '', '?' + window.urlParams.toString());\n\n/**\n * @param style Style selected\n * @returns An ordered array of the provided canvases' id.\n */\nconst canvasAvailable = ((style): ProvidedCanvas[] => {\n    switch (style) {\n        case 'mtr':\n            return ['destination', 'railmap'];\n        case 'gzmtr':\n            return ['runin', 'railmap'];\n        case 'shmetro':\n            return ['destination', 'runin', 'railmap'];\n        default:\n            return [];\n    }\n})(window.urlParams.get('style'));\n\n// load stylesheets on demand\ndocument.head.append(\n    ...['share', ...canvasAvailable].map(tag => {\n        let link = document.createElement('link');\n        link.rel = 'stylesheet';\n        link.href = `/rmg-test-page/styles/${tag}_${window.urlParams.get('style')}.css`;\n        link.id = `css_${tag}`;\n        return link;\n    })\n);\n\nconst renderApp = () => {\n    ReactDOM.render(<App canvas={canvasAvailable} />, document.querySelectorAll('div#root')[0]);\n};\n\nif (localStorage.rmgParam) {\n    try {\n        updateParam();\n    } catch (err) {\n        alert(err + 'Something error! Please refresh to start from a new canvas. ');\n        console.error(err);\n        localStorage.removeItem('rmgParam');\n    }\n    renderApp();\n} else {\n    import('./panels/save/template-diag/templates/basic/blank')\n        .then(module => {\n            localStorage.setItem('rmgParam', JSON.stringify(module.default));\n            updateParam();\n        })\n        .then(() => renderApp());\n}\n"],"sourceRoot":""}