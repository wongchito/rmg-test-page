{"version":3,"sources":["svgs/destination/destination-shmetro.tsx"],"names":["DestinationSHMetro","DefsSHMetro","InfoSHMetro","React","id","d","fill","ParamContext","param","routes","destTextEl","width","bcr","flagLength","dh","svg_height","isLeft","direction","arrowX","svgWidth","destination","arrowRotate","validDests","Array","from","Set","filter","route","includes","current_stn_idx","map","res","stnId","reverse","lineNameX","line_name","lineNameZH","lineNameEN","lineNumber","match","transform","xlinkHref","ref","style","textAnchor","className","fontSize","stn_list","name","join","dy","replace","height","dominantBaseline","letterSpacing","dx"],"mappings":"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","file":"static/js/destinationSHMetro.65fa7636.chunk.js","sourcesContent":["import * as React from 'react';\nimport { ParamContext } from '../../context';\n\nconst DestinationSHMetro = () => {\n    return (\n        <>\n            <DefsSHMetro />\n            <InfoSHMetro />\n        </>\n    );\n};\n\nexport default DestinationSHMetro;\n\nconst DefsSHMetro = React.memo(() => (\n    <defs>\n        <path id=\"arrow_left\" d=\"M 60,60 L 0,0 L 60,-60 H 100 L 55,-15 H 160 V 15 H 55 L 100,60z\" fill=\"black\" />\n    </defs>\n));\n\nconst InfoSHMetro = () => {\n    const { param, routes } = React.useContext(ParamContext);\n\n    const destTextEl = React.createRef<SVGGElement>();\n    const [bcr, setBcr] = React.useState({ width: 0 } as DOMRect);\n    // Chito: bcr.width = 0 or based on dest_text?\n    // React.useEffect(() => setBcr(destTextEl.current.getBoundingClientRect()), []);\n    const flagLength = 160 + 150 + bcr.width + 45 + 50;\n\n    // get the height\n    const dh = param.svg_height - 300;\n\n    // arrow\n    const isLeft = param.direction == 'l' ? 1 : -1;\n    let arrowX = (param.svgWidth.destination - isLeft * flagLength) / 20;\n    arrowX = param.direction == 'l' ? arrowX : param.svgWidth.destination - 20;\n    const arrowRotate = 90 * (1 - isLeft);\n\n    // not in use now\n    const platformNumX = arrowX + isLeft * (160 + 50 + 75);\n\n    // for each left valid destinations, get the name from id\n    const validDests = Array.from(\n        new Set(\n            routes\n                .filter(route => route.includes(param.current_stn_idx))\n                .map(route => {\n                    let res = route.filter(stnId => !['linestart', 'lineend'].includes(stnId));\n                    return param.direction === 'l' ? res[0] : res.reverse()[0];\n                })\n        )\n    );\n\n    // prepare for the line name\n    let lineNameX = param.direction === 'l' ? param.svgWidth.destination : 360;\n    let [lineNameZH, lineNameEN] = param.line_name;\n\n    // line starts with numbers or letters\n    const lineNumber = lineNameZH.match(/(\\d*)\\w+/);\n    if (lineNumber) {\n        lineNameX -= 180;\n        lineNameZH = '号线';\n    } else {\n        lineNameX -= 280;\n    }\n\n    // the platform screen doors flash light\n    // #20\n    // $('g#station_info_shmetro > rect').attr({ transform: `translate(${this._svgDestWidth / 2},${250 + dh})` })\n\n    return (\n        <g id=\"station_info_shmetro\">\n            <path\n                id=\"line_shmetro_use\"\n                fill=\"var(--rmg-theme-colour)\"\n                d={\n                    param.direction === 'l'\n                        ? `M38,10 H ${param.svgWidth.destination - 20} l 0,12 H 24 Z`\n                        : `M24,10 H ${param.svgWidth.destination - 30} l 12,12 H 24 Z`\n                }\n                transform={`translate(0,${220 + dh})`}\n            />\n            <use\n                id=\"arrow_left_use\"\n                xlinkHref=\"#arrow_left\"\n                transform={`translate(${arrowX},${135 + dh})rotate(${arrowRotate})`}\n            />\n            {/* <!-- Todo: fix this absolute position --> */}\n            {/* Todo: fix svgWidth.destination*0.8, this has only been tested on 1000 width */}\n            <g\n                ref={destTextEl}\n                id=\"dest_text\"\n                style={{\n                    textAnchor: param.direction === 'l' ? 'start' : 'end',\n                    transform: `translate(${param.svgWidth.destination *\n                        (param.direction === 'l' ? 0.2 : 0.8)}px,${135 + dh}px)`,\n                }}\n            >\n                <text className=\"rmg-name__zh rmg-name__shmetro--dest\" fontSize=\"400%\">\n                    {'往' + validDests.map(id => param.stn_list[id].name[0]).join('，')}\n                </text>\n                <text className=\"rmg-name__en rmg-name__shmetro--dest\" fontSize=\"150%\" dy={40}>\n                    {'To ' +\n                        validDests\n                            .map(id => param.stn_list[id].name[1])\n                            .join(', ')\n                            .replace('\\\\', ' ')}\n                </text>\n            </g>\n            <g id=\"line_number\">\n                <rect\n                    fill=\"var(--rmg-theme-colour)\"\n                    transform={\n                        lineNumber\n                            ? `translate(${lineNameX - 150},${70 + dh})`\n                            : `translate(${lineNameX - 10},${60 + dh})`\n                    }\n                    width={lineNumber ? 125 : 260}\n                    height={lineNumber ? 125 : 150}\n                />\n                {lineNumber && (\n                    <text\n                        className=\"rmg-name__zh rmg-name__shmetro--line_number\"\n                        fill=\"var(--rmg-theme-fg)\"\n                        fontSize=\"700%\"\n                        textAnchor=\"middle\"\n                        dominantBaseline=\"central\"\n                        transform={`translate(${lineNameX - 87.5},${132.5 + dh})`}\n                        style={{ letterSpacing: '-5px' }}\n                    >\n                        {lineNumber[0]}\n                    </text>\n                )}\n            </g>\n            <g\n                id=\"line_name_text\"\n                fill={lineNumber ? 'black' : 'var(--rmg-theme-fg)'}\n                transform={`translate(${lineNameX},${135 + dh})`}\n                textAnchor=\"start\"\n            >\n                <text className=\"rmg-name__zh rmg-name__shmetro--line_name\" fontSize=\"500%\">\n                    {lineNameZH}\n                </text>\n                {/* // Todo: set the eng in the middle */}\n                <text\n                    className=\"rmg-name__en rmg-name__shmetro--line_name\"\n                    fontSize=\"200%\"\n                    dy={60}\n                    dx={lineNumber ? 0 : 50}\n                >\n                    {lineNameEN}\n                </text>\n            </g>\n            {/* <!-- # 20 <rect width=\"40\" height=\"30\" fill=\"orange\"/> --> */}\n        </g>\n    );\n};\n"],"sourceRoot":""}