{"version":3,"sources":["panels/stations/edit-diag/name-list-items.tsx","panels/stations/edit-diag/num-list-item.tsx","panels/stations/edit-diag/name-tab.tsx"],"names":["useStyles","makeStyles","createStyles","listItemIcon","width","fontSize","textAlign","NameListItems","props","t","useTranslation","classes","React","className","style","variant","label","onChange","onUpdate","value","name","helperText","toString","NumListItem","ParamContext","param","dispatch","ListItem","ListItemIcon","Icon","TextField","e","type","stnId","num","target","stn_list","NameTab","stnInfo","List","index","event","map","val","i","window","urlParams","get"],"mappings":"iIAAA,gEAKMA,EAAYC,aAAW,kBACzBC,YAAa,CACTC,aAAc,CACVC,MAAO,MACPC,SAAU,SACVC,UAAW,eA2CRC,IAjCO,SAACC,GAAkB,IAC7BC,EAAMC,cAAND,EACFE,EAAUX,IAEhB,OAAOY,WAAc,kBACjB,gCACI,gBAAC,IAAD,KACI,gBAAC,IAAD,KACI,wBAAMC,UAAWF,EAAQR,cAAzB,WAEJ,gBAAC,IAAD,CACIW,MAAO,CAACV,MAAO,QACfW,QAAQ,WACRC,MAAOP,EAAE,6BACTQ,SAAUT,EAAMU,SAAS,GACzBC,MAAOX,EAAMY,KAAK,MAE1B,gBAAC,IAAD,KACI,gBAAC,IAAD,KACI,wBAAMP,UAAWF,EAAQR,cAAzB,MAEJ,gBAAC,IAAD,CACIW,MAAO,CAACV,MAAO,QACfW,QAAQ,WACRC,MAAOP,EAAE,6BACTQ,SAAUT,EAAMU,SAAS,GACzBC,MAAOX,EAAMY,KAAK,GAClBC,WAAYZ,EAAE,yCAG3B,CAACD,EAAMY,KAAKE,e,yHClBJC,EAvBK,SAACf,GAAkB,IAC3BC,EAAMC,cAAND,EAD0B,EAENG,aAAiBY,KAArCC,EAF0B,EAE1BA,MAAOC,EAFmB,EAEnBA,SAEf,OAAOd,WAAc,kBACjB,gBAACe,EAAA,EAAD,KACI,gBAACC,EAAA,EAAD,KACI,gBAACC,EAAA,EAAD,mBAEJ,gBAACC,EAAA,EAAD,CACIhB,MAAO,CAAEV,MAAO,QAChBW,QAAQ,WACRC,MAAOP,EAAE,0BACTQ,SAAU,SAAAc,GAAC,OAAIL,EAAS,CACpBM,KAAM,qBACNC,MAAOzB,EAAMyB,MACbC,IAAKH,EAAEI,OAAOhB,SAElBA,MAAOM,EAAMW,SAAS5B,EAAMyB,OAAOC,SAE5C,CAAC1B,EAAMyB,MAAOR,EAAMW,SAAS5B,EAAMyB,OAAOC,OCIlCG,UApBC,SAAC7B,GAAkB,IAAD,EACFI,aAAiBY,KAArCC,EADsB,EACtBA,MAAOC,EADe,EACfA,SACTY,EAAUb,EAAMW,SAAS5B,EAAMyB,OAUrC,OACI,gBAACM,EAAA,EAAD,KACI,gBAAC,IAAD,CAAenB,KAAMkB,EAAQlB,KAAMF,SAVtB,SAACsB,GAAD,OAAmB,SAACC,GACrCf,EAAS,CACLM,KAAM,sBACNC,MAAOzB,EAAMyB,MACbb,KAAMkB,EAAQlB,KAAKsB,KAAI,SAACC,EAAKC,GAAN,OAAYJ,IAAQI,EAAIH,EAAMN,OAAOhB,MAAQwB,WAOjC,UAAlCE,OAAOC,UAAUC,IAAI,UAAwB,gBAAC,EAAD,CAAad,MAAOzB,EAAMyB","file":"static/js/panelStationsName.fb19935b.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ListItem, ListItemIcon, TextField, makeStyles, createStyles } from '@material-ui/core';\nimport { Name } from '../../../types';\n\nconst useStyles = makeStyles(() => (\n    createStyles({\n        listItemIcon: {\n            width: '1em', \n            fontSize: '1.5rem', \n            textAlign: 'center',\n        }\n    })\n));\n\ninterface Props {\n    onUpdate: (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => void;\n    name: Name;\n}\n\nconst NameListItems = (props: Props) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    return React.useMemo(() => (\n        <>\n            <ListItem>\n                <ListItemIcon>\n                    <span className={classes.listItemIcon}>æ¼¢</span>\n                </ListItemIcon>\n                <TextField \n                    style={{width: '100%'}}\n                    variant=\"outlined\"\n                    label={t('stations.edit.name.nameZH')}\n                    onChange={props.onUpdate(0)}\n                    value={props.name[0]} />\n            </ListItem>\n            <ListItem>\n                <ListItemIcon>\n                    <span className={classes.listItemIcon}>A</span>\n                </ListItemIcon>\n                <TextField \n                    style={{width: '100%'}}\n                    variant=\"outlined\"\n                    label={t('stations.edit.name.nameEN')}\n                    onChange={props.onUpdate(1)}\n                    value={props.name[1]}\n                    helperText={t('stations.edit.name.nameENHelper')} />\n            </ListItem>\n        </>\n    ), [props.name.toString()]);\n};\n\nexport default NameListItems;","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ListItem, ListItemIcon, Icon, TextField } from '@material-ui/core';\nimport { ParamContext } from '../../../context';\n\ninterface Props {\n    stnId: string;\n}\n\nconst NumListItem = (props: Props) => {\n    const { t } = useTranslation();\n    const { param, dispatch } = React.useContext(ParamContext);\n\n    return React.useMemo(() => (\n        <ListItem>\n            <ListItemIcon>\n                <Icon>looks_one</Icon>\n            </ListItemIcon>\n            <TextField\n                style={{ width: '100%' }}\n                variant=\"outlined\"\n                label={t('stations.edit.name.num')}\n                onChange={e => dispatch({\n                    type: 'UPDATE_STATION_NUM',\n                    stnId: props.stnId,\n                    num: e.target.value,\n                })}\n                value={param.stn_list[props.stnId].num} />\n        </ListItem>\n    ), [props.stnId, param.stn_list[props.stnId].num]);\n};\n\nexport default NumListItem;","import * as React from 'react';\n\nimport { List } from '@material-ui/core';\nimport { Name } from '../../../types';\n\nimport NameListItems from './name-list-items';\nimport NumListItem from './num-list-item';\nimport { ParamContext } from '../../../context';\n\ninterface Props {\n    stnId: string;\n}\n\nconst NameTab = (props: Props) => {\n    const { param, dispatch } = React.useContext(ParamContext);\n    const stnInfo = param.stn_list[props.stnId];\n\n    const handleUpdate = (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch({\n            type: 'UPDATE_STATION_NAME', \n            stnId: props.stnId, \n            name: stnInfo.name.map((val, i) => index===i ? event.target.value : val) as Name,\n        });\n    };\n\n    return (\n        <List>\n            <NameListItems name={stnInfo.name} onUpdate={handleUpdate} />\n            {window.urlParams.get('style') === 'gzmtr' && <NumListItem stnId={props.stnId} />}\n        </List>\n    );\n};\n\nexport default NameTab;"],"sourceRoot":""}